{"version":3,"sources":["config/Themization.js","../../contracts/src/config.js","../../contracts/src/addresses.js","../../contracts/src/index.js","components/SharedStyling.js","serviceWorker.js","connectors.ts","hooks.ts","components/BlockiesIdenticon.js","components/Profile.tsx","components/Bell.js","config/Globals.js","components/NavigationButton.js","contexts/NavigationContext.js","sections/Header.tsx","config/NavigationList.js","redux/slices/userJourneySlice.js","sections/Navigation.tsx","helpers/EPNSCoreHelper.js","components/NotificationToast.js","components/DisplayNotice.js","components/SearchFilter.jsx","redux/slices/notificationSlice.js","segments/Feedbox.tsx","api/index.js","singletons/ChannelsDataStore.js","singletons/UsersDataStore.js","redux/slices/contractSlice.js","pages/InboxPage.js","config/index.js","components/AliasVerificationModal.js","components/ViewInfoItem.js","segments/Info.tsx","redux/slices/spamSlice.js","segments/spam.tsx","segments/Spambox.tsx","helpers/UtilityHelper.js","assets/Device.js","components/MetaInfoDisplayer.js","config/channelTuts.js","segments/ChannelTutorial.js","redux/slices/channelSlice.js","components/ViewChannelItem.js","components/Faucets.js","segments/ViewChannels.tsx","assets/icons/index.js","components/SendNotifications.tsx","segments/ChannelCreationDashboard.js","redux/slices/adminSlice.js","pages/DeprecatedHome.js","components/AddDelegateModal.js","components/RemoveDelegateModal.js","components/ActivateChannelModal.js","components/ChannelSettingsDropdown.tsx","components/ChannelSettings.jsx","components/ChannelDetails.js","segments/ChannelOwnerDashboard.js","pages/SpamPage.js","pages/ViewChannelsPage.js","pages/ChannelDashboardPage.js","pages/ReceiveNotifsPage.js","components/ViewDelegateeItem.js","pages/GovernancePage.tsx","singletons/YieldFarmingDataStore.js","components/InfoTooltip.js","components/PoolCard.js","pages/YieldFarmingPage.js","helpers/NFTHelper.js","components/ViewNFTItem.js","components/MyNFTs.js","components/AllNFTs.js","components/TransferNFT.js","pages/NFTPage.js","pages/AirdropPage.tsx","pages/ComingSoonPage.tsx","pages/TutorialPage.tsx","pages/FAQPage.tsx","pages/SupportPage.jsx","pages/MasterInterfacePage.tsx","segments/userJourneySteps.jsx","App.tsx","redux/store.js","index.js","helpers/CryptoHelper.js","components/CreateChannel.js","components/blockies.js","helpers/AirdropHelper.js"],"names":["module","exports","themeLight","scheme","sectionBorderBg","headerBg","headerTagBg","headerTagFg","headerIconsBg","navMenuBg","leftBarLoaderBg","leftBarBg","leftBarButtonBg","leftBarHoverColor","leftBarFontColor","leftBarSocialBg","leftBarSocialIconBg","interfaceTopPadding","interfaceBorder","interfaceSkeleton","backgroundBG","backgroundBGLucid","mainBg","fontColor","fontColorSecondary","scrollBg","borderBg","viewChannelSearchBg","viewChannelSearchBorder","viewChannelSearchText","viewChannelSearchIcon","faucetBg","faucetBorder","faucetIcon","faucetHeader","viewChannelOuterBorder","viewChannelLink","viewChannelVerifiedBadge","viewChannelIconBorder","viewChannelSecondaryBG","viewChannelSecondaryIcon","viewChannelTutsTitleBg","viewChannelTutsButtonBg","dynamicTutsBg","dynamicTutsBgOverlay","dynamicTutsFontColor","dynamicTutsButtonBg","dynamicTutsButtonColor","dynamicTutsPrimaryColor","qnaBg","qnaBgBorder","yieldBg","pushPriceBg","greyText","color","channelBg","button","buttonColor","createColor","themeDark","questionBg","buttonBd","config","apiUrl","allowedNetworks","coreContractChain","coreRPC","addresses","ceaErc20","epnscore","epnsEthComm","epnsPolyComm","dai","aDai","staking","yieldFarmPUSH","yieldFarmLP","epnsToken","epnsLPToken","rockstar","batchMintNFT","NFTRewards","distributor","uniswapV2Router02","WETHAddress","USDTAddress","abis","erc20","erc20Abi","ownable","ownableAbi","epnscoreAbi","epnsCommAbi","epnsComm","daiAbi","epnsTokenAbi","stakingAbi","yieldFarming","yieldFarmingAbi","rockstarAbi","erc721","ec721Abi","MerkleDistributorAbi","UniswapV2Router02Abi","Section","styled","section","props","align","direction","theme","gradient","margin","padding","overflow","Content","div","ItemBreak","Item","wrap","position","bg","flex","flexBasis","self","justify","minWidth","maxWidth","size","textAlign","filter","top","bottom","left","right","width","height","border","radius","zIndex","filterHover","hover","tabletAlign","tabletTextAlign","ItemH","H2","transform","arcRGB","css","h1","h2","weight","textTransform","spacing","family","H3","h3","Image","img","P","p","Para","Span","span","pos","z","B","UL","ul","LI","li","Anchor","a","hoverBG","AnchorLink","RouterLink","Link","A","C","Button","FormSubmision","opacity","tabletRight","tabletLeft","tabletTop","tabletBottom","tabletTransform","tabletOpacity","form","Input","input","display","outline","cursor","hand","TextField","textarea","Boolean","window","location","hostname","match","require","SUPPORTED_CHAIN_IDS","envConfig","CORE_CHAIN_ID","CORE_RPC","RPC_URLS","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","ledger","LedgerConnector","chainId","url","portis","TrezorConnector","manifestEmail","manifestAppUrl","PortisConnector","dAppId","networks","BlockiesIdenticon","seed","this","opts","bgcolor","scale","spotcolor","draw","prevProps","blockies","render","canvas","React","createElement","ref","Component","Container","Blocky","BlockyInner","Wallet","Profile","useWeb3React","error","active","account","library","useState","address","setAddress","ens","setENS","ensFetched","setENSFetched","useEffect","lookupAddress","then","name","catch","toLowerCase","type","substring","length","tadaaa","keyframes","BellImage","ringme","BellImageAbs","Badge","Bell","badgeCount","bellPressedCB","badge","setBadge","ring","setRing","setResetRinger","setTimeout","onClick","src","className","animationIn","animationOut","durationOut","LINKS","IOS_APP","ANDROID_APP","STORAGE","CONSTANTS","HEADER_HEIGHT","LEFT_BAR_WIDTH","NAVBAR_SECTIONS","PRIMARY","SECONDARY","MOBILE","NAVBAR_IDENTIFIERS","CREATE_CHANNEL","COMMUNICATE_TAB","DEVELOPER_TAB","ADJUSTMENTS","COLORS","GRADIENT_PRIMARY","GRADIENT_SECONDARY","GRADIENT_THIRD","TRANSPARENT","WHITE","DARK_WHITE","MID_WHITE","LIGHT_WHITE","SLIGHTER_GRAY","SLIGHT_GRAY","LIGHT_GRAY","MID_GRAY","DARK_GRAY","DARKER_GRAY","LIGHT_BLACK_TRANS","SEMI_MID_BLACK_TRANS","MID_BLACK_TRANS","DARK_BLACK_TRANS","BLACK","CONFIRM_GREEN","CONFIRM","WARNING","SUBLIME_RED","BADGE_RED","LIGHT_MAROON","LIGHTER_MAROON","InheritedSectionGroupIcon","InheritedSectionItemIcon","LeftBarPrimarySectionIcon","LeftBarPrimaryItemIcon","LeftBarSecondarySectionIcon","LeftBarSecondaryItemIcon","NavigationButton","SelectedIcon","RouteLogic","definedMargin","item","data","sectionID","useTheme","GLOBALS","isSection","isRoute","title","to","href","alt","target","newTab","disabled","hasItems","opened","NavigationContext","createContext","NavigationContextProvider","navigationSetup","setNavigationSetup","Provider","value","children","Logo","RightBarContainer","RightBarDesktop","RightBarMobile","NavMenuContainer","NavMenu","NavMenuInner","Notice","PrimaryTheme","ThirdTheme","Connection","phase","HeaderTag","Header","isDarkMode","darkModeToggle","context","useContext","deactivate","showLoginControls","setShowLoginControls","showNavBar","setShowNavBar","headerTag","setHeaderTag","useLocation","updateHeaderTag","Object","entries","navigation","forEach","key","pathname","keys","map","dark","light","fg","style","checked","onChange","sunColor","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","console","getErrorMessage","NavigationList","primary","communicate","uid","iconFactory","hasMenuLogic","drilldown","inbox","spam","channels","receiveNotifs","developer","createChannel","developerGuide","DEVELOPER_GUIDE","dynamicEnviroment","govern","governance","GOVERNANCE","governanceGuide","GOVERNANCE_GUIDE","incentives","yield","rockstars","airdrop","walkthrough","livewalkthrough","faq","quickGuide","secondary","latest","id","isMenuLogic","support","userJourneySlice","createSlice","initialState","run","stepIndex","welcomeNotifs","tutorialContinous","isCommunicateOpen","isDeveloperOpen","reducers","incrementStepIndex","state","decrementStepIndex","setRun","action","payload","setIndex","addNewWelcomeNotif","setWelcomeNotifsEmpty","setTutorialContinous","setCommunicateOpen","setDeveloperOpen","actions","headerHeight","Primary","InheritedSection","PrimarySection","InheritedSectionGroup","InheritedSectionItem","SectionInnerGroupContainer","margintop","SectionInnerItemContainer","PrimarySectionGroup","PrimarySectionItem","Footer","Secondary","SecondarySection","Navigation","channelDetails","useSelector","admin","loading","setLoading","refresh","setRefresh","userJourney","dispatch","useDispatch","primaryList","returnTransformedList","navigationList","secondaryList","navList","returnNavList","assign","lists","identity","transformedList","count","identifier","toString","parent","hasOwnProperty","drillcount","drilldownModified","drillkey","drillvalue","drillIdentifier","topSection","mutateTransformedList","onlyDrilldown","transformedMenuList","activeParentId","activeDrilldownId","selectedSectionIsActionable","sectionkey","renderMainItems","items","fontSize","secondaryButton","log","renderChildItems","SectionGroup","SectionItem","onMouseOver","onMouseOut","EPNSCoreHelper","getOwnerInfo","contract","Promise","resolve","reject","response","err","getVotingPower","delegateeAddress","rawFormat","ethers","utils","isAddress","endsWith","decimals","getCurrentVotes","votes","Number","Math","pow","votingPower","prettyVotingPower","getUserInfo","user","users","mappings","addr","getChannelAddressFromID","channelID","channelById","getChannelInfo","channel","getChannelEvent","startBlock","updateBlock","filters","AddChannel","block","UpdateChannel","queryFilter","filteredResponse","args","toUtf8String","getJsonFileFromIdentity","ids","split","fetch","json","getChannelJsonFromChannelAddress","channelStartBlock","toNumber","channelUpdateBlock","hash","getChannelJsonFromUserAddress","getTotalNumberOfChannels","channelsCount","getChannelsMetaLatestToOldest","atIndex","numChannels","channelsInfo","channelArrays","i","assignedChannelID","push","promises","all","getTotalNumberOfUsers","usersCount","getPublicKey","getSubscribedStatus","isUserSubscribed","getTotalSubscribedChannels","subscribedCount","getFairShareOfUserAtBlock","userActivated","calcAllChannelsRatio","getPoolFunds","poolFunds","formatBigNumberToMetric","bignumber","convertToCurrency","metricFormatter","e","num","digits","si","symbol","toFixed","replace","NotificationWrapper","Toaster","NotificationToast","notification","clearToast","LoaderToast","notificationTitle","notificationBody","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","DisplayNotice","SearchFilter","search","setSearch","startDate","setStartDate","endDate","setEndDate","themes","applySearch","selectedOption","each","filterNotifications","options","notifications","label","app","uniqueOptions","Map","values","showFilter","setShowFilter","setSelectedOption","reset","TopBar","mbtm","Left","marginTop","marginLeft","marginRight","loadFilter","fontWeight","ToggleArrowImg","Buttons","ButtonFeed","bgColor","SearchOptions","SectionSearch","mright","SelectChannel","SMultiSelect","valueRenderer","labelledBy","placeholder","InputWrapper","mleft","RangeSection","mtop","TimeLabelDiv","SDateTimePicker","mttop","DateTimePicker","MultiSelect","Border","page","finishedFetching","toggler","contractSlice","toggleToggler","resetState","addPaginatedNotifications","incrementPage","addNewNotification","setFinishedFetching","updateTopNotifications","pp","notifs","slice","pageSize","sn","Notifs","Feedbox","contracts","epnsCommReadProvider","toggle","limit","setLimit","allNotf","setNotif","filteredNotifications","setFilteredNotifications","setFilter","setLoadFilter","bgUpdateLoading","setBgUpdateLoading","query","Date","getTime","Filter","date","lowDate","highDate","filterNotif","notif","timestamp","matches","message","epoch","includes","loadNotifications","api","fetchNotifications","results","parsedResponse","parseApiResponse","fetchLatestNotifications","map1","map2","set","sid","get","fetchAllNotif","handlePagination","oneNotification","index","cta","icon","image","showWayPoint","onEnter","BASE_URL","postReq","path","obj","axios","post","headers","ChannelEvents","ChannelsDataStore","channelsMeta","channelsJson","subscribers","callbacks","epnsReadProvider","init","resetChannelsListeners","initChannelsListenersAsync","getChannelsCountAsync","removeAllListeners","listenForAddChannelAnyAsync","listenForAddChannelSelfAsync","listenForUpdateChannelAnyAsync","listenForUpdateChannelSelfAsync","listenForSubscribeAnyAsync","listenForSubscribeSelfAsync","listenForUnsubscribeAnyAsync","listenForUnsubscribeSelfAsync","on","ipfs","incrementChannelsCountAsync","callback","Subscribe","Unsubscribe","addCallbacks","callbackType","callbackID","removeCallbacks","incrementCount","getChannelFromApi","startIndex","pageCount","ceil","op","getChannelsMetaAsync","stopIndex","channelIDs","getChannelMetaAsync","channelMetaData","channelAddress","getChannelMetaViaAddressAsync","getChannelSubscribers","cachedSubscribers","subs","getChannelJsonAsync","instance","UsersDataStore","userMeta","ownerMeta","resetUsersListeners","initUsersListenersAsync","getOwnerMetaAsync","getUsersCountAsync","getUserMetaAsync","listenForSubscribedAsync","listenForUnsubscribedAsync","publicKeyRegistered","listenForPublicKeyBroadcastAsync","incrementUsersCountAsync","ZERO_ADDRESS","epnsWriteProvider","epnsCommWriteProvider","pushAdminAddress","setCoreReadProvider","setCoreWriteProvider","setCommunicatorReadProvider","setCommunicatorWriteProvider","setPushAdmin","InboxPage","ReactGA","pageview","showToast","pushChannelAdmin","dotenv","etherscanToken","process","REACT_APP_INFURA_API_KEY","AliasVerificationModal","onClose","onSuccess","verificationStatus","signer","getSigner","modalRef","useRef","polygonCommsContract","Contract","mainAdress","setMainAddress","useClickAway","Overlay","AliasModal","CustomInput","required","verifyChannelAlias","tx","StyledInput","ChannelTitleLink","AppLink","AppLinkText","ChannelInfo","ChannelTitle","ViewInfoItem","rel","InfoBox","Info","CenteredContainerInfo","Items","SpamBox","currentTab","EPNS_DOMAIN","verifyingContract","allNotif","fetchSpamNotifications","parsedResponsePromise","elem","res","isSubscribedFn","onSubscribeToChannel","subscriber","_signTypedData","signature","contractAddress","subscribeFn","stopPropagation","isSpam","FullWidth","UtilityHelper","isMainnet","Device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","MetaContainer","MetaContent","IconContainer","MetaInfoDisplay","externalIcon","internalIcon","text","onMouseEnter","onMouseLeave","channelsTuts","maintainer","userjourneyyoutube","userjourneyshort","article","coindesk","snapshot","makerdao","cvi","bancor","oasisapp","mover","poh","kyber","fabwelt","banklessfr","angle","mstable","aragon","cryptomanga","dydx","idle","tracerdao","armor","pods","ooki","pushgov","symphony","ethtracker","ethpricetracker","btctracker","aave","gro","flipside","thedefiant","TutsInner","ChannelTutorial","loadTeaser","playTeaser","showTuts","setShowTuts","channelTuts","getChannelTutItem","srcSet","open","MetaInfoDisplayer","CHANNNEL_DEACTIVATED_STATE","CHANNEL_BLOCKED_STATE","CHANNEL_ACTIVE_STATE","CHANNEL_BLACKLIST","channelsCache","setChannelMeta","cacheChannelInfo","meta","FlexBox","SkeletonWrapper","atW","atH","borderRadius","marginBottom","ChannelLogo","ChannelLogoOuter","ChannelLogoInner","ChannelLogoImg","VerifiedBy","VerifierIcon","VerifierName","ChannelDesc","ChannelDescLabel","ChannelMeta","ChannelMetaBox","Subscribers","LineBreak","ChannelActions","ChannelActionButton","ActionTitle","hideit","ActionLoader","SkeletonButton","SubscribeButton","UnsubscribeButton","OwnerButton","ToasterMsg","ViewChannelItem","channelObjectProp","useNavigate","canVerify","isOwner","channelObject","setChannelObject","channelJson","setChannelJson","subscribed","setSubscribed","memberCount","setMemberCount","isPushAdmin","setIsPushAdmin","isVerified","setIsVerified","isBlocked","setIsBlocked","vLoading","setvLoading","bLoading","setBLoading","txInProgress","setTxInProgress","canUnverify","setCanUnverify","verifierDetails","setVerifierDetails","copyText","setCopyText","isChannelBlacklisted","verifiedBy","fetchChannelJson","alert","channelState","channelSubscribers","find","sub","addressText","msg","subscribe","subscribeAction","notificationToast","toaster","txToast","update","TYPE","SUCCESS","info","ERROR","unsubscribeAction","unsubscriber","finally","navigator","clipboard","writeText","el","document","body","appendChild","select","execCommand","removeChild","copyToClipboard","keyFound","isChannelTutorialized","blockChannel","INFO","verifyChannel","unverifyChannel","wait","Faucets","ADDRESS_REGEX","SearchBar","ContainerInfo","ViewChannelItems","CenterContainer","ScrollItem","SearchContainer","ViewChannels","moreLoading","setMoreLoading","channelToShow","setChannelToShow","loadingChannel","setLoadingChannel","trialCount","setTrialCount","channelsVisited","fetchInitialsChannelMeta","updateCurrentPage","loadMoreChannelMeta","newPageNumber","startingPoint","moreChannels","searchForChannel","t","timeout","clearTimeout","parsedChannel","test","CloseIcon","xmlns","viewBox","data-name","x2","fill","stroke","stroke-linecap","stroke-width","y2","NFTypes","LIMITER_KEYS","DropdownStyledParent","MultiRecipientsContainer","ModifiedContent","DropdownHeader","DropdownStyled","Dropdown","DropdownStyledWhite","DropdownStyledParentWhite","CustomDropdownItem","SendNotifications","delegatees","nfProcessing","setNFProcessing","setChannelAddress","nfRecipient","setNFRecipient","multipleRecipients","setMultipleRecipients","tempRecipeint","setTempRecipient","nfType","setNFType","nfSub","setNFSub","nfSubEnabled","setNFSubEnabled","nfMsg","setNFMsg","nfCTA","setNFCTA","nfCTAEnabled","setNFCTAEnabled","nfMedia","setNFMedia","nfMediaEnabled","setNFMediaEnabled","nfInfo","setNFInfo","delegateeOptions","setDelegateeOptions","isChannelDeactivated","cannotDisplayDelegatees","oneDelegatee","bodyValidated","validated","handleSendMessage","preventDefault","nsub","nmsg","asub","amsg","acta","aimg","secret","CryptoHelper","makeid","k","publickey","encryptWithECIES","secretEncrypted","encryptWithAES","storagePointer","isEmpty","jsonPayload","JSON","stringify","at","add","identityBytes","toUtf8Bytes","Data","recipient","deployedContract","field","trim","onSubmit","option","d","Switch","oneRecipient","recipientAddress","filteredRecipients","rec","join","removeRecipient","onKeyPress","oldRecipients","Array","from","Set","listRecipients","borderBottom","rows","autocomplete","ChannelCreationDashboard","setUserChannelDetails","setCanVerify","setDelegatees","ALLOWED_CORE_NETWORK","AddDelegateModal","addDelegate","background","RemoveDelegateModal","removeDelegate","ActivateChannelModal","activateChannel","setChannelStakeFees","channelStakeFees","popupRef","PopupOverlay","PopupSlider","Slider","defaultValue","onChangeCommitted","_","aria-labelledby","valueLabelDisplay","step","marks","min","max","DropdownWrapper","ActiveChannelWrapper","inactive","DeactivateButton","ChannelSettings","onCoreNetwork","showActivateChannelPopup","setShowActivateChannelPopup","poolContrib","setPoolContrib","addDelegateLoading","setAddDelegateLoading","addModalOpen","setAddModalOpen","removeDelegateLoading","setRemoveDelegateLoading","removeModalOpen","setRemoveModalOpen","isChannelBlocked","channelInactive","poolContribution","daiContract","fees","parseUnits","sendTransactionPromise","approve","waitForTransaction","reactivateChannel","deactivateChannel","amountToBeConverted","parseInt","pushValue","quote","PUSH","price","floor","walletAddress","setActive","SettingsWrapper","ChannelSettingsDropdown","Settings","ChannelDetails","verifyingChannel","setVerifyingChannel","creationDate","setCreationDate","channelIsActive","channelIsDeactivated","bn","getBlock","moment","format","ChannelDetailsWrapper","SectionTop","ImageSection","Details","ChannelName","VerifyImage","ChanneStateText","SectionDes","SectionDate","Verified","VerifyingIcon","VerifyingName","SubscribersCount","ChannelOwnerDashboard","CreateChannel","Interface","controlAt","setControlAt","modalOpen","setModalOpen","adminStatusLoaded","setAdminStatusLoaded","aliasEthAccount","setAliasEthAccount","aliasVerified","setAliasVerified","setChannelAdmin","coreProvider","getDefaultProvider","etherscan","aliasAddress","ethAddress","status","coreContractInstance","commAddress","commContractInstance","coreSignerInstance","communicatorSignerInstance","userClickedAt","checkUserForChannelOwnership","event","cb","eventChannelAddress","eventUserAddress","identityHex","userAddress","hex2ascii","concat","toLocaleLowerCase","ipfsId","result","ipfsNotification","toastMessage","notificationObject","listenFornewNotifications","fetchDelegators","controlIndex","delegateAddress","delegators","channelOwners","channelInformationPromise","channelInformation","ownerAccount","getChannelVerfication","Spambox","ChannelDashboardPage","ReceiveNotifsPage","DelegateeItem","DelegateeImageOuter","DelegateeImageInner","DelegateeProfile","DelegateeWallet","NFTTextStyle","ViewDelegateeItem","delegateeObject","pushBalance","isBalance","setIsBalance","delegateAction","delegate","wallet","pic","toLocaleString","forum","delegateesJSON","Question","Answer","QnAItem","AMod","StatsCard","StatsHeading","NomineeContainer","StatsContent","AbsoluteWrapper","StatsPreview","StatsInnerTitle","ButtonAlt","CurvedSpan","GovernancePage","epnsWriteProvide","darkMode","dashboardLoading","setDashboardLoading","delegateesLoading","setDelegateesLoading","setDelegateesObject","pushDelegatees","setPushDelegatees","pushNominees","setPushNominees","setEpnsToken","tokenBalance","setTokenBalance","prettyTokenBalance","setPrettyTokenBalance","showDelegateePrompt","setShowDelegateePrompt","delegatee","setDelegatee","showAnswers","setShowAnswers","selfVotingPower","setSelfVotingPower","newDelegateeAddress","setNewDelegateeAddress","newDelegateeVotingPower","setNewDelegateeVotingPower","toggleShowAnswer","newShowAnswers","epnsTokenContract","getMyInfo","delegateesList","votingPowerSorter","b","allDelegateesPromise","oneDelegate","allDelegatees","delegateesAbove75k","votingPowerSimulate","sortedDelegatees","sort","delegateesBelow75k","sortedNominees","isValidAddress","balanceOf","bal","newBal","delegates","newDelegatee","onePushNominee","ONE_PUSH","BigNumber","mul","tokenToBn","token","tokenBNtoNumber","tokenBn","YieldFarmingDataStore","yieldFarmingPUSH","yieldFarmingLP","rewardForCurrentEpochPush","rewardForCurrentEpochLP","genesisEpochAmountPUSH","deprecationPerEpochPUSH","genesisEpochAmountLP","deprecationPerEpochLP","getPoolStats","getCurrentEpoch","currentEpochPUSH","getAmountsOut","pushPriceAmounts","pushPrice","pushAmountReserve","attach","wethAmountReserve","ethPriceAmounts","ethPrice","totalSupply","uniTotalSupply","lpToPushRatio","uniLpPrice","getPoolSize","pushNextPoolSize","lpNextPoolSize","totalValueLocked","epochDuration","epochStart","start","epochEndTimestamp","TOTAL_DISTRIBUTED_AMOUNT","pushTotalDistributedAmount","lpTotalDistributedAmount","totalDistributedAmount","getPushRewardsDistributed","pushRewardsDistributed","currentEpoch","getPUSHPoolStats","NR_OF_EPOCHS","totalEpochPUSH","genesisEpochAmount","deprecationPerEpoch","rewardForCurrentEpoch","calcTotalAmountPerEpoch","poolBalance","stakingAPR","calcStakingAPR","getLPPoolStats","poolStats","calcLPPoolAPR","getUserData","calculateUserEpochReward","potentialUserReward","getEpochStake","epochStakeNext","totalAccumulatedReward","epochReward","lastEpochIdHarvested","totalAvailableReward","currentEpochLP","pushPoolRewardsDistributed","lpPoolRewardsDistributed","rewardForCurrentEpochPUSH","epochId","calcAnnualEpochReward","currentEpochReward","depreciate","weeks","totalStaked","apr","annualRewards","aprFormatted","epochStake","poolSize","InfoTooltip","Tooltip","number","bnToInt","bnAmount","PoolCard","poolName","poolAddress","tokenAddress","pushPoolStats","userData","depositAmountToken","setDepositAmountToken","showDepositItem","setShowDepositItem","depositApproved","setDepositApprove","txInProgressApprDep","setTxInProgressApprDep","txInProgressDep","setTxInProgressDep","showDepSlip","setShowDepSlip","txInProgressWithdraw","setTxInProgressWithdraw","txInProgressMassHarvest","setTxInProgressMassHarvest","checkApprDeposit","tokenAddr","allowance","gte","fillMax","balance","approveDeposit","uintMax","depositAmountTokenFarmSingleTx","deposit","withdrawAmountTokenFarmAutomatic","withdrawAmount","formatTokens","withdraw","massHarvestTokensAll","massHarvest","tokens","numberWithCommas","x","PoolBoxTitle","PoolBoxMsg","EpochDisplayer","MaxButton","PoolContainer","h5","StatsInnerSub","YieldFarmingPage","setPoolStats","setPushPoolStats","lpPoolStats","setLpPoolStats","userDataPUSH","setUserDataPUSH","userDataLP","setUserDataLP","formattedDuration","setFormattedDuration","setStaking","setYieldFarmingPUSH","setYieldFarmingLP","setUniswapV2Router02","useCallback","getUserDataPUSH","getUserDataLP","duration","day","hour","minutes","seconds","getFormattedDuration","uniswapV2Router02Instance","syncData","NFTHelper","getNFTBalance","getTotalSupply","getOwnerOfTokenId","tokenId","ownerOf","getTokenOfOwnerByIndex","tokenOfOwnerByIndex","getTokenByIndex","tokenByIndex","getTokenMetadata","tokenURI","getTokenMetadatasOfOwner","owner","nftContract","rewardsContract","NFTDetails","getClaimable","claimable","metadata","getAllTokenDatas","getTokenData","transferNFT","safeTransferFrom","getClaimRewardStatus","NFTStatus","NFTStatusTitle","NFTClaim","NFTClaimTitle","ViewNFTItem","NFTObject","nftReadProvider","nftWriteProvider","setTokenId","NFTRewardsContract","setNFTRewardsContract","NFTRewardsInstance","handleClaim","claimReward","sendWithTxPromise","controls","playing","loop","MyNFTs","setNftReadProvider","setNftWriteProvider","NFTObjects","setNFTObjects","contractInstance","signerInstance","fetchNFTDetails","prev","transitions","scaleDown","AllNFTs","activeBG","TransferNFT","toAddress","setToAddress","processing","setProcessing","processingInfo","setProcessingInfo","handleTransferNFT","txPromise","maxlength","Controls","NFTPage","EpicButton","prop","AirdropPage","distributorContract","setDistributorContract","setUser","checkClaim","AirdropHelper","verifyAddress","claim","amount","proof","verified","Heading","ComingSoonPage","minHeight","TutorialPage","Span2","SupportPage","contactFormTopics","contactFormProcessing","setContactFormProcessing","contactFormName","setContactFormName","contactFormEmail","setContactFormEmail","contactFormTopic","setContactFormTopic","contactFormSub","setContactFormSub","contactFormMsg","setContactFormMsg","contactFormError","setContactFormError","String","requestOptions","method","topic","jsondata","ContactInput","ContactTextArea","columnGap","rowGap","PreviewOuter","PreviewBG","PreviewContent","Preview","PreviewClose","MasterInterfacePage","playTeaserVideo","setPlayTeaserVideo","loadTeaserVideo","setLoadTeaserVideo","element","ViewChannelsPage","SpamPage","FAQPage","newestOnTop","rtl","pauseOnFocusLoss","class","frameborder","allow","allowfullscreen","BeaconExample","BeaconExamplePulse","UserJourneySteps","content","locale","next","aria-label","placement","hideFooter","spotlightClicks","disableAnimation","disablefloating","defaultProps","styles","buttonNext","buttonSkip","buttonClose","disableOverlayClose","offsetTop","web3Connectors","Injected","logo","WalletConnect","Ledger","Portis","App","connector","activate","activatingConnector","setActivatingConnector","setcurrentTime","now","triedEager","tried","setTried","isAuthorized","useEagerConnect","suppress","ethereum","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","initialize","setDarkMode","localStorage","getItem","parse","setItem","backgroundColor","Olvy","organisation","view","showSearch","compact","showHeader","showUnreadIndicator","unreadIndicatorColor","unreadIndicatorPosition","teardown","steps","continuous","primaryProps","hideBackButton","hideCloseButton","disableScrolling","disableScrollParentFix","disableFlip","showNextButton","showSkipButton","lifecycle","querySelector","scrollTop","arrowColor","overlayColor","primaryColor","textColor","HeaderContainer","ParentContainer","LeftBarContainer","leftBarWidth","ContentContainer","ProviderLogo","currentConnector","ProviderButton","ProviderImage","StyledItem","header","rootReducer","combineReducers","contractReducer","channelReducer","adminReducer","notificationReducer","spamReducer","userJourneyReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","ApolloProvider","getLibrary","provider","gottenProvider","providers","Web3Provider","oldNetwork","reload","getElementById","serviceWorker","ready","registration","unregister","CryptoJS","AES","encrypt","decryptWithAES","decrypt","enc","Utf8","publicKey","compressedKey","EthCrypto","compress","encryptWithPublicKey","encryptedSecret","decryptWithECIES","privateKey","decryptWithPrivateKey","pubKeyUint8Array","Uint8Array","Buffer","convertedKeyAsUint8Array","publicKeyConvert","convertedPublicKeyHex","pubKey","encryptedBuffers","cipher","iv","ephemPublicKey","ciphertext","mac","keyConvert","buf","encrypted","keyConvertBuffer","uncompressedKey","twoStripped","encryptedBuffer","decryptedBuffer","encryptionDecryptionPublicToPrivateTest","startTime","publicKeyByPrivateKey","encryptionTime","decryptMsg","decryptionTime","outputMsgPayload","subject","calltoaction","imageurl","pkey","asubE","amsgE","actaE","aimgE","toISOString","characters","charactersLength","charAt","random","ALIAS_CHAINS","SpanR","Step","Line","Minter","Pool","PoolShare","uploadDone","setUploadDone","stakeFeesChoosen","setStakeFeesChoosen","channelInfoDone","setChannelInfoDone","chainDetails","setChainDetails","channelName","setChannelName","channelAlias","setChannelAlias","channelInfo","setChannelInfo","channelURL","setChannelURL","channelFile","setChannelFile","daiAmountVal","setDaiAmountVal","stepFlow","setStepFlow","checkDaiAmount","convertedVal","formatEther","checkDaiFunc","handleLogoSizeLimitation","base64","sizeOf","base64Data","pop","dimensions","success","handleCreateChannel","chainDetailsSplit","blockchain","chain_id","anotherSendTxPromise","createChannelWithFees","gasLimit","mintDai","mintTransactionPromise","mint","onChangeStatus","file","files","allFiles","f","reader","FileReader","readAsDataURL","onloadend","onDrop","maxFiles","multiple","accept","classNamePrefix","colors","primary25","paddingLeft","randseed","rand","buildOpts","newOpts","charCodeAt","seedrand","renderIcon","imageData","dataWidth","mirrorWidth","y","row","r","reverse","createImageData","sqrt","cc","getContext","fillStyle","fillRect","col","create","claims","combinedHash","first","second","solidityKeccak256","compare","toNode","pairHex","verifyProof","root","pair","equals","getNextLayer","elements","reduce","layer","idx","arr","getRoot","balances","nodes","layers","merkleRootHex","merkleRoot","isClaimed","BNamount"],"mappings":"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","file":"static/js/main.2277a9c8.chunk.js","sourcesContent":["// Define what props.theme will look like\r\nconst themeLight = {\r\n  scheme : \"light\",\r\n  // Section Theme\r\n  sectionBorderBg: 'transparent',\r\n\r\n  // Header Theme\r\n  headerBg: '#fff',\r\n  headerTagBg: '#000',\r\n  headerTagFg: '#fff',\r\n\r\n  headerIconsBg: '#000',\r\n\r\n  // Nav Menu \r\n  navMenuBg: '#00000066',\r\n\r\n  // Left Bar Theme\r\n  leftBarLoaderBg: '#ddd',\r\n\r\n  leftBarBg: '#fff',\r\n  leftBarButtonBg: '#fff',\r\n  leftBarHoverColor: '#5c5c5c',\r\n  leftBarFontColor: '#000',\r\n\r\n  leftBarSocialBg: '#eee',\r\n  leftBarSocialIconBg: '#ddd',\r\n\r\n  // Interface Theme\r\n  interfaceTopPadding: '0px',\r\n  interfaceBorder: '#f1f1f1',\r\n\r\n  interfaceSkeleton: '#eee',\r\n\r\n  // Main Theme\r\n  backgroundBG: '#fff',\r\n  backgroundBGLucid: '#00000099',\r\n  mainBg: '#fff',\r\n  fontColor: '#000',\r\n  fontColorSecondary: '#00000099',\r\n  scrollBg: '#eee',\r\n  borderBg: '#f1f1f1',\r\n\r\n  // View Channels Theme\r\n  // -- View Channel Header Theme\r\n  // -- -- Search Bar\r\n  viewChannelSearchBg: '#fff',\r\n  viewChannelSearchBorder: '#f1f1f1',\r\n  viewChannelSearchText: '#000',\r\n  viewChannelSearchIcon: '#333',\r\n\r\n  // -- -- Faucet Theme\r\n  faucetBg: '#fff',\r\n  faucetBorder: '#ededed',\r\n  faucetIcon: '#674c9f',\r\n  faucetHeader: '#e20880',\r\n\r\n  // -- View Channel Main Theme\r\n  viewChannelOuterBorder: '#eee',\r\n  viewChannelLink: '#e20880',\r\n  viewChannelVerifiedBadge: '#ec008c',\r\n  viewChannelIconBorder: '#fafafa',\r\n  viewChannelSecondaryBG: '#35c5f3',\r\n  viewChannelSecondaryIcon: '#ccc',\r\n\r\n  // -- -- View Channel Tuts\r\n  viewChannelTutsTitleBg: '#000',\r\n  viewChannelTutsButtonBg: '#e20880',\r\n\r\n  // Dynamic Tuts\r\n  dynamicTutsBg: '#fff',\r\n  dynamicTutsBgOverlay: '#00000099',\r\n  dynamicTutsFontColor: '000',\r\n  dynamicTutsButtonBg: '#000',\r\n  dynamicTutsButtonColor: '#fff',\r\n  dynamicTutsPrimaryColor: '#e20880',\r\n\r\n  // QnA\r\n  qnaBg: '#fff',\r\n  qnaBgBorder: '#fafafa',\r\n\r\n  yieldBg: \"#f3f3f3\",\r\n\r\n  pushPriceBg: \"#000\",\r\n\r\n  greyText: \"#818589\",\r\n\r\n  color: \"#000\",\r\n\r\n  channelBg: \"#fafafa\",\r\n\r\n  button: \"#000\",\r\n  \r\n  buttonColor: \"#fff\",\r\n\r\n  createColor: \"#808080\",\r\n\r\n};\r\n\r\nconst themeDark = {\r\n  scheme : \"dark\",\r\n  // Section Theme\r\n  sectionBorderBg: '#333',\r\n\r\n  // Header Theme\r\n  headerBg: '#000',\r\n  headerTagBg: '#fff',\r\n  headerTagFg: '#000',\r\n\r\n  headerIconsBg: '#fff',\r\n\r\n  // Nav Menu \r\n  navMenuBg: '#00000066',\r\n\r\n  // Left Bar Theme\r\n  leftBarLoaderBg: '#ddd',\r\n\r\n  leftBarBg: '#000',\r\n  leftBarButtonBg: '#000',\r\n  leftBarHoverColor: '#fff',\r\n  leftBarFontColor: '#fff',\r\n\r\n  leftBarSocialBg: '#222',\r\n  leftBarSocialIconBg: '#000',\r\n\r\n  // Interface Theme\r\n  interfaceTopPadding: '20px',\r\n  interfaceBorder: '#333',\r\n  interfaceSkeleton: '#414141',\r\n\r\n  // Main Theme\r\n  backgroundBG: '#222',\r\n  backgroundBGLucid: '#000000cc',\r\n  mainBg: '#000',\r\n  fontColor: '#fff',\r\n  fontColorSecondary: '#ffffff99',\r\n  scrollBg: '#333',\r\n  borderBg: '#333',\r\n\r\n  // View Channels Theme\r\n  // -- View Channel Header Theme\r\n  // -- -- Search Bar\r\n  viewChannelSearchBg: '#222',\r\n  viewChannelSearchBorder: '#333',\r\n  viewChannelSearchText: '#fff',\r\n  viewChannelSearchIcon: '#414141',\r\n\r\n  // -- -- Faucet Theme\r\n  faucetBg: '#222',\r\n  faucetBorder: '#333',\r\n  faucetIcon: '#414141',\r\n  faucetHeader: '#414141',\r\n\r\n  // -- View Channel Main Theme\r\n  viewChannelOuterBorder: '#222',\r\n  viewChannelLink: '#35c5f3',\r\n  viewChannelVerifiedBadge: '#ccc',\r\n  viewChannelIconBorder: '#222',\r\n  viewChannelSecondaryBG: '#222',\r\n  viewChannelSecondaryIcon: '#414141',\r\n\r\n  // -- -- View Channel Tuts\r\n  viewChannelTutsTitleBg: '#000',\r\n  viewChannelTutsButtonBg: '#000',\r\n\r\n  // Dynamic Tutorial\r\n  dynamicTutsBg: '#222',\r\n  dynamicTutsBgOverlay: '#000000cc',\r\n  dynamicTutsFontColor: '#fff',\r\n  dynamicTutsButtonBg: '#000',\r\n  dynamicTutsButtonColor: '#fff',\r\n  dynamicTutsPrimaryColor: '#fff',\r\n\r\n  // QnA\r\n  qnaBg: '#222',\r\n  qnaBgBorder: '#666',\r\n\r\n  color: \"#fff\",\r\n\r\n  yieldBg: \"#ddd\",\r\n\r\n  questionBg: \"#000\",\r\n\r\n  pushPriceBg: \"teal\",\r\n\r\n  greyText: \"#818589\",\r\n\r\n  channelBg: \"#000\",\r\n\r\n  button: \"#fff\",\r\n  \r\n  buttonColor: \"#000\",\r\n\r\n  buttonBd: \"1px solid #fff\",\r\n\r\n  createColor: \"#fff\",\r\n\r\n\r\n\r\n}\r\n\r\nmodule.exports = {\r\n    themeLight: themeLight,\r\n    themeDark: themeDark\r\n}\r\n","// environmental configurations for the dapp for different environments\r\nconst config = {\r\n    apiUrl: \"https://backend-kovan.epns.io/apis\", //the right backend URL to be used\r\n    allowedNetworks: [\r\n        42, //for ropsten\r\n        // 80001 //for mumbai polygon\r\n    ],\r\n    coreContractChain: 42, //the chain id of the network which the core contract relies on\r\n    coreRPC: \"https://kovan.infura.io/v3/4ff53a5254144d988a8318210b56f47a\"\r\n};\r\n\r\nexport default config;","// This address points to a dummy ERC20 contract deployed on Ethereum Mainnet,\r\n// Goerli, Kovan, Rinkeby and Ropsten. Replace it with your smart contracts.\r\nconst addresses = {\r\n  ceaErc20: \"0xc1C0472c0C80bCcDC7F5D01A376Bd97a734B8815\",\r\n  epnscore: \"0x97D7c5f14B8fe94Ef2b4bA589379f5Ec992197dA\",\r\n  epnsEthComm: \"0x87da9Af1899ad477C67FeA31ce89c1d2435c77DC\", // the core contract\r\n  epnsPolyComm: \"0xD2ee1e96e3592d5945dDc1808834d7EE67400823\", // the ploygon comm contract\r\n  dai: \"0xff795577d9ac8bd7d90ee22b6c1703490b6512fd\", //address for dai\r\n  aDai: \"0x58AD4cB396411B691A9AAb6F74545b2C5217FE6a\",\r\n  staking: \"0x8e129EF695F8761922F1AA38588292f8d8817bA5\",\r\n  yieldFarmPUSH: \"0xb41cd6760d3b1d0d216851f63fda9573b04dd46e\",\r\n  yieldFarmLP: \"0x604f629A6b5E85805D57f39493BBC2856cE8A540\",\r\n  epnsToken: \"0x9CE54E83c18f0a797F823905A3ec5CfC2F6d2CA9\",\r\n  epnsLPToken: \"0x1f094Bd8c260D0C3fC79157096015990885af4d2\",\r\n  rockstar: \"0xa5A8F2641A38C8Bb2a01b89F939Da332B46d9429\",\r\n  batchMintNFT: \"0xCf733D547B9f7F87c1B1f63f45c197C007F8eedf\",\r\n  NFTRewards: \"0xdF0Aa8669688a608D6873b34A672e61cf3A5B3a7\",\r\n  distributor: \"0x5B548D33874DeABaC2F683A6E1864795E09932F0\",\r\n  uniswapV2Router02: \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\",\r\n  WETHAddress: \"0xd0A1E359811322d97991E03f863a0C30C2cF029C\",\r\n  USDTAddress: \"0x13512979ade267ab5100878e2e0f485b568328a4\", \r\n};\r\nexport default addresses;","import erc20Abi from \"./abis/erc20\";\r\nimport ownableAbi from \"./abis/ownable\";\r\nimport epnscoreAbi from \"./abis/epnscore\";\r\nimport daiAbi from \"./abis/dai\";\r\nimport epnsTokenAbi from \"./abis/EPNS.json\";\r\nimport stakingAbi from \"./abis/Staking.json\";\r\nimport yieldFarmingAbi from \"./abis/YieldFarm.json\";\r\nimport rockstarAbi from \"./abis/Rockstar.json\";\r\nimport ec721Abi from \"./abis/ERC721.json\";\r\nimport NFTRewards from \"./abis/NFTRewards.json\";\r\nimport epnsCommAbi from \"./abis/epnsCommunicator.json\";\r\nimport MerkleDistributorAbi from \"./abis/MerkleDistributor.json\";\r\nimport UniswapV2Router02Abi from \"./abis/UniswapV2Router02.json\";\r\n\r\nexport const abis = {\r\n  erc20: erc20Abi,\r\n  ownable: ownableAbi,\r\n  epnscore: epnscoreAbi,\r\n  epnsPolyComm: epnsCommAbi,\r\n  epnsComm: epnsCommAbi,\r\n  dai: daiAbi,\r\n  epnsToken: epnsTokenAbi,\r\n  staking: stakingAbi,\r\n  yieldFarming: yieldFarmingAbi,\r\n  rockstar: rockstarAbi,\r\n  erc721: ec721Abi,\r\n  NFTRewards: NFTRewards,\r\n  distributor: MerkleDistributorAbi,\r\n  uniswapV2Router02: UniswapV2Router02Abi,\r\n};\r\n\r\nexport { default as envConfig } from \"./config\";\r\nexport { default as addresses } from \"./addresses\";\r\n","import styled, { css } from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Section = styled.section`\r\n  display: flex;\r\n  align-self: stretch;\r\n  justify-content: center;\r\n  align-items: ${props => props.align || 'initial'};\r\n  flex-direction: ${props => props.direction || 'column'};\r\n  background: ${props => props.theme || 'transparent'};\r\n  background: ${props => props.gradient || 'undefined'};\r\n  margin: ${props => props.margin || '0px'};\r\n  padding: ${props => props.padding || '0px'};\r\n  overflow: ${props => props.overflow || 'initial'};\r\n  flex: 1;\r\n  position: relative;\r\n`\r\n\r\nexport const SectionFS = styled(Section)`\r\n  min-height: 100vh;\r\n`\r\n\r\nexport const SectionFSHero = styled(Section)`\r\n  min-height: 100vh;\r\n  background: rgb(31,23,47);\r\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\r\n`\r\n\r\nexport const SectionHero = styled(Section)`\r\n  background: rgb(31,23,47);\r\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\r\n`\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: ${props => props.padding || \"40px 0px\"};\r\n  background: ${props => props.theme || 'transparent'};\r\n  background: ${props => props.gradient || 'undefined'};\r\n  position: relative;\r\n`\r\n\r\nexport const ItemBreak = styled.div`\r\n  flex-basis: 100%;\r\n`\r\n\r\nexport const Item = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: ${props => props.wrap || 'wrap'};\r\n  position: ${props => props.position || 'relative'};\r\n  justify-content: center;\r\n  background: ${props => props.bg || 'transparent'};\r\n  flex: ${props => props.flex || '1'};\r\n  flex-direction: ${props => props.direction || 'column'};\r\n  flex-basis: ${props => props.flexBasis || 'auto'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  margin: ${props => props.margin || '0px'};\r\n  min-width: ${props => props.minWidth || 'auto'};\r\n  max-width: ${props => props.maxWidth || 'initial'};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-align: ${props => props.textAlign || \"inherit\"};\r\n  filter: ${props => props.filter || \"none\"};\r\n\r\n  top: ${props => props.top || 'auto'};\r\n  bottom: ${props => props.bottom || 'auto'};\r\n  left: ${props => props.left || 'auto'};\r\n  right: ${props => props.right || 'auto'};\r\n\r\n  width: ${props => props.width || \"auto\" };\r\n  height: ${props => props.height || \"auto\" };\r\n\r\n  border: ${props => props.border || \"none\"};\r\n\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  overflow: ${props => props.overflow || \"initial\"};\r\n\r\n  z-index: ${props => props.zIndex || \"auto\"};\r\n\r\n  &:hover & {\r\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\r\n    text-align: ${props => (props.tabletTextAlign ? props.tabletTextAlign : (props.textAlign ? props.textAlign : \"inherit\")) || \"inherit\"};\r\n  }\r\n\r\n  ${ItemBreak} {\r\n    width: 0;\r\n  }\r\n`\r\n\r\nexport const ItemH = styled(Item)`\r\n  flex-direction: row;\r\n  flex: ${props => props.flex || '1'};\r\n\r\n  ${ItemBreak} {\r\n    width: auto;\r\n    height: 0;\r\n  }\r\n`\r\n\r\nexport const WaveOuter = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: ${props => props.bottom || '-70px'};\r\n  top: ${props => props.top || 'auto'};\r\n  transform: ${props => props.transform || 'initial'};\r\n`;\r\n\r\nexport const WaveInner = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  transform: ${props => props.transform || 'initial'};\r\n`;\r\n\r\nexport const Arc = styled.div`\r\n  position: absolute;\r\n\toverflow: hidden;\r\n\twidth: 100%;\r\n\theight: 300px;\r\n\r\n  bottom: ${props => props.bottom || 'auto'};\r\n  top: ${props => props.top || 'auto'};\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n  \twidth: 300%;\r\n  \theight: 300%;\r\n  \ttop: -25%;\r\n  \tleft: -100%;\r\n\r\n\r\n    ${ props => props.arcRGB && css`\r\n      \tbackground: radial-gradient(ellipse at center, ${props.arcRGB}00 0%, ${props.arcRGB}00 50%, ${props.arcRGB}ff 50%, ${props.arcRGB}ff 100%);\r\n    `};\r\n  }\r\n`\r\n\r\nexport const H1 = styled.h1`\r\n  @media (max-width: 480px) {\r\n    font-size: 2.1rem;\r\n  }\r\n`\r\n\r\nexport const H2 = styled.h2`\r\n  color: ${props => props.color || '#000'};\r\n  font-weight: ${props => props.weight || 600};\r\n  font-size: ${props => props.size || \"2rem\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  margin: ${props => props.margin || \"20px 0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\r\n  text-align: ${props => props.textAlign || \"inherit\"};\r\n`\r\n\r\nexport const H3 = styled.h3`\r\n  color: ${props => props.color || 'rgb(0 0 0 / 0.5)'};\r\n  font-weight: ${props => props.weight || 300};\r\n  font-size: ${props => props.size || \"1rem\"};\r\n  text-transform: ${props => props.textTransform || \"uppercase\"};\r\n  margin: ${props => props.margin || \"-15px 0px 20px 0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"0.1em\"};\r\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\r\n  text-align: ${props => props.textAlign || \"inherit\"};\r\n  max-width: ${props => props.maxWidth || 'initial'};\r\n`\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n  display: flex;\r\n`\r\n\r\nexport const P = styled.p`\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n\r\n  color: ${props => props.color || '#000'};\r\n  background: ${props => props.bg || 'transparent'};\r\n  font-weight: ${props => props.weight || 300};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  margin: ${props => props.margin || \"20px 0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  text-align: ${props => props.textAlign || \"initial\"};\r\n`\r\n\r\nexport const Para = styled(P)`\r\n  font-weight: ${props => props.weight || 300};\r\n  letter-spacing: ${props => props.spacing || \"0.02em\"};\r\n  font-size: ${props => props.size || \"1.1em\"};\r\n  color: ${props => props.color || \"#000000ee\"};\r\n`\r\n\r\nexport const Span = styled.span`\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n\r\n  color: ${props => props.color || '#000'};\r\n  background: ${props => props.bg || 'transparent'};\r\n  font-weight: ${props => props.weight || 300};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  margin: ${props => props.margin || \"0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  text-align: ${props => props.textAlign || \"initial\"};\r\n\r\n  position: ${props => props.pos || 'initial'};\r\n  right: ${props => props.right || 'auto'};\r\n  left: ${props => props.left || 'auto'};\r\n  bottom: ${props => props.bottom || 'auto'};\r\n  top: ${props => props.top || 'auto'};\r\n\r\n  z-index: ${props => props.z || 'auto'};\r\n`\r\n\r\nexport const B = styled.span`\r\n  color: ${props => props.color || 'inherit'};\r\n  font-weight: ${props => props.weight || 'bold'};\r\n`\r\n\r\nexport const UL = styled.ul`\r\n\r\n`\r\n\r\nexport const LI = styled.li`\r\n  margin: 10px 0px;\r\n`\r\n\r\nexport const Anchor = styled.a`\r\n  display: flex;\r\n  flex-direction: ${props => props.direction || 'row'};\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  font-weight: ${props => props.weight || 400};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  color: ${props => props.color || \"#fff\"};\r\n  background: ${props => props.bg || \"transparent\"};\r\n  margin: ${props => props.margin || \"0\"};\r\n  padding: ${props => props.padding || \"10px 15px\"};\r\n  letter-spacing: ${props => props.spacing || \"0.2em\"};\r\n  border: ${props => props.border || \"none\"};\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  width: ${props => props.width || \"initial\" };\r\n\r\n  position: relative;\r\n  text-decoration: none;\r\n  overflow: ${props => props.overflow || \"hidden\"};\r\n  z-index: 3;\r\n\r\n  filter: ${props => props.filter || \"none\"};\r\n\r\n  cursor: pointer;\r\n  pointer: hand;\r\n\r\n  &:hover & {\r\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\r\n  }\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\r\n    display: none;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${props => props.hoverBG || \"#000\"};\r\n    opacity: 0;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:hover:before {\r\n    display: block;\r\n  }\r\n\r\n  &:hover:after {\r\n    opacity: 0.08;\r\n  }\r\n  &:active:after {\r\n    opacity: 0.15;\r\n  }\r\n`\r\n\r\nexport const AnchorLink = styled(Anchor)`\r\n  background-color:${props => props.theme.scheme === \"dark\" ? props.bg :\"#d1cdcd\"};\r\n`\r\n\r\nexport const RouterLink = styled(Link)`\r\n  display: flex;\r\n  flex-direction: ${props => props.direction || 'row'};\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  font-weight: ${props => props.weight || 400};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  color: ${props => props.color || \"#fff\"};\r\n  background: ${props => props.bg || \"transparent\"};\r\n  margin: ${props => props.margin || \"0\"};\r\n  padding: ${props => props.padding || \"10px 15px\"};\r\n  letter-spacing: ${props => props.spacing || \"0.2em\"};\r\n  border: ${props => props.border || \"none\"};\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  width: ${props => props.width || \"initial\" };\r\n\r\n  position: relative;\r\n  text-decoration: none;\r\n  overflow: ${props => props.overflow || \"hidden\"};\r\n  z-index: 3;\r\n\r\n  filter: ${props => props.filter || \"none\"};\r\n\r\n  cursor: pointer;\r\n  pointer: hand;\r\n\r\n  &:hover & {\r\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\r\n  }\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\r\n    display: none;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${props => props.hoverBG || \"#000\"};\r\n    opacity: 0;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:hover:before {\r\n    display: block;\r\n  }\r\n\r\n  &:hover:after {\r\n    opacity: 0.08;\r\n  }\r\n  &:active:after {\r\n    opacity: 0.15;\r\n  }\r\n`\r\n\r\nexport const A = styled(Anchor)`\r\n  display: inline;\r\n  color: #e1087f;\r\n  background: transparent;\r\n  padding: 0px;\r\n  letter-spacing: inherit;\r\n  text-transform: initial;\r\n`\r\n\r\nexport const C = styled(Anchor)`\r\n  display: inline;\r\n  color: #4292e4;\r\n  background: transparent;\r\n  padding: 0px;\r\n  letter-spacing: inherit;\r\n  text-transform: initial;\r\n`\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  font-weight: ${props => props.weight || 400};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  color: ${props => props.color || \"#fff\"};\r\n  background: ${props => props.bg || \"tranparent\"};\r\n  margin: ${props => props.margin || \"0\"};\r\n  padding: ${props => props.padding || \"10px 15px\"};\r\n  letter-spacing: ${props => props.spacing || \"initial\"};\r\n  border: ${props => props.border || \"none\"};\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  text-transform: ${props => props.textTransform || \"initial\"};\r\n\r\n  position: relative;\r\n  text-decoration: none;\r\n  overflow: ${props => props.overflow || \"hidden\"};\r\n  z-index: 3;\r\n\r\n  cursor: pointer;\r\n  pointer: hand;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\r\n    display: none;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${props => props.hoverBG || \"#000\"};\r\n    opacity: 0;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:hover:before {\r\n    display: block;\r\n  }\r\n\r\n  &:hover:after {\r\n    opacity: 0.08;\r\n  }\r\n  &:active:after {\r\n    opacity: 0.15;\r\n  }\r\n\r\n  & > div {\r\n    display: flex;\r\n  }\r\n`\r\n\r\nexport const Showoff = styled.div`\r\n  position: absolute;\r\n  right: ${props => props.right || 'auto'};\r\n  left: ${props => props.left || 'auto'};\r\n  bottom: ${props => props.bottom || 'auto'};\r\n  top: ${props => props.top || 'auto'};\r\n  transform: ${props => props.transform || 'initial'};\r\n  opacity: ${props => props.opacity || 'initial'};\r\n\r\n  @media (max-width: 768px) {\r\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\r\n\r\n    right: ${props => (props.tabletRight ? props.tabletRight : (props.right ? props.right : \"auto\")) || \"auto\"};\r\n    left: ${props => (props.tabletLeft ? props.tabletLeft : (props.left ? props.left : \"auto\")) || \"auto\"};\r\n    top: ${props => (props.tabletTop ? props.tabletTop : (props.top ? props.top : \"auto\")) || \"auto\"};\r\n    bottom: ${props => (props.tabletBottom ? props.tabletBottom : (props.bottom ? props.bottom : \"auto\")) || \"auto\"};\r\n\r\n    transform: ${props => (props.tabletTransform ? props.tabletTransform : (props.transform ? props.transform : \"auto\")) || \"auto\"};\r\n\r\n    opacity: ${props => (props.tabletOpacity ? props.tabletOpacity : (props.opacity ? props.opacity : \"auto\")) || \"initial\"};\r\n  }\r\n`\r\n\r\nexport const FormSubmision = styled.form`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  font-weight: ${props => props.weight || 400};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  color: ${props => props.color || \"#fff\"};\r\n  background: ${props => props.bg || \"transparent\"};\r\n  margin: ${props => props.margin || \"0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  border: ${props => props.border || \"none\"};\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  position: relative;\r\n`\r\n\r\nexport const Input = styled.input`\r\n  display: ${props => props.display || 'flex'};\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  font-weight: ${props => props.weight || 300};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  color: ${props => props.color || \"#000\"};\r\n  background: ${props => props.bg || \"transparent\"};\r\n  margin: ${props => props.margin || \"0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  border: ${props => props.border || \"none\"};\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  outline: ${props => props.outline || \"none\"};\r\n  overflow: ${props => props.overflow || \"hidden\"};\r\n  position: relative;\r\n\r\n  cursor: ${props => props.cursor || \"initial\"};\r\n  pointer: ${props => props.hand || \"initial\"};\r\n\r\n  &:focus + span {\r\n    opacity: 0;\r\n\r\n    -webkit-transition: all 0.2s ease-in-out;\r\n    -moz-transition: all 0.2s ease-in-out;\r\n    -o-transition: all 0.2s ease-in-out;\r\n    transition: all 0.2s ease-in-out;\r\n  }\r\n`\r\n\r\nexport const TextField = styled.textarea`\r\n  display: flex;\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  font-weight: ${props => props.weight || 300};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  color: ${props => props.color || \"#000\"};\r\n  background: ${props => props.bg || \"transparent\"};\r\n  margin: ${props => props.margin || \"0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  border: ${props => props.border || \"none\"};\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  outline: ${props => props.outline || \"none\"};\r\n  overflow: ${props => props.overflow || \"hidden\"};\r\n  position: relative;\r\n  resize: vertical;\r\n\r\n  &:focus + span {\r\n    opacity: 0;\r\n\r\n    -webkit-transition: all 0.2s ease-in-out;\r\n    -moz-transition: all 0.2s ease-in-out;\r\n    -o-transition: all 0.2s ease-in-out;\r\n    transition: all 0.2s ease-in-out;\r\n  }\r\n`\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\"No internet connection found. App is running in offline mode.\");\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { envConfig } from \"@project/contracts\";\r\nimport { PortisConnector } from '@web3-react/portis-connector'\r\n// import { NetworkConnector } from '@web3-react/network-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\n// import { WalletLinkConnector } from '@web3-react/walletlink-connector'\r\nimport { LedgerConnector } from '@web3-react/ledger-connector'\r\nimport { TrezorConnector } from '@web3-react/trezor-connector'\r\n// import { FrameConnector } from '@web3-react/frame-connector'\r\n// import { AuthereumConnector } from '@web3-react/authereum-connector'\r\n// import { FortmaticConnector } from '@web3-react/fortmatic-connector'\r\n// import { SquarelinkConnector } from '@web3-react/squarelink-connector'\r\n// import { TorusConnector } from '@web3-react/torus-connector'\r\n\r\nrequire('dotenv').config();\r\nconst SUPPORTED_CHAIN_IDS = [...envConfig.allowedNetworks];\r\nconst POLLING_INTERVAL = 12000;\r\nconst CORE_CHAIN_ID = envConfig.coreContractChain;\r\nconst CORE_RPC = envConfig.coreRPC;\r\n\r\nconst RPC_URLS: { [chainId: number]: string } = {\r\n  [CORE_CHAIN_ID]: envConfig.coreRPC\r\n}\r\n\r\nexport const injected = new InjectedConnector({ supportedChainIds: SUPPORTED_CHAIN_IDS })\r\n\r\n\r\nexport const walletconnect = new WalletConnectConnector({\r\n  rpc: { ...RPC_URLS },\r\n  bridge: 'https://bridge.walletconnect.org',\r\n  qrcode: true,\r\n  pollingInterval: POLLING_INTERVAL\r\n})\r\n//\r\n// export const walletlink = new WalletLinkConnector({\r\n//   url: RPC_URLS[1],\r\n//   appName: 'web3-react example'\r\n// })\r\n//\r\nexport const ledger = new LedgerConnector({ chainId: CORE_CHAIN_ID, url: CORE_RPC, pollingInterval: POLLING_INTERVAL })\r\n\r\nexport const trezor = new TrezorConnector({\r\n  chainId: CORE_CHAIN_ID,\r\n  url: CORE_RPC,\r\n  pollingInterval: POLLING_INTERVAL,\r\n  manifestEmail: 'support@epns.io',\r\n  manifestAppUrl: 'https://staging-app.epns.io'\r\n})\r\n\r\n//\r\n// export const frame = new FrameConnector({ supportedChainIds: [1] })\r\n//\r\n// export const authereum = new AuthereumConnector({ chainId: 42 })\r\n//\r\n// export const fortmatic = new FortmaticConnector({ apiKey: process.env.FORTMATIC_API_KEY as string, chainId: 4 })\r\n\r\nexport const portis = new PortisConnector({ dAppId: 'cfefa032-9afd-4833-bfb4-2b0cb7ec3413' as string, networks: [CORE_CHAIN_ID] })\r\n\r\n// export const squarelink = new SquarelinkConnector({\r\n//   clientId: process.env.SQUARELINK_CLIENT_ID as string,\r\n//   networks: [1, 100]\r\n// })\r\n\r\n// export const torus = new TorusConnector({ chainId: 1 })\r\n","import { useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nimport { injected } from './connectors'\r\n\r\nrequire('dotenv').config();\r\n\r\nexport function useEagerConnect() {\r\n  const { activate, active } = useWeb3React()\r\n\r\n  const [tried, setTried] = useState(false)\r\n\r\n  useEffect(() => {\r\n    injected.isAuthorized().then((isAuthorized: boolean) => {\r\n      if (isAuthorized) {\r\n        activate(injected, undefined, true).catch(() => {\r\n          setTried(true)\r\n        })\r\n      } else {\r\n        setTried(true)\r\n      }\r\n    })\r\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\r\n\r\n  // if the connection worked, wait until we get confirmation of that to flip the flag\r\n  useEffect(() => {\r\n    if (!tried && active) {\r\n      setTried(true)\r\n    }\r\n  }, [tried, active])\r\n\r\n  return tried\r\n}\r\n\r\nexport function useInactiveListener(suppress: boolean = false) {\r\n  const { active, error, activate } = useWeb3React()\r\n\r\n  useEffect((): any => {\r\n    const { ethereum } = window as any\r\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\r\n      const handleConnect = () => {\r\n        console.log(\"Handling 'connect' event\")\r\n        activate(injected)\r\n      }\r\n      const handleChainChanged = (chainId: string | number) => {\r\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\r\n        activate(injected)\r\n      }\r\n      const handleAccountsChanged = (accounts: string[]) => {\r\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\r\n        if (accounts.length > 0) {\r\n          activate(injected)\r\n        }\r\n      }\r\n      const handleNetworkChanged = (networkId: string | number) => {\r\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\r\n        activate(injected)\r\n      }\r\n\r\n      ethereum.on('connect', handleConnect)\r\n      ethereum.on('chainChanged', handleChainChanged)\r\n      ethereum.on('accountsChanged', handleAccountsChanged)\r\n      ethereum.on('networkChanged', handleNetworkChanged)\r\n\r\n      return () => {\r\n        if (ethereum.removeListener) {\r\n          ethereum.removeListener('connect', handleConnect)\r\n          ethereum.removeListener('chainChanged', handleChainChanged)\r\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\r\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\r\n        }\r\n      }\r\n    }\r\n  }, [active, error, suppress, activate])\r\n}\r\n","// Usage:\r\n//   create component file (e.g. BlockiesIdenticon.js) using uncommented code below\r\n//   npm install blockies-identicon\r\n//   in the file you want to use the component (e.g. BlockiesIdenticon.js):\r\n//   import Blockies from \"blockies/react-component\";\r\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\r\n\r\nimport React from 'react';\r\nimport blockies from \"./blockies\";\r\n\r\nexport default class BlockiesIdenticon extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  getOpts () {\r\n    return {\r\n      seed: this.props.opts.seed || \"foo\",\r\n      color: this.props.opts.color || \"#dfe\",\r\n      bgcolor: this.props.opts.bgcolor || \"#a71\",\r\n      size: this.props.opts.size || 15,\r\n      scale: this.props.opts.scale || 3,\r\n      spotcolor: this.props.opts.spotcolor || \"#000\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.draw();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    // Check for prop change\r\n    if (this.props.seed !== prevProps.seed) {\r\n      this.draw();\r\n    }\r\n  }\r\n  draw() {\r\n    blockies.render({\r\n      seed: this.props.opts.seed,\r\n      size: this.props.opts.size,\r\n      scale: this.props.opts.scale\r\n    }, this.canvas);\r\n  }\r\n  render() {\r\n    return React.createElement(\"canvas\", {ref: canvas => this.canvas = canvas});\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\n\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport Loader from 'react-loader-spinner'\r\nimport Blockies from \"components/BlockiesIdenticon\";\r\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\r\n\r\n// Create Header\r\nfunction Profile() {\r\n  const { active, error, account, library, chainId } = useWeb3React();\r\n\r\n  const [address, setAddress] = React.useState('');\r\n  const [ens, setENS] = React.useState('');\r\n  const [ensFetched, setENSFetched] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (account && account != '') {\r\n      // Check if the address is the same\r\n      if (address !== account) {\r\n        setENS('');\r\n        setENSFetched(false);\r\n\r\n        // get ens\r\n        library\r\n          .lookupAddress(account).then(function(name) {\r\n            setENS(name);\r\n            setENSFetched(true);\r\n            setAddress(account);\r\n          })\r\n          .catch(() => {\r\n            setENSFetched(true);\r\n            setAddress(account);\r\n          })\r\n      }\r\n\r\n    }\r\n  }, [account]);\r\n\r\n  // to create blockies\r\n\r\n  return (\r\n    <>\r\n    {account && account !== '' && !error &&\r\n      <Container>\r\n        <Blocky>\r\n          <BlockyInner>\r\n             <Blockies seed={account.toLowerCase()} opts={{seed: account.toLowerCase(), size: 7, scale: 7}}/>\r\n          </BlockyInner>\r\n        </Blocky>\r\n        <Wallet>\r\n        {!ensFetched &&\r\n          <Loader\r\n      \t     type=\"Oval\"\r\n      \t     color=\"#FFF\"\r\n      \t     height={16}\r\n      \t     width={16}\r\n      \t  />\r\n        }\r\n        {ensFetched && ens &&\r\n          <>{ens}</>\r\n        }\r\n        {ensFetched && !ens &&\r\n          <>{account.substring(0, 6)}.....{account.substring(account.length - 6)}</>\r\n        }\r\n        </Wallet>\r\n      </Container>\r\n    }\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.button`\r\n  margin: 0;\r\n  padding: 0;\r\n  background: none;\r\n  border: 0;\r\n  outline: 0;\r\n  justify-content: flex-start;\r\n  flex: 1,\r\n  flex-direction: row;\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst Blocky = styled.div`\r\n  position: relative;\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 100%;\r\n  overflow: hidden;\r\n  transform: scale(0.85);\r\n  outline-width: 2px;\r\n  outline-color: rgba(225,225,225,1);\r\n`\r\n\r\nconst BlockyInner = styled.div`\r\n`\r\n\r\nconst Wallet = styled.span`\r\n  margin: 0px 10px;\r\n  padding: 8px 15px;\r\n  height: 16px;\r\n  display: flex;\r\n  align-items: baseline;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  color: #fff;\r\n  border-radius: 15px;\r\n  background: rgb(226,8,128);\r\n  background: linear-gradient(107deg, rgba(226,8,128,1) 30%, rgba(103,76,159,1) 70%, rgba(53,197,243,1) 100%);\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\n\r\n// Export Default\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { AnimateOnChange } from 'react-animation';\r\n\r\n// Create Header\r\nfunction Bell({ badgeCount, bellPressedCB, width, height }) {\r\n  const [badge, setBadge] = React.useState(0);\r\n  const [ring, setRing] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    // Set new badge count and ring the bell\r\n    setBadge(badgeCount);\r\n\r\n    if (badge > 0) {\r\n      setResetRinger();\r\n    }\r\n  }, [badgeCount]);\r\n\r\n  const setResetRinger = () => {\r\n    setRing(true);\r\n\r\n    setTimeout(() => {\r\n        setRing(false)\r\n    }, 500);\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      onClick={() => {\r\n        if (bellPressedCB) {bellPressedCB();}\r\n      }}\r\n      width={width}\r\n      height={height}\r\n    >\r\n      <BellImage ring={ring} src=\"./bell.png\" className=\"tadaaa\" ringme={ring} width={width} height={height} />\r\n      <BellImageAbs src=\"./bellball.png\" width={width} height={height} />\r\n      <BellImageAbs src=\"./ring.png\" width={width} height={height} />\r\n      {badge != 0 &&\r\n        <AnimateOnChange\r\n          animationIn=\"fadeIn\"\r\n          animationOut=\"fadeOut\"\r\n          durationOut={200}\r\n        >\r\n          <Badge>{badge}</Badge>\r\n        </AnimateOnChange>\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  background: transparent;\r\n  border: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0 10px;\r\n  position: relative;\r\n  height: ${props => props.height || 40}px;\r\n  width: ${props => props.width || 40}px;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\n\r\nconst tadaaa = keyframes`\r\n  0% {\r\n    -webkit-transform: scale3d(1, 1, 1);\r\n    -ms-transform: scale3d(1, 1, 1);\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n\r\n  10%, 20% {\r\n    -webkit-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\r\n    -ms-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\r\n    transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\r\n  }\r\n\r\n  30%, 50%, 70%, 90% {\r\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\r\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\r\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\r\n  }\r\n\r\n  40%, 60%, 80% {\r\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\r\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\r\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\r\n  }\r\n\r\n  100% {\r\n    -webkit-transform: scale3d(1, 1, 1);\r\n    -ms-transform: scale3d(1, 1, 1);\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n`;\r\n\r\nconst BellImage = styled.img`\r\n  position: absolute;\r\n  height: ${props => props.height || 40}px;\r\n  width: ${props => props.width || 40}px;\r\n\r\n  transition: transform .2s ease-out;\r\n  ${ props => props.ringme && css`\r\n    animation: ${tadaaa} 1s ease-out;\r\n  `};\r\n\r\n\r\n`\r\n\r\nconst BellImageAbs = styled(BellImage)`\r\n  left: 0,\r\n`\r\n\r\nconst Badge = styled.span`\r\n  position: absolute;\r\n  font-size: 10px;\r\n  color: #fff;\r\n  padding: 2px 4px;\r\n  border-radius: 100%;\r\n  background: rgba(208.0, 44.0, 30.0, 1.0);\r\n  top: 0px;\r\n  left: 5px;\r\n  font-weight: bold;\r\n`\r\n\r\n// Export Default\r\nexport default Bell;\r\n","export default {\r\n    LINKS: {\r\n      IOS_APP: 'https://apps.apple.com/app/ethereum-push-service-epns/id1528614910',\r\n      ANDROID_APP: 'https://play.google.com/store/apps/details?id=io.epns.epns&hl=mr&gl=US'\r\n    },\r\n  \r\n    // For Async Storage --> Represents Key and some Constants\r\n    STORAGE: {\r\n  \r\n    },\r\n  \r\n    CONSTANTS: {\r\n      HEADER_HEIGHT: 70,\r\n      LEFT_BAR_WIDTH: 260,\r\n\r\n      NAVBAR_SECTIONS: {\r\n        PRIMARY: 1,\r\n        SECONDARY: 2,\r\n        MOBILE: 3\r\n      },\r\n\r\n      NAVBAR_IDENTIFIERS: {\r\n        CREATE_CHANNEL: 1,\r\n        COMMUNICATE_TAB: 2,\r\n        DEVELOPER_TAB: 3,\r\n      }\r\n    },\r\n  \r\n    ADJUSTMENTS: {\r\n    },\r\n  \r\n    COLORS: {\r\n      PRIMARY: 'rgba(27.0, 150.0, 227.0, 1.0)',\r\n  \r\n      LINKS: 'rgba(20.0, 126.0, 251.0, 1.0)',\r\n  \r\n      GRADIENT_PRIMARY: 'rgba(226.0, 8.0, 128.0, 1.0)',\r\n      GRADIENT_SECONDARY: 'rgba(53.0, 197.0, 243.0, 1.0)',\r\n      GRADIENT_THIRD: 'rgba(103.0, 76.0, 159.0, 1.0)',\r\n  \r\n      TRANSPARENT: 'transparent',\r\n  \r\n      WHITE: 'rgba(255.0, 255.0, 255.0, 1.0)',\r\n      DARK_WHITE: 'rgba(255.0, 255.0, 255.0, 0.75)',\r\n      MID_WHITE: 'rgba(255.0, 255.0, 255.0, 0.5)',\r\n      LIGHT_WHITE: 'rgba(255.0, 255.0, 255.0, 0.25)',\r\n  \r\n      SLIGHTER_GRAY: 'rgba(250.0, 250.0, 250.0, 1)',\r\n      SLIGHT_GRAY: 'rgba(231.0, 231.0, 231.0, 1)',\r\n      LIGHT_GRAY: 'rgba(225.0, 225.0, 225.0, 1)',\r\n      MID_GRAY: 'rgba(200.0, 200.0, 200.0, 1)',\r\n      DARK_GRAY: 'rgba(160.0, 160.0, 160.0, 1)',\r\n      DARKER_GRAY: 'rgba(100.0, 100.0, 100.0, 1)',\r\n  \r\n      LIGHT_BLACK_TRANS: 'rgba(0.0, 0.0, 0.0, 0.1)',\r\n      SEMI_MID_BLACK_TRANS: 'rgba(0.0, 0.0, 0.0, 0.25)',\r\n      MID_BLACK_TRANS: 'rgba(0.0, 0.0, 0.0, 0.5)',\r\n      DARK_BLACK_TRANS: 'rgba(0.0, 0.0, 0.0, 0.75)',\r\n      BLACK: 'rgba(0.0, 0.0, 0.0, 1.0)',\r\n  \r\n      CONFIRM_GREEN: 'rgba(50.0, 205.0, 50.0, 1.0)',\r\n  \r\n      CONFIRM: 'rgba(34.0, 139.0, 34.0, 1.0)',\r\n      WARNING: 'rgba(255.0, 153.0, 0.0, 1.0)',\r\n  \r\n      SUBLIME_RED: 'rgba(237.0, 59.0, 72.0, 1.0)',\r\n      BADGE_RED: 'rgba(208.0, 44.0, 30.0, 1.0)',\r\n      LIGHT_MAROON: 'rgba(159.0, 0.0, 0.0, 1.0)',\r\n      LIGHTER_MAROON: 'rgba(129.0, 0.0, 0.0, 1.0)',\r\n    },\r\n  };\r\n  ","import React from \"react\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\n\r\nimport { BiChevronDown, BiChevronUp } from 'react-icons/bi';\r\n\r\nimport styled, { useTheme, css } from \"styled-components\";\r\nimport {Section, Item, ItemH, Span, Anchor, RouterLink, Image} from 'components/SharedStyling';\r\n\r\nimport { themeDark } from \"config/Themization\";\r\nimport GLOBALS from \"config/Globals\";\r\n\r\n// Create Header\r\nfunction NavigationButton({ item, data, sectionID, active }) {\r\n  const theme = useTheme();\r\n\r\n  let SelectedIcon;\r\n  let RouteLogic;\r\n  let definedMargin;\r\n\r\n  switch(sectionID) {\r\n    case GLOBALS.CONSTANTS.NAVBAR_SECTIONS.MOBILE:\r\n      SelectedIcon = LeftBarPrimaryItemIcon;\r\n      definedMargin = \"5px\";\r\n      break;\r\n    case GLOBALS.CONSTANTS.NAVBAR_SECTIONS.SECONDARY:\r\n      SelectedIcon = item.isSection ? LeftBarSecondarySectionIcon : LeftBarSecondaryItemIcon;\r\n      definedMargin = item.isSection ? \"0px\" : \"5px\";\r\n      break;\r\n    default:\r\n      SelectedIcon = item.isSection ? LeftBarPrimarySectionIcon : LeftBarPrimaryItemIcon;\r\n      definedMargin = item.isSection ? \"0px\" : \"5px\";\r\n  }\r\n\r\n  if (data.isRoute) {\r\n    RouteLogic = RouterLink;\r\n  }\r\n  else {\r\n    RouteLogic = Anchor;\r\n  }\r\n\r\n  return (\r\n    <RouteLogic\r\n      flex=\"1\"\r\n      title={`${data.title}`}\r\n      to={`${data.href ? data.href : '#'}`}\r\n      href={`${data.href ? data.href : '#'}`}\r\n      alt={`${data.alt}`}\r\n      target={data.isRoute ? null : data.newTab ? \"_blank\" : \"self\"}\r\n      disabled={data.disabled}\r\n      hoverBG={theme.leftBarHoverColor}\r\n      radius=\"12px\"\r\n      align=\"stretch\"\r\n      padding=\"10px\"\r\n      margin={definedMargin}\r\n      active={active}\r\n      className={data.name.toLowerCase()}\r\n    >\r\n      <ItemH\r\n          align=\"center\"\r\n      >\r\n          <SelectedIcon\r\n            src={`./${data.src}`}\r\n            margin=\"0 5px\"\r\n            alt={`${data.alt}`}\r\n            active={active}\r\n          />\r\n          \r\n          <Span \r\n            flex=\"1\" \r\n            weight=\"400\"\r\n            spacing=\"0\"\r\n            margin=\"0 5px\"\r\n            color={theme.leftBarFontColor}\r\n          >\r\n            {data.name}\r\n          </Span>\r\n          \r\n          {item.hasItems && !item.opened &&\r\n            <BiChevronDown\r\n              color={theme.leftBarFontColor}\r\n            />\r\n          }\r\n\r\n          {item.hasItems && item.opened &&\r\n            <BiChevronUp\r\n              color={theme.leftBarFontColor}\r\n            />\r\n          }\r\n      </ItemH>\r\n    </RouteLogic>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst InheritedSectionGroupIcon = styled(Image)`\r\n  height: 32px;\r\n  width: 32px;\r\n  margin: 0 5px;\r\n\r\n  filter: ${(props) => props.active ? \"brightness(1)\" : props.theme === themeDark ? \"brightness(0) invert(1)\" : \"brightness(0)\"};\r\n  opacity: ${(props) => props.active ? \"1\" : props.theme === themeDark ? \"0.5\" : \"0.25\"};\r\n\r\n  transition: transform .1s ease-out;\r\n  ${ props => props.active && css`\r\n    transform: scale(1.1) translate(0px, 0px);\r\n  `};\r\n`\r\n\r\nconst InheritedSectionItemIcon = styled(Image)`\r\n  height: 16px;\r\n  width: 16px;\r\n  margin: 0 5px;\r\n\r\n  filter: ${(props) => props.active ? \"brightness(1)\" : props.theme === themeDark ? \"brightness(0) invert(1)\" : \"brightness(0)\"};\r\n  opacity: ${(props) => props.active ? \"1\" : props.theme === themeDark ? \"0.5\" : \"0.25\"};\r\n\r\n  transition: transform .1s ease-out;\r\n  ${ props => props.active && css`\r\n    transform: scale(1.25) translate(0px, 0px);\r\n  `};\r\n\r\n`\r\n\r\nconst LeftBarPrimarySectionIcon = styled(InheritedSectionGroupIcon)`\r\n\r\n`\r\n\r\nconst LeftBarPrimaryItemIcon = styled(InheritedSectionItemIcon)`\r\n\r\n`\r\n\r\n\r\nconst LeftBarSecondarySectionIcon = styled(InheritedSectionGroupIcon)`\r\n  height: 16px;\r\n  width: 16px;\r\n`\r\n\r\nconst LeftBarSecondaryItemIcon = styled(InheritedSectionItemIcon)`\r\n\r\n`\r\n\r\n// Export Default\r\nexport default NavigationButton;\r\n","import React, { createContext, useState } from 'react'\r\n\r\nexport const NavigationContext = createContext({});\r\n\r\nconst NavigationContextProvider = (props) => {\r\n  const [navigationSetup, setNavigationSetup] = useState(null);\r\n  \r\n  return (\r\n    <NavigationContext.Provider value={{ navigationSetup, setNavigationSetup }}>\r\n      {props.children}\r\n    </NavigationContext.Provider>\r\n  )\r\n}\r\n\r\nexport default NavigationContextProvider;","import React, { useContext } from \"react\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\r\n} from '@web3-react/injected-connector'\r\nimport { Web3Provider } from 'ethers/providers'\r\n\r\nimport { DarkModeSwitch } from 'react-toggle-dark-mode';\r\n\r\nimport { AiOutlineMenu, AiOutlineClose } from 'react-icons/ai';\r\n\r\nimport styled, { css, useTheme } from \"styled-components\";\r\nimport {Section, Item, ItemH, Button, Span} from 'components/SharedStyling';\r\n\r\nimport Profile from 'components/Profile';\r\nimport Bell from 'components/Bell';\r\nimport NavigationButton from 'components/NavigationButton';\r\n\r\nimport { NavigationContext } from \"contexts/NavigationContext\";\r\n\r\nimport GLOBALS from \"config/Globals\";\r\n\r\n// Create Header\r\nfunction Header({ isDarkMode, darkModeToggle }) {\r\n  // Get theme\r\n  const theme = useTheme();\r\n\r\n  // Get Web3 Context\r\n  const context = useWeb3React<Web3Provider>()\r\n\r\n  const { navigationSetup } = useContext(NavigationContext)\r\n\r\n  const { active, error } = useWeb3React();\r\n  const { deactivate } = context\r\n\r\n  const [showLoginControls, setShowLoginControls] = React.useState(false);\r\n\r\n  // Handle Nav Bar\r\n  const [showNavBar, setShowNavBar] = React.useState(false);\r\n\r\n  // Handle Header Tag\r\n  const [ headerTag, setHeaderTag ] = React.useState(null);\r\n\r\n  // Get Location\r\n  const location = useLocation();\r\n\r\n  React.useEffect(() => {\r\n    // runs when navigation setup is updated, will run on init\r\n    updateHeaderTag(location)\r\n  }, [navigationSetup])\r\n\r\n  // Change text based on change of location\r\n  React.useEffect(() => {\r\n    // runs on location, i.e. route, change\r\n    updateHeaderTag(location)\r\n  }, [location])\r\n\r\n  // handle header tag update\r\n  const updateHeaderTag = (location) => {\r\n    if (navigationSetup) {\r\n      Object.entries(navigationSetup.navigation).forEach(([key, value]) => {\r\n        const item = navigationSetup.navigation[key];\r\n        if (location.pathname === item.data.href) {\r\n          setHeaderTag(item.data.headerTag);\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  // handle error functions\r\n  function getErrorMessage(error: Error) {\r\n    if (error instanceof NoEthereumProviderError) {\r\n      return 'Web3 not enabled, install MetaMask on desktop or visit from a dApp browser on mobile'\r\n    } else if (error instanceof UnsupportedChainIdError) {\r\n      return \"Unsupported Network, please connect to the Ethereum Kovan network\"\r\n    } else if (\r\n      error instanceof UserRejectedRequestErrorInjected\r\n    ) {\r\n      return 'Please authorize this website to access the dApp'\r\n    } else {\r\n      console.error(error)\r\n      return 'An unknown error occurred. Check the console for more details'\r\n    }\r\n  }\r\n\r\n  const bellPressed = () => {\r\n    setShowLoginControls(!showLoginControls);\r\n  }\r\n\r\n  const disconnect = () => {\r\n    setShowLoginControls(false);\r\n    deactivate();\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      direction=\"row\"\r\n      padding=\"0px 15px\"\r\n    >\r\n      \r\n      <ItemH\r\n        justify=\"flex-start\"\r\n        flex=\"0\"\r\n      >\r\n        <RightBarContainer\r\n          justify=\"flex-start\"\r\n          flex=\"0\"\r\n        >\r\n          <RightBarDesktop\r\n            justify=\"flex-start\"\r\n            flex=\"0\"\r\n          >\r\n            {active && !error &&\r\n              <Profile />\r\n            }\r\n            {!active &&\r\n              <Logo src=\"epns.png\" />\r\n            }\r\n          </RightBarDesktop>\r\n          \r\n          {active && !error &&\r\n            <RightBarMobile>\r\n              <Button\r\n                bg=\"transparent\"\r\n                padding=\"5px\"\r\n                radius=\"4px\"\r\n                onClick={() => {setShowNavBar(!showNavBar)}}\r\n              >\r\n                <AiOutlineMenu size={30} color={theme.headerIconsBg}/>\r\n              </Button>\r\n            </RightBarMobile>\r\n          }\r\n        </RightBarContainer>\r\n        \r\n        {navigationSetup && showNavBar && active && !error &&\r\n          <NavMenuContainer\r\n            tabletAlign=\"flex-start\"\r\n          >\r\n            <NavMenu>\r\n              <Profile />\r\n\r\n              <NavMenuInner\r\n                tabletAlign=\"flex-start\"\r\n              >\r\n                {Object.keys(navigationSetup.navigation).map(function(key) {\r\n                  return (\r\n                    <Item\r\n                      onClick={() => {setShowNavBar(!showNavBar)}}\r\n                    >\r\n                      <NavigationButton\r\n                        item={navigationSetup.navigation[key]}\r\n                        data={navigationSetup.navigation[key].data}\r\n                        sectionID={GLOBALS.CONSTANTS.NAVBAR_SECTIONS.MOBILE}\r\n                        active={navigationSetup.navigation[key].active}\r\n                      />\r\n                    </Item>\r\n                  );\r\n                })}\r\n              </NavMenuInner>\r\n            </NavMenu>\r\n\r\n            <Item\r\n              position=\"absolute\"\r\n              top=\"15px\"\r\n              right=\"5px\"\r\n            >\r\n              <Button\r\n                bg=\"transparent\"\r\n                padding=\"5px\"\r\n                radius=\"4px\"\r\n                onClick={() => {setShowNavBar(!showNavBar)}}\r\n              >\r\n                <AiOutlineClose size={30} color={theme.headerIconsBg}/>\r\n              </Button>\r\n            </Item>\r\n\r\n          </NavMenuContainer>\r\n        }\r\n      </ItemH>\r\n\r\n      <ItemH\r\n        justify=\"flex-end\"\r\n      >\r\n        {headerTag && active && !error &&\r\n          <HeaderTag\r\n            align=\"flex-start\"\r\n            overflow=\"hidden\"\r\n            margin=\"0px 5px\"\r\n          >\r\n            <Span\r\n              textTransform=\"uppercase\"\r\n              spacing=\"0.1em\"\r\n              weight=\"normal\"\r\n              padding=\"8px 15px\"\r\n              bg={!isDarkMode ? headerTag.light.bg : headerTag.dark.bg}\r\n              color={!isDarkMode ? headerTag.light.fg : headerTag.dark.fg}\r\n            >\r\n              {headerTag.title}\r\n            </Span>\r\n          </HeaderTag>\r\n        }\r\n        \r\n\r\n       \r\n           \r\n        {active && !error &&\r\n          <Bell\r\n            badgeCount={0}\r\n            bellPressedCB={bellPressed}\r\n            width={32}\r\n            height={32}\r\n          />\r\n        }\r\n         <DarkModeSwitch\r\n              style={{ margin: '0 1rem' }}\r\n              checked={isDarkMode}\r\n              onChange={darkModeToggle}\r\n              size={24}\r\n              sunColor=\"#ddd\"\r\n            />\r\n\r\n        {showLoginControls &&\r\n          <Item\r\n            position=\"absolute\"\r\n          >\r\n            <Button\r\n              bg=\"#000\"\r\n              size=\"12px\"\r\n              spacing=\"0.2em\"\r\n              textTransform=\"uppercase\"\r\n              weight=\"600\"\r\n              radius=\"20px\"\r\n              onClick={disconnect}\r\n            >\r\n              Disconnect\r\n            </Button>\r\n          </Item>\r\n        }\r\n\r\n        <ItemH\r\n          justify=\"flex-end\"\r\n          flex=\"initial\"\r\n        >\r\n          {!!error &&\r\n            <PrimaryTheme>{getErrorMessage(error)}</PrimaryTheme>\r\n          }\r\n          {!active && !error &&\r\n            <ThirdTheme>Please connect to a Web3 Network</ThirdTheme>\r\n          }\r\n          <Connection phase={active ? 'active' : error ? 'error' : 'waiting'} />\r\n        </ItemH>\r\n      </ItemH>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// CSS Styles\r\nconst Container = styled(Section)`\r\n  background: ${props => props.theme.headerBg};\r\n  border-bottom: 1px solid ${props => props.theme.sectionBorderBg};\r\n  height: ${GLOBALS.CONSTANTS.HEADER_HEIGHT}px;\r\n`\r\n\r\nconst Logo = styled.img`\r\n  height: 40px;\r\n`\r\n\r\nconst RightBarContainer = styled(ItemH)`\r\n\r\n`\r\n\r\nconst RightBarDesktop = styled(ItemH)`\r\n  @media (max-width: 992px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst RightBarMobile = styled(ItemH)`\r\n  margin: 5px 5px 5px -5px;\r\n  \r\n  @media (min-width: 993px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst NavMenuContainer = styled(Item)`\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n  z-index: 1;\r\n  align-items: flex-start;\r\n\r\n  background: ${props => props.theme.navMenuBg};\r\n  backdrop-filter: blur(30px);\r\n  z-index: 11;\r\n`\r\n\r\nconst NavMenu = styled(Item)`\r\n  align-items: stretch;\r\n  justify-content: flex-start;\r\n  padding: 10px 10px;\r\n`\r\n\r\nconst NavMenuInner = styled(Item)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: nowrap;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n  overflow-y: scroll;\r\n  height: calc(100vh - 70px);\r\n`\r\n\r\nconst Notice = styled.span`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n`\r\n\r\nconst PrimaryTheme = styled(Notice)`\r\n  background: #e20880;\r\n`\r\n\r\nconst ThirdTheme = styled(Notice)`\r\n  background: #674c9f;\r\n`\r\n\r\nconst Connection = styled.span`\r\n  height: 10px;\r\n  width: 10px;\r\n  border-radius: 100%;\r\n  flex-shrink: 0;\r\n\r\n  ${props => props.phase === 'active' && css`\r\n    background: #77DD77;\r\n  `};\r\n\r\n  ${props => props.phase === 'waiting' && css`\r\n    background: #FFAE42;\r\n  `};\r\n\r\n  ${props => props.phase === 'error' && css`\r\n    background: #DC143C;\r\n  `};\r\n`\r\n\r\nconst HeaderTag = styled(Item)`\r\n  flex: 1;\r\n  margin=\"5px 15px 5px 15px\"\r\n\r\n  @media (min-width: 993px) {\r\n    margin: \"5px 10px\";\r\n  }\r\n`\r\n\r\nconst DarkMode = styled(Item)`\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\n// Export Default\r\nexport default Header;\r\n","import { themeLight, themeDark } from \"config/Themization\";\r\nimport GLOBALS from \"config/Globals\";\r\n\r\nconst NavigationList = {\r\n    primary: {\r\n      communicate: {\r\n        uid: GLOBALS.CONSTANTS.NAVBAR_IDENTIFIERS.COMMUNICATE_TAB,\r\n        src: \"svg/communicate.svg\",\r\n        iconFactory: null,\r\n        name: 'Communicate',\r\n        title: 'Communicate Tab',\r\n        alt: 'Communicate Tab Icon',\r\n        href: null,\r\n        newTab: false,\r\n        isRoute: true,\r\n        hasMenuLogic: true,\r\n        opened: true,\r\n  \r\n        drilldown: {\r\n          inbox: {\r\n            src: \"svg/feedbox.svg\",\r\n            iconFactory: null,\r\n            name: 'Inbox',\r\n            title: 'Inbox',\r\n            alt: 'Open Inbox',\r\n            href: '/inbox',\r\n            newTab: false,\r\n            isRoute: true,\r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: 'Inbox',\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_PRIMARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n          spam: {\r\n            src: \"svg/spam.svg\",\r\n            iconFactory: null,\r\n            name: 'Spam',\r\n            title: 'Spam',\r\n            alt: 'Open Spam',\r\n            href: '/spam',\r\n            newTab: false,\r\n            isRoute: true,\r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: 'Spam',\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_PRIMARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },  \r\n          channels: {\r\n            src: \"svg/channel.svg\",\r\n            iconFactory: null,\r\n            name: 'Channels',\r\n            title: 'Browse Channels',\r\n            alt: 'Open Channels',\r\n            href: '/channels',\r\n            newTab: false,\r\n            isRoute: true,\r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: 'View Channels',\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_SECONDARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n          receiveNotifs: {\r\n            src: \"svg/share.svg\",\r\n            iconFactory: null,\r\n            name: 'Receive Notifs',\r\n            title: 'Receive Notifs',\r\n            alt: 'Receive Notifs',\r\n            href: '/receive',\r\n            newTab: false,\r\n            isRoute: true,\r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: 'Receive Notifications',\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_THIRD,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n        }\r\n      },\r\n      developer: {\r\n        uid: GLOBALS.CONSTANTS.NAVBAR_IDENTIFIERS.DEVELOPER_TAB,\r\n        src: \"svg/developer.svg\",\r\n        iconFactory: null,\r\n        name: 'Developer',\r\n        title: 'Check Developer Tab',\r\n        alt: 'Developer Tab Icon',\r\n        href: null,\r\n        newTab: false,\r\n        opened: false,\r\n        isRoute: true,\r\n        hasMenuLogic: true,\r\n  \r\n        drilldown: {\r\n          createChannel: {\r\n            uid: GLOBALS.CONSTANTS.NAVBAR_IDENTIFIERS.CREATE_CHANNEL,\r\n            src: \"svg/channeladmin.svg\",\r\n            iconFactory: null,\r\n            name: 'Create Channel',\r\n            title: 'Create Channel',\r\n            alt: 'Create Channels / Dashboard',\r\n            href: '/dashboard',\r\n            newTab: false,\r\n            isRoute: true,\r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: 'Channel Dashboard',\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_SECONDARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n          developerGuide: {\r\n            uid: GLOBALS.CONSTANTS.NAVBAR_IDENTIFIERS.DEVELOPER_GUIDE,\r\n            src: \"svg/tutorial.svg\",\r\n            iconFactory: null,\r\n            name: \"Developer's Guide\",\r\n            title: \"Developer's Guide\",\r\n            alt: \"Developer's Guide\",\r\n            href: 'https://docs.epns.io/',\r\n            newTab: false,\r\n            isRoute: false,\r\n            hasMenuLogic: false,\r\n            headerTag: {\r\n              title: \"Developer's Guide\",\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_SECONDARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n          dynamicEnviroment: {\r\n            src: \"svg/network.svg\",\r\n            iconFactory: null,\r\n            name: window.location.hostname == \"app.epns.io\" ? \"Staging dApp\" : window.location.hostname == \"staging-app.epns.io\" ? \"Dev dApp\": \"Prod dApp\",\r\n            title: window.location.hostname == \"app.epns.io\" ? \"Staging dApp\" : window.location.hostname == \"staging-app.epns.io\" ? \"Dev dApp\": \"Prod dApp\",\r\n            alt: window.location.hostname == \"app.epns.io\" ? \"Checkout Staging dApp\" : window.location.hostname == \"staging-app.epns.io\" ? \"Checkout Dev dApp\": \"Checkout Prod dApp\",\r\n            href: window.location.hostname == \"app.epns.io\" ? \"https://staging-app.epns.io\" : window.location.hostname == \"staging-app.epns.io\" ? \"https://app-dev.epns.io\": \"https://app.epns.io\",\r\n            newTab: false,\r\n            isRoute: false,\r\n            hasMenuLogic: false,\r\n            headerTag: {\r\n              title: \"Various dApp Enviroments\",\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_SECONDARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n          // createTestChannel: {\r\n          //   uid: GLOBALS.CONSTANTS.NAVBAR_IDENTIFIERS.CREATE_TEST_CHANNEL,\r\n          //   src: \"svg/news.svg\",\r\n          //   iconFactory: null,\r\n          //   name: 'Create Test Channel',\r\n          //   title: 'Go To Staging Environment To Create a Test Channel',\r\n          //   alt: 'Create A Test Channel',\r\n          //   href: 'https://staging-app.epns.io/#/dashboard',\r\n          //   newTab: false,\r\n          //   isRoute: false,\r\n          //   hasMenuLogic: true,\r\n          //   headerTag: {\r\n          //     title: 'Create A Test Channel',\r\n          //     light: {\r\n          //       bg: GLOBALS.COLORS.GRADIENT_SECONDARY,\r\n          //       fg: themeLight.headerTagFg,\r\n          //     },\r\n          //     dark: {\r\n          //       bg: themeDark.headerTagBg,\r\n          //       fg: themeDark.headerTagFg,\r\n          //     }\r\n          //   }\r\n          // },\r\n        },\r\n      },\r\n      govern: {\r\n        src: \"svg/govern.svg\",\r\n        iconFactory: null,\r\n        name: 'Govern',\r\n        title: 'Governance Tab',\r\n        alt: 'Governance Tab Icon', \r\n        href: null,\r\n        newTab: false,\r\n        opened: false,\r\n        isRoute: true,\r\n        hasMenuLogic: true,\r\n  \r\n        drilldown: {\r\n          governance: {\r\n            uid: GLOBALS.CONSTANTS.NAVBAR_IDENTIFIERS.GOVERNANCE,\r\n            src: \"svg/governalt.svg\",\r\n            iconFactory: null,\r\n            name: 'Governance',\r\n            title: 'Governance',\r\n            alt: 'Governance',\r\n            href: '/govern',\r\n            newTab: false,\r\n            isRoute: true,\r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: 'Governance',\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_SECONDARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n          governanceGuide: {\r\n            uid: GLOBALS.CONSTANTS.NAVBAR_IDENTIFIERS.GOVERNANCE_GUIDE,\r\n            src: \"svg/tutorial.svg\",\r\n            iconFactory: null,\r\n            name: \"Learn to Govern\",\r\n            title: \"Learn to Govern\",\r\n            alt: \"Learn to Govern\",\r\n            href: ' https://docs.epns.io/epns-governance/governance-guide',\r\n            newTab: false,\r\n            isRoute: false,\r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: \"Learn to Govern\",\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_SECONDARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n        },\r\n      },\r\n      incentives: {\r\n        src: \"svg/incentive.svg\",\r\n        iconFactory: null,\r\n        name: 'Incentives',\r\n        title: 'Check Incentives Tab',\r\n        alt: 'Incentives Tab Icon',\r\n        href: null,\r\n        newTab: false,\r\n        opened: false,\r\n        isRoute: true,\r\n        hasMenuLogic: true,\r\n  \r\n        drilldown: {\r\n          yield: {\r\n            src: \"svg/yield.svg\",\r\n            iconFactory: null,\r\n            name: 'Yield Farming',\r\n            title: 'Yield Farming',\r\n            alt: 'Open Yield Farming',\r\n            href: '/yield',\r\n            newTab: false,\r\n            isRoute: true,  \r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: \"Yield Farming\",\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_PRIMARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n          rockstars: {\r\n            src: \"svg/rockstars.svg\",\r\n            iconFactory: null,\r\n            name: 'Rockstars of EPNS',\r\n            title: 'Check Rockstars of EPNS',\r\n            alt: 'Open Inbox',\r\n            href: '/rockstar',\r\n            newTab: false,\r\n            isRoute: true,\r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: \"Rockstars NFTs\",\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_SECONDARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n          airdrop: {\r\n            src: \"svg/gratitude.svg\",\r\n            iconFactory: null,\r\n            name: 'Gratitude Drop',\r\n            title: 'Check Gratitude Drop',\r\n            alt: 'Open Gratitude Drop',\r\n            href: '/gratitude',\r\n            newTab: false,\r\n            isRoute: true,\r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: \"Gratitude Drop\",\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_THIRD,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },      \r\n        }\r\n      },\r\n      walkthrough: {\r\n        src: \"svg/walkthrough.svg\",\r\n        iconFactory: null,\r\n        name: 'Walkthrough',\r\n        title: 'Check Walkthrough Tab',\r\n        alt: 'Walkthrough Tab Icon',\r\n        href: null,\r\n        newTab: false,\r\n        opened: false,\r\n        isRoute: true,\r\n        hasMenuLogic: true,\r\n  \r\n        drilldown: {\r\n          livewalkthrough: {\r\n            src: \"svg/tutorial.svg\",\r\n            iconFactory: null,\r\n            name: 'Live Walkthrough',\r\n            title: 'Live Walkthrough',\r\n            alt: 'Start Live Walkthrough',\r\n            href: '/live_walkthrough',\r\n            newTab: false,\r\n            isRoute: true,  \r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: \"Live Walkthrough\",\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_SECONDARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n          faq: {\r\n            src: \"svg/qna.svg\",\r\n            iconFactory: null,\r\n            name: 'FAQs',\r\n            title: 'Checkout Frequently Asked Questions',\r\n            alt: 'Open FAQs',\r\n            href: '/faq',\r\n            newTab: false,\r\n            isRoute: true,\r\n            hasMenuLogic: true,\r\n            headerTag: {\r\n              title: \"FAQ\",\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_PRIMARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n          quickGuide: {\r\n            src: \"svg/tutorial.svg\",\r\n            iconFactory: null,\r\n            name: \"Quick Guide\",\r\n            title: \"Quick Guide\",\r\n            alt: \"Quick Guide\",\r\n            href: 'https://getstarted.epns.io/',\r\n            newTab: false,\r\n            isRoute: false,\r\n            hasMenuLogic: false,\r\n            headerTag: {\r\n              title: \"Quick Guide\",\r\n              light: {\r\n                bg: GLOBALS.COLORS.GRADIENT_SECONDARY,\r\n                fg: themeLight.headerTagFg,\r\n              },\r\n              dark: {\r\n                bg: themeDark.headerTagBg,\r\n                fg: themeDark.headerTagFg,\r\n              }\r\n            }\r\n          },\r\n        } \r\n      }\r\n    },\r\n    secondary: {\r\n      latest: {\r\n        src: \"svg/news.svg\",\r\n        iconFactory: null,\r\n        name: 'Latest',\r\n        title: 'Checkout latest news',\r\n        alt: \"Open What's Latest\",\r\n        // href: 'https://staging-dapp.epns.io',\r\n        id:\"olvy-target\",\r\n        newTab: false,\r\n        opened: false,\r\n        isRoute: true,\r\n        isMenuLogic: false,\r\n      },\r\n      support: {\r\n        src: \"svg/support.svg\",\r\n        iconFactory: null,\r\n        name: 'Support',\r\n        title: 'Open a support ticket',\r\n        alt: 'Open Support Ticket',\r\n        href: '/support',\r\n        newTab: false,\r\n        opened: false,\r\n        isRoute: true,\r\n        isMenuLogic: false,\r\n      },\r\n    },\r\n  }\r\n  \r\n  export default NavigationList;\r\n  ","/**\r\n * This file helps us to maintain the state of the user journey tutorial\r\n */\r\n import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n const initialState = {\r\n   run: false,\r\n   stepIndex: 0,\r\n   welcomeNotifs: [],// only welcome notifications\r\n   tutorialContinous: false,\r\n   isCommunicateOpen: false,\r\n   isDeveloperOpen: false,\r\n };\r\n \r\n export const userJourneySlice = createSlice({\r\n     name: \"tutorial\",\r\n     initialState,\r\n     reducers: {\r\n         incrementStepIndex: (state) => {\r\n             state.stepIndex += 1;\r\n         },\r\n         decrementStepIndex: (state) => {\r\n           if (state.stepIndex > 0)\r\n             state.stepIndex -= 1;\r\n         },\r\n         setRun: (state, action) => {\r\n             state.run = action.payload;\r\n         },\r\n         setIndex: (state, action) => {\r\n           state.stepIndex = action.payload;\r\n         },\r\n         addNewWelcomeNotif: (state, action) => {\r\n             state.welcomeNotifs = [{...action.payload}, ...state.welcomeNotifs]\r\n         },\r\n         setWelcomeNotifsEmpty: (state) => {\r\n             state.welcomeNotifs = [];\r\n         },\r\n         setTutorialContinous: (state, action) => {\r\n             state.tutorialContinous = action.payload;\r\n             },\r\n         setCommunicateOpen: (state, action) => {\r\n             state.isCommunicateOpen = action.payload;\r\n             },\r\n            setDeveloperOpen: (state, action) => {\r\n                state.isDeveloperOpen = action.payload;\r\n            },\r\n     }\r\n });\r\n \r\n export const {\r\n     incrementStepIndex,\r\n     decrementStepIndex,\r\n     setRun,\r\n     setIndex,\r\n     addNewWelcomeNotif,\r\n     setWelcomeNotifsEmpty,\r\n     setTutorialContinous,\r\n     setCommunicateOpen,\r\n    setDeveloperOpen\r\n } = userJourneySlice.actions;\r\n \r\n export default userJourneySlice.reducer;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\n\r\nimport Loader from 'react-loader-spinner';\r\nimport { FaGithub, FaTelegramPlane, FaMedium, FaDiscord, FaTwitter } from 'react-icons/fa';\r\n\r\nimport styled, { useTheme, css } from \"styled-components\";\r\nimport {Section, Item, ItemH, Span, AnchorLink as Anchor, RouterLink, Image} from 'components/SharedStyling';\r\n\r\nimport NavigationButton from 'components/NavigationButton';\r\nimport navigationList from \"config/NavigationList\";\r\n\r\nimport { NavigationContext } from \"contexts/NavigationContext\";\r\n\r\nimport GLOBALS from \"config/Globals\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {incrementStepIndex, decrementStepIndex, setRun, setDeveloperOpen , setTutorialContinous , setCommunicateOpen} from \"../redux/slices/userJourneySlice\";\r\n\r\n// Create Header\r\nfunction Navigation() {\r\n    const { channelDetails } = useSelector((state: any) => state.admin);\r\n    const [loading, setLoading] = useState(false);\r\n    const [ refresh, setRefresh ] = useState(false);\r\n\r\n  const { run, stepIndex, isCommunicateOpen } = useSelector((state: any) => state.userJourney);\r\n    const { navigationSetup, setNavigationSetup } = useContext(NavigationContext)\r\n    if(!run && navigationSetup !== null && channelDetails!==null){\r\n      navigationSetup.primary[1].data.drilldown[0].data.name = channelDetails.name;\r\n    } else if(run && navigationSetup !== null) {\r\n      navigationSetup.primary[1].data.drilldown[0].data.name = 'Create Channel';\r\n    }\r\n    const theme = useTheme();\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n    // Similar to componentDidMount and componentDidUpdate:\r\n\r\n  \r\n    useEffect(() => {\r\n      if (!loading) {\r\n          setLoading(true);\r\n\r\n          // Set Primary List\r\n          const primaryList = returnTransformedList(navigationList.primary, GLOBALS.CONSTANTS.NAVBAR_SECTIONS.PRIMARY);\r\n  \r\n          // Set Secondary List\r\n          const secondaryList = returnTransformedList(navigationList.secondary, GLOBALS.CONSTANTS.NAVBAR_SECTIONS.SECONDARY);\r\n\r\n          // Set Nav List\r\n          let count = -1;\r\n          let navList = returnNavList(navigationList.primary, count);\r\n          navList = Object.assign(navList, returnNavList(navigationList.secondary, Object.keys(navList).length));\r\n          \r\n          const finalList = {\r\n            primary: primaryList,\r\n            secondary: secondaryList,\r\n            navigation: navList\r\n          };\r\n          \r\n          setNavigationSetup(finalList);\r\n      }\r\n        \r\n    }, []);\r\n    \r\n    const returnTransformedList = (lists, identity) => {\r\n      let transformedList = [];\r\n      let count = -1;\r\n      Object.entries(lists).forEach(([key, value]) => {\r\n        count++;\r\n        let identifier = count.toString();\r\n\r\n        const section = lists[key];\r\n\r\n        transformedList[identifier] = {};\r\n        transformedList[identifier].active = false;\r\n        transformedList[identifier].isSection = true;\r\n        transformedList[identifier].hasMenuLogic = value.hasMenuLogic;\r\n\r\n        transformedList[identifier].id = identity + \"_\" + key;\r\n        transformedList[identifier].parent = null;\r\n        transformedList[identifier].hasItems = false;\r\n        transformedList[identifier].opened = false;\r\n\r\n        if (location.pathname === section.href) {\r\n            transformedList[identifier].active = true;\r\n        }\r\n        transformedList[identifier].data = value;\r\n\r\n        if (section.hasOwnProperty('drilldown')) {\r\n          let drillcount = -1;\r\n          let drilldownModified = {};\r\n\r\n          Object.entries(section.drilldown).forEach(([drillkey, drillvalue]) => {\r\n            drillcount++;\r\n            let drillIdentifier = drillcount.toString();\r\n            const item = section.drilldown[drillkey];\r\n\r\n            drilldownModified[drillIdentifier] = {};\r\n            drilldownModified[drillIdentifier].active = false;\r\n            drilldownModified[drillIdentifier].isSection = false;\r\n            drilldownModified[drillIdentifier].hasMenuLogic = drillvalue.hasMenuLogic;\r\n\r\n            drilldownModified[drillIdentifier].id = drillkey;\r\n            drilldownModified[drillIdentifier].parent = transformedList[identifier].id;\r\n            transformedList[identifier].hasItems = true;\r\n\r\n            // Check and expand it if the pathname matches\r\n            if (location.pathname === item.href) {\r\n                transformedList[identifier].active = true;\r\n                transformedList[identifier].opened = true;\r\n\r\n                drilldownModified[drillIdentifier].active = true;\r\n            }\r\n\r\n            drilldownModified[drillIdentifier].data = drillvalue;\r\n          })\r\n\r\n          transformedList[identifier].data.drilldown = drilldownModified;\r\n        }\r\n      });\r\n\r\n      return transformedList;\r\n    }\r\n\r\n    // Location has changed, reflect it accordingly\r\n    React.useEffect(() => {\r\n      if (navigationSetup) {\r\n        // loop and find the item in question\r\n        Object.entries(navigationSetup).forEach(([key, value]) => {\r\n          if (key === \"primary\" || key === \"secondary\") {\r\n            const topSection = navigationSetup[key];\r\n\r\n            Object.entries(topSection).forEach(([key, value]) => {\r\n              const section = topSection[key];\r\n\r\n              if (section.data.hasOwnProperty('drilldown')) {\r\n                Object.entries(section.data.drilldown).forEach(([drillkey, drillvalue]) => {\r\n                  const item = section.data.drilldown[drillkey];\r\n\r\n                  if (location.pathname === item.data.href) {\r\n                    const transformedList = mutateTransformedList(item);\r\n                    setNavigationSetup(transformedList);\r\n                    setRefresh(!refresh);\r\n                    return;\r\n                  }\r\n                });\r\n              }\r\n              else {\r\n                if (location.pathname === section.data.href) {\r\n                  const transformedList = mutateTransformedList(section);\r\n                  setNavigationSetup(transformedList);\r\n                  setRefresh(!refresh);\r\n                  return;\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }, [location, navigationSetup])\r\n\r\n    const mutateTransformedList = (item, onlyDrilldown) => {\r\n      // Finally transform the json menulist\r\n      let transformedMenuList = navigationSetup; \r\n\r\n      let activeParentId = null;\r\n      let activeDrilldownId = null; \r\n\r\n      // check if this requires menu Logic\r\n      if (item.hasMenuLogic) {\r\n        // check if it's a section\r\n        if (item.isSection) {\r\n          activeParentId = item.id;\r\n        }\r\n        else {\r\n          // item is drilldown, mark both id \r\n          activeDrilldownId = item.id;\r\n          activeParentId = item.parent;\r\n        }\r\n      }\r\n\r\n      if (activeParentId == null && activeDrilldownId == null) {\r\n        // nothing to do, return back\r\n        return transformedMenuList;\r\n      }\r\n\r\n      // Check and take action on Drop down getting toggled or section doesn't have dropdown menu\r\n      let selectedSectionIsActionable = false;\r\n\r\n      if (activeDrilldownId == null) {\r\n        Object.keys(transformedMenuList).forEach(key => {\r\n          if (key === 'primary' || key === 'secondary') {\r\n            Object.keys(transformedMenuList[key]).forEach(sectionkey => {\r\n              const section = transformedMenuList[key][sectionkey];\r\n              \r\n              if (section.id === activeParentId) {\r\n                transformedMenuList[key][sectionkey].opened = !transformedMenuList[key][sectionkey].opened;\r\n\r\n                if (section.hasItems) {\r\n                  selectedSectionIsActionable = true;\r\n                }\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n\r\n      if (selectedSectionIsActionable || onlyDrilldown) {\r\n        // section had items but activeDrilldownId not set means dropdown toggle\r\n        return transformedMenuList;\r\n      }\r\n      else {\r\n        // menu item is getting selected\r\n        Object.keys(transformedMenuList).forEach(key => {\r\n          if (key === 'primary' || key === 'secondary') {\r\n            Object.keys(transformedMenuList[key]).forEach(sectionkey => {\r\n              const section = transformedMenuList[key][sectionkey];\r\n\r\n              if (section.id !== activeParentId) {\r\n                if (section.active) {\r\n                  transformedMenuList[key][sectionkey].active = false;\r\n                  \r\n                  if (section.hasItems) {\r\n                    // loop and make all false\r\n                    Object.keys(transformedMenuList[key][sectionkey].data.drilldown).forEach(drillkey => {\r\n                      transformedMenuList[key][sectionkey].data.drilldown[drillkey].active = false;\r\n                    })\r\n                  }\r\n                }\r\n              }\r\n              else {\r\n                transformedMenuList[key][sectionkey].active = true;\r\n                \r\n                if (section.hasItems) {\r\n                  // loop and make all false\r\n                  Object.keys(transformedMenuList[key][sectionkey].data.drilldown).forEach(drillkey => {\r\n                    const item = transformedMenuList[key][sectionkey].data.drilldown[drillkey];\r\n\r\n                    if (item.id === activeDrilldownId) {\r\n                      transformedMenuList[key][sectionkey].data.drilldown[drillkey].active = true;\r\n                    }\r\n                    else {\r\n                      transformedMenuList[key][sectionkey].data.drilldown[drillkey].active = false;\r\n                    }\r\n                  })\r\n                }\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n\r\n      return transformedMenuList;\r\n    }\r\n\r\n    const returnNavList = (lists, count) => {\r\n      let transformedList = [];\r\n      \r\n      Object.entries(lists).forEach(([key, value]) => {\r\n        const section = lists[key];\r\n\r\n        // omit parent if drilldown\r\n        if (section.hasOwnProperty('drilldown')) {\r\n          Object.entries(section.drilldown).forEach(([drillkey, drillvalue]) => {\r\n            count++;\r\n            let identifier = count.toString();\r\n\r\n            const item = section.drilldown[drillkey];\r\n\r\n            transformedList[identifier] = {};\r\n            transformedList[identifier].active = false;\r\n            transformedList[identifier].isSection = false;\r\n            transformedList[identifier].id = `${key}_${drillkey}`;\r\n\r\n            // Check and expand it if the pathname matches\r\n            if (location.pathname === item.href) {\r\n              transformedList[identifier].active = true;\r\n            }\r\n            transformedList[identifier].data = drillvalue.data;\r\n          })\r\n        }\r\n        else {\r\n          count++;\r\n          let identifier = count.toString();\r\n\r\n          transformedList[identifier] = {};\r\n          transformedList[identifier].active = false;\r\n          transformedList[identifier].isSection = true;\r\n          transformedList[identifier].hasItems = false;\r\n          transformedList[identifier].id = key;\r\n\r\n          if (location.pathname === section.href) {\r\n              transformedList[identifier].active = true;\r\n          }\r\n          transformedList[identifier].data = value;\r\n        }\r\n      });\r\n\r\n      return transformedList;\r\n    }\r\n\r\n    // Render main items\r\n    const renderMainItems = (items, sectionID) => {\r\n      let Section;\r\n      let fontSize;\r\n      let secondaryButton=0;\r\n      switch(sectionID) {\r\n        case GLOBALS.CONSTANTS.NAVBAR_SECTIONS.SECONDARY:\r\n          Section = SecondarySection;\r\n          fontSize = \"small\";\r\n          secondaryButton=1;\r\n          break;\r\n        default:\r\n          Section = PrimarySection;\r\n          fontSize = \"normal\";\r\n      }\r\n\r\n      let rendered = (\r\n        Object.keys(items).map(function(key) {\r\n          const section = items[key];\r\n          console.log(section)\r\n          const data = section.data;\r\n          const uid = section.data.uid;\r\n          if(uid === 2 ){\r\n            if(section.opened)\r\n            dispatch(setCommunicateOpen(true))\r\n            else\r\n            dispatch(setCommunicateOpen(false))\r\n          }\r\n          else if(uid === 3){\r\n            if(section.opened)\r\n            dispatch(setDeveloperOpen(true))\r\n            else\r\n            dispatch(setDeveloperOpen(false))\r\n          }\r\n          let innerRendered = (\r\n            <Section \r\n                key={key}\r\n                flex=\"1\"\r\n                align=\"stretch\"\r\n                size={fontSize}\r\n            >\r\n\r\n              {\r\n                (secondaryButton)?\r\n                  (\r\n                    <Item\r\n                    padding=\"10px\"\r\n                    flexBasis=\"100%\"\r\n                    align=\"stretch\"\r\n                    direction=\"row\"\r\n                    overflow=\"hidden\"\r\n                  >\r\n                    <SectionInnerGroupContainer\r\n                      flex=\"1\"\r\n                      align=\"stretch\"\r\n                      bg={theme.leftBarButtonBg}\r\n                      zIndex={2}\r\n                      refresh={refresh}\r\n                      margintop=\"15px\"\r\n                      onClick={() => {\r\n                        console.log(`Clicked secondary button`);\r\n                        mutateTransformedList(section, true)\r\n                      }}      \r\n                      id={data.id}          \r\n                    >\r\n                      <NavigationButton\r\n                        item={section}\r\n                        data={data}\r\n                        sectionID={sectionID}\r\n                        active={section.active}\r\n                      />\r\n                    </SectionInnerGroupContainer>\r\n                    \r\n                    { \r\n                    section.hasItems \r\n                      ? renderChildItems(\r\n                          data.drilldown, \r\n                          section.opened,\r\n                          GLOBALS.CONSTANTS.NAVBAR_SECTIONS.PRIMARY\r\n                        )\r\n                      : null\r\n                    }\r\n                  </Item>\r\n                  ):\r\n                  (\r\n                    <Item\r\n                      padding=\"10px\"\r\n                      flexBasis=\"100%\"\r\n                      align=\"stretch\"\r\n                      direction=\"row\"\r\n                      overflow=\"hidden\"\r\n                    >\r\n                        <SectionInnerGroupContainer\r\n                          flex=\"1\"\r\n                          align=\"stretch\"\r\n                          bg={theme.leftBarButtonBg}\r\n                          margintop=\"-10px\"\r\n                          zIndex={2}\r\n                          refresh={refresh}\r\n                          // id={section.data.name}\r\n                          onClick={() => {\r\n                            // const uid = section.data.uid;\r\n                            // if(uid === 2 ){\r\n                            //   if(!section.opened)\r\n                            //   dispatch(setCommunicateOpen(true))\r\n                            //   else\r\n                            //   dispatch(setCommunicateOpen(false))\r\n                            // }\r\n                            // else if(uid === 3){\r\n                            //   if(!section.opened)\r\n                            //   dispatch(setDeveloperOpen(true))\r\n                            //   else\r\n                            //   dispatch(setDeveloperOpen(false))\r\n                            // }\r\n                            console.log(`Clicked primary button`);\r\n                            mutateTransformedList(section, true)\r\n    \r\n                        if(run && ((stepIndex === 1 && uid === 2) || (stepIndex === 16 && uid === 3)))\r\n                        {\r\n\r\n                          setTimeout(() => {\r\n                            dispatch(incrementStepIndex())\r\n                            // if (stepIndex === 1 && uid === 2)dispatch(setTutorialContinous(true));\r\n                          }, 500);\r\n                        }\r\n                          }}              \r\n                        >\r\n                        <NavigationButton\r\n                          item={section}\r\n                          data={data}\r\n                          sectionID={sectionID}\r\n                          active={section.active}\r\n                        />\r\n                      </SectionInnerGroupContainer>\r\n                    \r\n                      { \r\n                      section.hasItems \r\n                        ? renderChildItems(\r\n                            data.drilldown, \r\n                            section.opened,\r\n                            GLOBALS.CONSTANTS.NAVBAR_SECTIONS.PRIMARY\r\n                          )\r\n                        : null\r\n                      }\r\n                    </Item>\r\n                  )\r\n                \r\n              }\r\n             \r\n                \r\n\r\n            </Section>\r\n          )\r\n\r\n          return innerRendered;\r\n        })\r\n      )\r\n\r\n      return rendered;\r\n    }\r\n\r\n    // Render Child Items\r\n    const renderChildItems = (drilldown, opened, sectionID) => {\r\n      let SectionGroup;\r\n      let SectionItem;\r\n\r\n      switch(sectionID) {\r\n        case GLOBALS.CONSTANTS.NAVBAR_SECTIONS.SECONDARY:\r\n          SectionGroup = PrimarySectionGroup;\r\n          SectionItem = PrimarySectionItem;\r\n          break;\r\n        default:\r\n          SectionGroup = PrimarySectionGroup;\r\n          SectionItem = PrimarySectionItem;\r\n      }\r\n\r\n      let rendered = (\r\n        <SectionGroup\r\n          align=\"stretch\"\r\n          opened={opened}\r\n          refresh={refresh}\r\n        >\r\n          {Object.keys(drilldown).map(function(key) {\r\n            const item = drilldown[key];\r\n            const data = item.data;\r\n            return (\r\n              <SectionItem\r\n                  key={key}\r\n                  flex=\"1\"\r\n                  align=\"stretch\"\r\n                  size=\"small\" \r\n              >\r\n                <SectionInnerItemContainer\r\n                  flex=\"1\"\r\n                  align=\"stretch\"\r\n                  bg={theme.leftBarButtonBg}\r\n                  zIndex={1}\r\n                  refresh={refresh}\r\n                  onClick={() => {\r\n                    // console.log();\r\n                    if(run && ((stepIndex=== 2 && data.name === \"Channels\") || (stepIndex === 6 && data.name === \"Inbox\")|| (stepIndex === 8 && data.name === \"Spam\") ||  (stepIndex === 10 && data.name === \"Receive Notifs\") ||  (stepIndex === 16 && data.name === \"Create Channel\") ||  (stepIndex === 17 && data.name === \"Developer's Guide\")))\r\n                    { \r\n                      if(stepIndex === 10)dispatch(setTutorialContinous(true));\r\n                      dispatch(incrementStepIndex())\r\n                    }\r\n                    console.log(`Clicked  button`);\r\n                    // mutateTransformedList(item)\r\n                  }}\r\n                >\r\n                  <NavigationButton\r\n                    item={item}\r\n                    data={data}\r\n                    sectionID={sectionID}\r\n                    active={item.active}\r\n                  />\r\n                </SectionInnerItemContainer>\r\n              </SectionItem>\r\n            )\r\n          })}\r\n        </SectionGroup>\r\n      );\r\n\r\n      return rendered;\r\n    }\r\n    \r\n    return (\r\n      <Container direction=\"column\" headerHeight={GLOBALS.CONSTANTS.HEADER_HEIGHT}>\r\n        {!navigationSetup &&\r\n          <Item padding=\"20px\" justify=\"flex-start\">\r\n            <Loader type=\"Oval\" color={theme.leftBarLoaderBg} height={20} width={20} />\r\n          </Item>\r\n        }\r\n        {navigationSetup && Object.keys(navigationSetup).length > 0 &&\r\n          <>\r\n            <Primary>\r\n              {\r\n                renderMainItems(\r\n                  navigationSetup.primary,\r\n                  GLOBALS.CONSTANTS.NAVBAR_SECTIONS.PRIMARY\r\n                )\r\n              }\r\n            </Primary>\r\n            <Footer\r\n              justify=\"flex-end\"\r\n              align=\"strecth\"\r\n            >\r\n              <Secondary\r\n                align=\"stretch\"\r\n                justify=\"flex-end\"\r\n                margin=\"10px 0px 10px 0px\"\r\n              >\r\n                {\r\n                  renderMainItems(\r\n                    navigationSetup.secondary,\r\n                    GLOBALS.CONSTANTS.NAVBAR_SECTIONS.SECONDARY\r\n                  )\r\n                }\r\n              </Secondary>\r\n\r\n              {/* Put social */}\r\n              <ItemH\r\n                flex=\"initial\"\r\n                padding=\"10px\"\r\n                radius=\"0px 12px 0px 0px\"\r\n                bg={theme.leftBarSocialBg}\r\n              >\r\n                <Anchor\r\n                title=\"Open Twitter\"\r\n                href=\"https://twitter.com/epnsproject\"\r\n                target=\"_blank\"\r\n                bg={theme.leftBarSocialIconBg}\r\n                radius=\"4px\"\r\n                padding=\"10px\"\r\n                margin=\"5px\"\r\n                onMouseOver={({ target }) => target.style.color = theme.color}\r\n                onMouseOut={({target})=>target.style.color = \"fff\"}\r\n                >\r\n                  <FaTwitter size={15} color=\"fff\" />\r\n                </Anchor>\r\n                <Anchor\r\n                  title=\"Open Telegram\"\r\n                  href=\"https://t.me/epnsproject\"\r\n                  target=\"_blank\"\r\n                  bg={theme.leftBarSocialIconBg}\r\n                  radius=\"4px\"\r\n                  padding=\"10px\"\r\n                  margin=\"5px\"\r\n                  onMouseOver={({ target }) => target.style.color = theme.color}\r\n                  onMouseOut={({target})=>target.style.color = \"fff\"}\r\n                >\r\n                  <FaTelegramPlane size={15} color=\"#fff\"/>\r\n                </Anchor>\r\n                <Anchor\r\n                  title=\"Open Medium\"\r\n                  href=\"https://medium.com/ethereum-push-notification-service\"\r\n                  target=\"_blank\"\r\n                  bg={theme.leftBarSocialIconBg}\r\n                  radius=\"4px\"\r\n                  padding=\"10px\"\r\n                  margin=\"5px\"\r\n                  onMouseOver={({ target }) => target.style.color = theme.color}\r\n                  onMouseOut={({target})=>target.style.color = \"fff\"}\r\n                >\r\n                  <FaMedium size={15} color=\"#fff\"/>\r\n                </Anchor>\r\n                <Anchor\r\n                  title=\"Open Discord\"\r\n                  href=\"https://discord.gg/YVPB99F9W5\"\r\n                  target=\"_blank\"\r\n                  bg={theme.leftBarSocialIconBg}\r\n                  radius=\"4px\"\r\n                  padding=\"10px\"\r\n                  margin=\"5px\"\r\n                  onMouseOver={({ target }) => target.style.color = theme.color}\r\n                  onMouseOut={({target})=>target.style.color = \"fff\"}\r\n                >\r\n                  <FaDiscord size={15} color=\"#fff\"/>\r\n                </Anchor>\r\n                <Anchor\r\n                  title=\"Open Github\"\r\n                  href=\"https://github.com/ethereum-push-notification-service\"\r\n                  target=\"_blank\"\r\n                  bg={theme.leftBarSocialIconBg}\r\n                  radius=\"4px\"\r\n                  padding=\"10px\"\r\n                  margin=\"5px\"\r\n                  onMouseOver={({ target }) => target.style.color = theme.color}\r\n                  onMouseOut={({target})=>target.style.color = \"fff\"}\r\n                >\r\n                  <FaGithub size={15} color={\"#fff\"}/>\r\n                </Anchor>\r\n              </ItemH>\r\n            </Footer>\r\n          </>\r\n        }\r\n      </Container>\r\n    );\r\n}\r\n\r\n// CSS Styles\r\nconst Container = styled(Section)`\r\n  background: ${props => props.theme.leftBarBg};\r\n  flex: 1;\r\n  height: calc(100% - ${props => props.headerHeight}px);\r\n  margin: ${props => props.headerHeight}px 0px 0px 0px;\r\n  border-right: 1px solid ${props => props.theme.sectionBorderBg};\r\n`\r\n\r\nconst Primary = styled(Item)`\r\n  flex-direction: column;\r\n  flex-wrap: nowrap;\r\n  align-items: stretch;\r\n  justify-content: flex-start;\r\n  background: '#fff';\r\n  overflow-y: scroll;\r\n  &::-webkit-scrollbar-track {\r\n    border-radius: 10px;\r\n  }\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 6px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    border-radius: 10px;\r\n    background-image: -webkit-gradient(linear,\r\n                       left top,\r\n                       left bottom,\r\n                       color-stop(0.44, #35c5f3),\r\n                       color-stop(0.72, #35b0f3),\r\n                       color-stop(0.86, #35a1f3));\r\n  }\r\n  padding: 0px 0px 20px 0px;\r\n`\r\n\r\nconst InheritedSection = styled(Item)`\r\n  flex: initial;\r\n  align-items: 'center';\r\n`\r\n\r\nconst PrimarySection = styled(InheritedSection)`\r\n  border-bottom: 1px solid ${props => props.theme.sectionBorderBg};\r\n  border-top: 1px solid ${props => props.theme.sectionBorderBg};\r\n  margin-top: -1px;\r\n`\r\n\r\nconst InheritedSectionGroup = styled(Item)`\r\n  align-items: 'stretch';\r\n`\r\n\r\nconst InheritedSectionItem = styled(Item)`\r\n  align-items: 'stretch';\r\n  padding: 0px 0px 0px 20px;\r\n`\r\n\r\nconst SectionInnerGroupContainer = styled(Item)`\r\n    &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: ${props=>props.margintop};\r\n    right: 0;\r\n    left: 0;\r\n    background: ${props => props.theme.leftBarButtonBg};\r\n    height: 10px;\r\n  } \r\n`\r\n\r\nconst SectionInnerItemContainer = styled(Item)`\r\n\r\n`\r\n\r\nconst PrimarySectionGroup = styled(InheritedSectionGroup)`\r\n  transition: margin .1s ease-out;\r\n  ${ props => !props.opened && css`\r\n    margin-top: -100%;\r\n  `};\r\n`\r\n\r\nconst PrimarySectionItem = styled(InheritedSectionItem)`\r\n  \r\n`\r\n\r\nconst Footer = styled(Item)`\r\n  z-index: 3;\r\n`\r\n\r\nconst Secondary = styled(Item)`\r\n  flex: auto;\r\n`\r\n\r\nconst SecondarySection = styled(InheritedSection)`\r\n\r\n`\r\n\r\nconst Social = styled(Item)`\r\n\r\n`\r\n\r\n// Export Default\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { ethers } from \"ethers\";\r\n//import { parseEther, bigNumber } from 'ethers/utils'\r\n\r\nconst COINDESK_CHANNEL_ADDR = \"0xe56f1D3EDFFF1f25855aEF744caFE7991c224FFF\";\r\nconst COINDESK_HASH = \"1+bafkreif643vf3cteadznccivnsk5uj26e3ls7onbshnldb3aej3omrxsau\"\r\nconst ENS_CHANNEL_ADDR = \"0x983110309620D911731Ac0932219af06091b6744\";\r\nconst ENS_HASH = \"1+bafkreiekigkyezwrspignt7l7vsrjefjmogwmigy4eqtts277cu2p23ilm\";\r\n// FeedDB Helper Function\r\nconst EPNSCoreHelper = {\r\n  // To get owner info\r\n  getOwnerInfo: async (contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.governance()\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getOwnerInfo() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getOwnerInfo() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  getVotingPower : async (delegateeAddress, contract, rawFormat = false) => {\r\n    let isAddress = await ethers.utils.isAddress(delegateeAddress)\r\n    if(isAddress || delegateeAddress.endsWith('.eth')){\r\n      try{\r\n        let decimals =  await contract.decimals()\r\n        let votes = await contract.getCurrentVotes(delegateeAddress)\r\n        let votingPower = await Number(votes/Math.pow(10, decimals))\r\n        let prettyVotingPower = votingPower.toString();\r\n        return rawFormat ? votingPower : prettyVotingPower;\r\n      }\r\n      catch(err){\r\n      console.log(\"🚀 ~ file: ViewDelegateeItem.js ~ line 47 ~ getVotingPower ~ err\", err)\r\n      }\r\n    }\r\n    return \"0.000\"\r\n  },\r\n  // To get user info\r\n  getUserInfo: async (user, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.users(user)\r\n        .then(response => {\r\n          const mappings = { ...response };\r\n          mappings.addr = user;\r\n\r\n          if (enableLogs) console.log(\"getUserInfo() --> %o\", mappings);\r\n          resolve(mappings);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getUserInfo() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // To retrieve a channel address from it's id\r\n  getChannelAddressFromID: async (channelID, contract) => {\r\n    return new Promise ((resolve, reject) => {\r\n      // To get channel info from a channel address\r\n      contract.channelById(channelID)\r\n        .then(response => {\r\n          // console.log(\"getChannelAddressFromID() --> %o\", response.toString());\r\n          resolve(response.toString());\r\n        })\r\n        .catch(err => { console.log(\"!!!Error, getChannelAddressFromID() --> %o\", err); reject(err); });\r\n    })\r\n  },\r\n  // To retrieve a channel's Info from channel address\r\n  getChannelInfo: async (channel, contract) => {\r\n    const enableLogs = 0;\r\n    return new Promise ((resolve, reject) => {\r\n      // To get channel info from a channel address\r\n      contract.channels(channel)\r\n        .then(response => {\r\n          // Add an extra field for future info\r\n          const mappings = { ...response };\r\n          mappings.addr = channel;\r\n\r\n          if (enableLogs) console.log(\"getChannelInfo() --> %o\", mappings);\r\n          resolve(mappings);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getChannelInfo() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // To retrieve a channel's AddChannel event\r\n  getChannelEvent: async (channel, startBlock, updateBlock, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n\r\n      // To get channel ipfs hash from channel info\r\n      let filter = contract.filters.AddChannel(channel);\r\n      let block = startBlock;\r\n      if (startBlock != updateBlock) {\r\n        filter = contract.filters.UpdateChannel(channel);\r\n        block = updateBlock;\r\n      }\r\n\r\n      contract.queryFilter(filter, block, block)\r\n        .then(response => {\r\n          let filteredResponse;\r\n\r\n          if (enableLogs) console.log(\"getChannelEvent() --> Finding: %s in | %o |\", channel, response );\r\n\r\n          response.forEach(function (item) {\r\n            if (item.args.channel.toString() == channel.toString()) {\r\n              if (enableLogs) console.log(\"getChannelEvent() --> Selected Channel %o: \", item);\r\n              filteredResponse = ethers.utils.toUtf8String(item.args.identity);\r\n            }\r\n          });\r\n\r\n          if (enableLogs) console.log(\"getChannelEvent() --> Filtered Channel: %o\", filteredResponse);\r\n          resolve(filteredResponse);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getChannelEvent() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // Retrive IPFS File from ipfshash\r\n  getJsonFileFromIdentity: async(identity, channel) => {\r\n    const enableLogs = 0;\r\n\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // Split Channel Identity, delimeter of identity is \"+\"\r\n      if(!identity){\r\n        reject(\"There is no identity file for channel:\",channel);\r\n      }\r\n      const ids = identity?.split(\"+\") || []; // First segment is storage type, second is the pointer to it\r\n\r\n      if (ids[0] == 1) {\r\n        // IPFS HASH\r\n        // Form Gateway URL\r\n        const url = \"https://ipfs.io/ipfs/\" + ids[1];\r\n        fetch(url)\r\n          .then(response => response.json())\r\n          .then(response => {\r\n            if (enableLogs) console.log(\"getJsonFileFromIdentity() --> %o\", response);\r\n            resolve(response);\r\n          })\r\n          .catch(err => {\r\n            console.log(\"!!!Error, getJsonFileFromIdentity() --> %o\", err);\r\n            reject(err);\r\n          });\r\n      }\r\n\r\n    });\r\n  },\r\n  // Helper to get Channel from Channel's address\r\n  getChannelJsonFromChannelAddress: async (channel, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // To get channel info from a channel address\r\n      EPNSCoreHelper.getChannelInfo(channel, contract)\r\n        .then(response => EPNSCoreHelper.getChannelEvent(channel, response.channelStartBlock.toNumber(), response.channelUpdateBlock.toNumber(), contract))\r\n        .then(response => {\r\n          // add little hack for now to change coindesk's descriptioon\r\n          const hash = channel === COINDESK_CHANNEL_ADDR ? COINDESK_HASH  : (channel === ENS_CHANNEL_ADDR ? ENS_HASH : response);\r\n          return EPNSCoreHelper.getJsonFileFromIdentity(hash, channel)\r\n          // return EPNSCoreHelper.getJsonFileFromIdentity(response, channel)\r\n        })\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getChannelJsonFromChannelAddress() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getChannelJsonFromChannelAddress() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  // Helper to get Channel from User's address\r\n  getChannelJsonFromUserAddress: async (user, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // To get channel info from a channel address\r\n      // EPNSCoreHelper.getUserInfo(user, contract)\r\n      //   .then(response => EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract))\r\n        EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract)\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getChannelJsonFromUserAddress() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getChannelJsonFromUserAddress() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  // Get Total Number of Channels\r\n  getTotalNumberOfChannels: async (contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.channelsCount()\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getTotalNumberOfChannels() --> %o\", response.toNumber());\r\n          resolve(response.toNumber());\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getTotalNumberOfChannels() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // Get channels address given number of channels, , atIndex: -1 is start from latest, numChannels: -1 is return all\r\n  getChannelsMetaLatestToOldest: async (atIndex, numChannels, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      EPNSCoreHelper.getTotalNumberOfChannels(contract)\r\n        .then(async (response) => {\r\n          let channelsInfo = [];\r\n          const channelsCount = response;\r\n\r\n          if (atIndex > channelsCount || atIndex == -1) {\r\n            atIndex = channelsCount - 1;\r\n          }\r\n\r\n          if (numChannels == -1) {\r\n            numChannels = channelsCount;\r\n          }\r\n\r\n          // Get channels\r\n          let channelArrays = [];\r\n\r\n          // prefil and then refil\r\n          let count = 0;\r\n          for (let i = numChannels - 1; i >= 0; i--) {\r\n            const assignedChannelID = atIndex - i;\r\n            channelArrays.push(assignedChannelID);\r\n          }\r\n\r\n          const promises = channelArrays.map(async (channelID) => {\r\n            await EPNSCoreHelper.getChannelAddressFromID(channelID, contract)\r\n              .then(response => EPNSCoreHelper.getChannelInfo(response, contract))\r\n              .then(response => {\r\n                if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(%d, %d) --> %o\", channelID, numChannels, channelsInfo);\r\n                channelsInfo = [response, ...channelsInfo];\r\n              })\r\n              .catch(err => console.log(\"Error in channel: %d | skipping...\", channelID))\r\n          });\r\n\r\n          // wait until all promises are resolved\r\n          await Promise.all(promises);\r\n\r\n          if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(Index: %d, Number: %d) --> %o\", atIndex, numChannels, channelsInfo);\r\n          resolve(channelsInfo);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getChannelsMetaLatestToOldest() --> %o\", err);\r\n          reject(err);\r\n        })\r\n    });\r\n  },\r\n  // Get Total Number of Users\r\n  getTotalNumberOfUsers: async (contract) => {\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.usersCount()\r\n        .then(response => {\r\n          console.log(\"getTotalNumberOfUsers() --> %o\", response.toNumber());\r\n          resolve(response.toNumber());\r\n        })\r\n        .catch(err => { console.log(\"!!!Error, getTotalNumberOfUsers() --> %o\", err); reject(err); });\r\n    })\r\n  },\r\n  // To retrieve public key of a user\r\n  getPublicKey: async (address, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // To get channel ipfs hash from channel info\r\n      let filteredResponse;\r\n      contract.queryFilter('PublicKeyRegistered')\r\n        .then(response => {\r\n\r\n          response.forEach(function (item) {\r\n            if (item.args[0] == address) {\r\n              filteredResponse = item;\r\n            }\r\n          });\r\n\r\n          if (enableLogs) console.log(\"Public Key Registry Response: \" + response);\r\n          if (enableLogs) console.log(\"Public Key Registry Filtered: \" + filteredResponse);\r\n\r\n          if (!filteredResponse || filteredResponse.length == 0) {\r\n            resolve(null)\r\n          }\r\n          else {\r\n            resolve(filteredResponse.args[1]);\r\n          }\r\n\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // Get Total Subsbribed Channels\r\n  getSubscribedStatus: async (user, channel, contract) => {\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.isUserSubscribed(channel, user)\r\n        .then(response => {\r\n          // console.log(\"getSubscribedStatus() --> %o\", {response, user, channel});\r\n          resolve(response);\r\n        })\r\n        .catch(err => { console.log(\"!!!Error, getSubscribedStatus() --> %o\", err); reject(err); });\r\n    })\r\n  },\r\n  // Get Total Subsbribed Channels\r\n  getTotalSubscribedChannels: async (user, contract) => {\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.users[user].subscribedCount()\r\n        .then(response => {\r\n          console.log(\"getTotalSubscribedChannels() --> %o\", response.toNumber());\r\n          resolve(response.toNumber());\r\n        })\r\n        .catch(err => { console.log(\"!!!Error, getTotalSubscribedChannels() --> %o\", err); reject(err); });\r\n    })\r\n  },\r\n  // Get Fair Share\r\n  getFairShareOfUserAtBlock: async(user, block, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.users(user)\r\n        .then((response) => {\r\n          if (response.userActivated) {\r\n            contract.calcAllChannelsRatio(user, block)\r\n              .then(response => {\r\n                if (enableLogs) console.log(\"calcAllChannelsRatio() --> %o\", response);\r\n                resolve(response);\r\n              })\r\n              .catch(err => {\r\n                console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\r\n                reject(err);\r\n              });\r\n          }\r\n          else {\r\n            if (enableLogs) console.log(\"!!!Warning, calcAllChannelsRatio() --> User not activated\");\r\n            reject(\"User not activated\");\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // Get Pool Funds\r\n  getPoolFunds: async(contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      contract.poolFunds()\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getPoolFunds() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getPoolFunds() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // Helper Functions\r\n  // To format Big Number\r\n  formatBigNumberToMetric: (bignumber, convertToCurrency) => {\r\n    try {\r\n      if (convertToCurrency) {\r\n        bignumber = bignumber.div(100000000000000);\r\n        bignumber = bignumber.div(10000);\r\n      }\r\n      bignumber = bignumber.toNumber();\r\n      return EPNSCoreHelper.metricFormatter(bignumber, 2);\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n      return \"---\";\r\n    }\r\n  },\r\n  // Metric Formatter, thanks: https://stackoverflow.com/questions/9461621/format-a-number-as-2-5k-if-a-thousand-or-more-otherwise-900\r\n  metricFormatter: (num, digits) => {\r\n    var si = [\r\n      { value: 1, symbol: \"\" },\r\n      { value: 1E3, symbol: \"k\" },\r\n      { value: 1E6, symbol: \"M\" },\r\n      { value: 1E9, symbol: \"G\" },\r\n      { value: 1E12, symbol: \"T\" },\r\n      { value: 1E15, symbol: \"P\" },\r\n      { value: 1E18, symbol: \"E\" }\r\n    ];\r\n    var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\r\n    var i;\r\n    for (i = si.length - 1; i > 0; i--) {\r\n      if (num >= si[i].value) {\r\n        break;\r\n      }\r\n    }\r\n    return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\r\n  },\r\n\r\n}\r\n\r\nexport default EPNSCoreHelper;\r\n","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\nimport { ethers } from \"ethers\";\r\nimport { toast } from 'react-toastify';\r\nimport moment from 'moment';\r\n\r\nfunction NotificationToast({ notification, clearToast }) {\r\n\r\n  // toast customize\r\n  const LoaderToast = ({color }) => (\r\n      <Toaster>\r\n      <div>{notification.notificationTitle}</div>\r\n      <div>{notification.notificationBody}</div>\r\n      </Toaster>\r\n  )\r\n \r\n  // Render\r\n  return (\r\n    <NotificationWrapper>{\r\n    toast.dark(<LoaderToast onClick={clearToast} color=\"#35c5f3\"/>, {\r\n          position: \"bottom-right\",\r\n          autoClose: false,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n    }\r\n    </NotificationWrapper>\r\n  );\r\n}\r\n\r\nconst NotificationWrapper = styled.div`\r\n  display: none;\r\n`;\r\n\r\nconst Toaster = styled.div`\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst Items = styled.div`\r\n  display: block;\r\n  align-self: stretch;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n  background: #fafafa;\r\n`\r\n\r\n\r\n\r\n// Export Default\r\nexport default NotificationToast;\r\n","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport { AnimateOnChange } from 'react-animation';\r\n\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\n\r\n// Create Header\r\nfunction DisplayNotice({ title, theme }) {\r\n  React.useEffect(() => {\r\n\r\n  }, [title, theme]);\r\n\r\n  // to create blockies\r\n\r\n  return (\r\n    <Container>\r\n      <AnimateOnChange\r\n        animationIn=\"fadeIn\"\r\n        animationOut=\"fadeOut\"\r\n        durationOut={200}\r\n      >\r\n        <Notice theme={theme}>{title}</Notice>\r\n      </AnimateOnChange>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n\r\n`\r\n\r\nconst Notice = styled.span`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n\r\n  ${props => props.theme === 'primary' && css`\r\n    background: #e20880;\r\n  `};\r\n\r\n  ${props => props.theme === 'secondary' && css`\r\n    background: #35c5f3;\r\n  `};\r\n\r\n  ${props => props.theme === 'third' && css`\r\n    background: #674c9f;\r\n  `};\r\n`\r\n\r\n// Export Default\r\nexport default DisplayNotice;\r\n","import React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\nimport { MultiSelect } from \"react-multi-select-component\";\r\nimport './SearchFilter.css';\r\nimport styled, {useTheme} from \"styled-components\";\r\nimport {ThemeProvider} from \"styled-components\";\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Loader from \"react-loader-spinner\";\r\nimport { Item } from './SharedStyling';\r\n\r\nexport default function SearchFilter(props)\r\n{\r\n    \r\n    const [search, setSearch] = useState('');\r\n    const [startDate,setStartDate] = useState();\r\n    const [endDate,setEndDate] = useState();\r\n    const themes = useTheme();\r\n\r\n    const applySearch = async () => {\r\n        var channels = [];\r\n        selectedOption.length ? selectedOption.map(each => channels.push(each.value)) : (channels = []);\r\n        await props.filterNotifications(search, channels, startDate,endDate);\r\n    }\r\n    \r\n    var options = [];\r\n    props.notifications.map(each => options.push({label : each.app , value : each.channel }));\r\n    var uniqueOptions = [...new Map(options.map((item) => [item[\"value\"], item])).values()];\r\n    const [showFilter,setShowFilter] = useState(false); \r\n    const [selectedOption, setSelectedOption] = useState(uniqueOptions);\r\n    // console.log(props.notifications);\r\n\r\n    const reset = async () => {\r\n        setStartDate(null);\r\n        setEndDate(null);\r\n        setSearch('');\r\n        setSelectedOption(uniqueOptions);\r\n        props.reset();\r\n    }\r\n\r\n\r\n    return(\r\n     <ThemeProvider theme={themes}>\r\n         <Container>\r\n            <TopBar mbtm={showFilter ? '1rem' : '0px'}>\r\n                <Left>\r\n                {themes.scheme === 'light' ? ( <img style={{height:\"20px\", width:\"20px\", marginTop:\"1rem\", marginLeft:\"2rem\",marginRight:\"1rem\" }} src='/svg/filterIcon.svg' />) : ( <img style={{height:\"20px\", width:\"20px\", marginTop:\"1rem\", marginLeft:\"2rem\",marginRight:\"1rem\" }} src='/svg/filterw.png' />)}\r\n                {!props.loadFilter?\r\n                    <span className=\"showfilter\" onClick={()=> {showFilter ? setShowFilter(false) : setShowFilter(true)}}>\r\n                        <span className=\"filter\" style={{marginTop:\"1rem\", fontWeight:\"400\", color:\"#B4B4B4\"}} >Filter Notifications</span> \r\n                        <span className=\"arrow\">\r\n                            <ToggleArrowImg>\r\n                                <img alt=\"arrow\" className={`${showFilter ? \"down\" : \"up\"}`} src=\"/svg/arrow.svg\"/> \r\n                            </ToggleArrowImg>\r\n                        </span>\r\n                    </span>\r\n                    :\r\n                    <span className=\"showfilter\">\r\n                        <span className=\"filter\" style={{marginTop:\"1rem\", fontWeight:\"400\", color:\"#B4B4B4\"}} >Filter Notifications</span> \r\n                        <Item\r\n                            padding=\"10px 20px\"\r\n                            >\r\n                            <Loader type=\"Oval\" color=\"#35c5f3\" height={20} width={20} />\r\n                        </Item>\r\n                    </span>\r\n                }\r\n                    \r\n                </Left>\r\n                {\r\n                    showFilter ? ( <Buttons>\r\n                    <ButtonFeed bgColor='#e20880' onClick={applySearch}>\r\n                            Apply\r\n                    </ButtonFeed>    \r\n                    <ButtonFeed bgColor='#35c5f3' onClick={reset}>\r\n                        Reset\r\n                    </ButtonFeed> \r\n                </Buttons>) : (<></>)\r\n                }\r\n               \r\n               \r\n            </TopBar>\r\n\r\n            {\r\n                    showFilter ? ( <SearchOptions>\r\n                        <SectionSearch mright='3.5rem'>\r\n                         \r\n                        <SelectChannel>\r\n                            <SMultiSelect\r\n                                options={uniqueOptions}\r\n                                valueRenderer={ () => {\r\n                                    if(selectedOption.length === 0)  return 'Show Notifications from'\r\n                                    return `${selectedOption.length} Selected`\r\n                                }}\r\n                                value={selectedOption}\r\n                                onChange={setSelectedOption}\r\n                                labelledBy=\"Search Notifications from\"\r\n                                placeholder=\"Search Notifications from\"\r\n                            />\r\n        \r\n                        </SelectChannel>\r\n                        <InputWrapper>\r\n                        \r\n                        <input value={search} type=\"text\" className=\"input2\" placeholder=\"Search With Keyword\" style={{\"fontFamily\":\"Source Sans Pro\"}} onChange={(e) => {\r\n                            setSearch(e.target.value);\r\n                        }}/>\r\n                        </InputWrapper> \r\n                        </SectionSearch>\r\n                        <SectionSearch mleft='3.5rem'>\r\n                                <RangeSection mtop=\"0.5rem\">\r\n                                    <TimeLabelDiv>\r\n                                        <div>Start Date</div>\r\n                                    </TimeLabelDiv>\r\n                                    <SDateTimePicker className=\"date\" value={startDate} onChange={setStartDate}/>\r\n                                </RangeSection>\r\n                                <RangeSection mttop=\"1.5rem\">\r\n                                    <TimeLabelDiv>\r\n                                        <div>End Date</div>\r\n                                    </TimeLabelDiv>\r\n                                    <SDateTimePicker className=\"date\" value={endDate} onChange={setEndDate}/>\r\n                                </RangeSection>\r\n                        </SectionSearch>\r\n                    </SearchOptions>) : (<></>)\r\n                }\r\n         </Container>\r\n    </ThemeProvider>\r\n    )\r\n}\r\n\r\n\r\nconst SDateTimePicker = styled(DateTimePicker)`\r\n    padding-right: 4px;\r\n    .react-datetime-picker__inputGroup__input{\r\n        font-weight: 500 !important;\r\n        color : ${props => props.theme.scheme === \"dark\" ? `#fff` :`#000`};\r\n    }\r\n\r\n    .react-datetime-picker__button svg {\r\n        stroke : ${props => props.theme.scheme === \"dark\" ? `#fff` :`#000`};\r\n    }\r\n`\r\n\r\nconst TimeLabelDiv = styled.div`\r\n    flex: 2;\r\n    padding: 0 10px;\r\n    background-color: #35c5f3;\r\n    align-self: stretch;\r\n    text-align: center;\r\n    color: white;\r\n    font-weight: bold;\r\n\r\n\r\n    div{\r\n        margin-top: 10px;\r\n        font-family: Source Sans Pro;\r\n    }\r\n\r\n    @media(max-width: 400px){\r\n        padding: 0 4px;\r\n    }\r\n`\r\n\r\n\r\nconst SMultiSelect = styled(MultiSelect)`\r\n    font-family: Source Sans Pro;\r\n    .search input{\r\n        color : ${props => props.theme.scheme === \"dark\" ? `#fff` :`#000`};\r\n    }\r\n\r\n    /* Aligns the option label with the checkbox */\r\n    .select-item{\r\n        position: relative;\r\n    }\r\n    .select-item span{\r\n        position: absolute;\r\n        margin-top: 7px;\r\n        margin-left: 22px;\r\n    }\r\n\r\n    ${props => props.theme.scheme === \"dark\" && `\r\n        --rmsc-main: #4285f4;\r\n        --rmsc-hover: #0e0c0a;\r\n        --rmsc-selected: #1d1915;\r\n        --rmsc-border: #333333;\r\n        --rmsc-gray: #555555;\r\n        --rmsc-bg: #000000;\r\n        color: #fff;\r\n    `}\r\n`\r\n\r\n\r\nconst SelectChannel = styled.div`\r\nborder: 1px solid ${props => props.theme.faucetBorder};\r\nborder-radius: 5px;\r\nfont-family: Source Sans Pro;\r\n`;\r\n\r\nconst RangeSection = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nborder: 1px solid ${props => props.theme.faucetBorder};\r\n\r\nborder-radius: 5px;\r\njustify-content: space-between;\r\nalign-items: center;\r\nheight: \"40px\";\r\n\r\nposition: relative;\r\nmargin-top:  ${(props) => (props.mttop ? props.mttop : \"\")};\r\n@media(max-width:600px)\r\n{\r\n    margin-top:  ${(props) => (props.mtop ? props.mtop : \"\")};\r\n}\r\n`;\r\n\r\nconst Container = styled.div`\r\nwidth: -webkit-fill-available;\r\ndisplay: flex;\r\nflex-direction: column;\r\n// border:  0.5px solid #674C9F;\r\n// border:${(props) => (props.Border ? props.Border : \"\")}\r\nborder: 1px solid ${props => props.theme.faucetBorder};\r\nborder-radius: 10px;\r\nmargin: 1.3rem;\r\n\r\n@media(max-width: 400px){\r\n    margin-left: 0.5rem;\r\n    margin-right: 0.5rem;\r\n}\r\n`;\r\n\r\n\r\nconst TopBar = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: space-between;\r\nborder-bottom: 1px solid ${props => props.theme.faucetBorder};\r\nborder-top-left-radius: 5px;\r\nborder-top-right-radius: 5px;\r\nmargin-bottom: ${(props) => (props.mbtm ? props.mbtm : \"\")};\r\nfont-family: Source Sans Pro;\r\n`;\r\n\r\nconst Left = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nfont-family: Source Sans Pro;\r\n`;\r\n\r\nconst Buttons = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: space-between;\r\nmargin-right: 2rem;\r\nmargin-top: 0.3rem;\r\nmargin-bottom: 0.5rem;\r\n@media (max-width: 600px)\r\n{\r\n    margin-right: 1.5rem;\r\n    margin-left: 2rem;\r\n    width: 4rem;\r\n    flex-direction: column;\r\n    \r\n}\r\nfont-family: Source Sans Pro;\r\n\r\n`;\r\n\r\nconst ButtonFeed = styled.button`\r\n\r\nheight: 30px;\r\nmargin :3px;\r\ncolor: white;\r\nwidth: 75px;\r\nborder-radius: 5px;\r\nborder: 2px solid white;\r\nbackground-color:  ${(props) => (props.bgColor ? props.bgColor : \"\")};\r\nmargin-right:  ${(props) => (props.mright ? props.mright : \"\")};\r\n&:hover {\r\n  cursor: pointer;\r\n  pointer: hand;\r\n}\r\n@media (max-width: 500px)\r\n{\r\n    margin-right:  ${(props) => (props.mright ? \"1.5rem\" : \"\")};\r\n}\r\nfont-family: Source Sans Pro;\r\n`;\r\n\r\n\r\nconst SearchOptions = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nmargin-left: 2rem;\r\nmargin-right: 2rem;\r\nmargin-bottom: 1rem;\r\njustify-content: space-between;\r\nfont-family: Source Sans Pro;\r\n\r\n@media(max-width: 600px)\r\n{\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-item: center;\r\n    margin-left: 0.5rem;\r\n    margin-right: 0.5rem;\r\n}\r\n`;\r\n\r\nconst SectionSearch = styled.div`\r\ndisply: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\njustify-content: center;\r\nflex: 1;\r\n@media(min-width: 600px)\r\n{\r\n    margin-right:  ${(props) => (props.mright ? props.mright : \"\")};\r\n    margin-left:  ${(props) => (props.mleft ? props.mleft : \"\")};\r\n    margin-top:  ${(props) => (props.mtop ? props.mtop : \"\")};\r\n}\r\n`;\r\n\r\n\r\nconst InputWrapper = styled.div`\r\n    display:flex;\r\n    height: 40px;\r\n\r\n    border: 1px solid ${props => props.theme.faucetBorder};\r\n    border-radius: 5px;\r\n    margin-top: 1.5rem;\r\n    padding: 1px;\r\n    @media(max-width:600px)\r\n    {\r\n        margin-bottom: 1rem;\r\n    }\r\n`;\r\n\r\n\r\nconst ToggleArrowImg = styled.div`\r\n\r\n    .down {\r\n        transform: rotate(-180deg);\r\n        transition: transform .25s;\r\n    }\r\n\r\n    .up{\r\n        transform: rotate(-360deg);\r\n        transition: transform .25s;\r\n    }\r\n`\r\n","/**\r\n * This file helps us maintain the notifications fetched in state, so when tabs are switched we can retain the notification information\r\n */\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    page: 1, //the current page\r\n    notifications: [],// the actual notifications\r\n    finishedFetching: false,\r\n    toggler: false\r\n}\r\n\r\nexport const contractSlice = createSlice({\r\n    name: \"notifications\",\r\n    initialState,\r\n    reducers: {\r\n        toggleToggler: (state) => {\r\n            state.toggler = !state.toggler;\r\n        },\r\n        resetState: (state) => {\r\n            state.page = initialState.page;\r\n            state.notifications = initialState.notifications;\r\n            state.finishedFetching = initialState.finishedFetching;\r\n        },\r\n        addPaginatedNotifications: (state, action) => {\r\n            state.notifications = [ ...state.notifications, ...action.payload ];\r\n            state.page += 1;\r\n        },\r\n        incrementPage: (state) => {\r\n            state.page += 1;\r\n        },\r\n        addNewNotification: (state, action) => {\r\n            state.notifications = [{...action.payload}, ...state.notifications]\r\n        },\r\n        setFinishedFetching: (state) => {\r\n            state.finishedFetching = true;\r\n        },\r\n        updateTopNotifications: (state, action) => {\r\n            console.log({pp: action.payload});\r\n            state.notifications = [...action.payload.notifs, ...state.notifications.slice(action.payload.pageSize)];\r\n            console.log({sn: state.notifications});\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    toggleToggler,\r\n    addPaginatedNotifications,\r\n    incrementPage,\r\n    addNewNotification,\r\n    setFinishedFetching,\r\n    resetState,\r\n    updateTopNotifications\r\n} = contractSlice.actions;\r\n\r\nexport default contractSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport styled, {useTheme} from \"styled-components\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { envConfig } from \"@project/contracts\";\r\nimport DisplayNotice from \"components/DisplayNotice\";\r\nimport { postReq } from \"api\";\r\nimport SearchFilter from '../components/SearchFilter';\r\nimport {ThemeProvider} from \"styled-components\";\r\nimport {\r\n  api,\r\n  utils,\r\n  NotificationItem,\r\n} from \"@epnsproject/frontend-sdk-staging\";\r\nimport {\r\n  addPaginatedNotifications,\r\n  incrementPage,\r\n  setFinishedFetching,\r\n  updateTopNotifications,\r\n} from \"redux/slices/notificationSlice\";\r\n\r\n\r\nimport {\r\n  addNewWelcomeNotif\r\n} from \"redux/slices/userJourneySlice\";\r\n\r\nimport {Section, Item, ItemH, Span, Anchor, RouterLink, Image} from 'components/SharedStyling';\r\n\r\nconst NOTIFICATIONS_PER_PAGE = 10;\r\n\r\n// Create Header\r\nfunction Feedbox() {\r\n  const dispatch = useDispatch();\r\n  const { account } = useWeb3React();\r\n  const { epnsCommReadProvider } = useSelector((state: any) => state.contracts);\r\n  const { notifications, page, finishedFetching, toggle } = useSelector(\r\n    (state: any) => state.notifications\r\n  );\r\n\r\n  const themes = useTheme();\r\n\r\n\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  const { run, welcomeNotifs } = useSelector((state: any) => state.userJourney);\r\n\r\n\r\n  const [limit , setLimit] = React.useState(10);\r\n  const [allNotf , setNotif] = React.useState([]);\r\n  const [filteredNotifications , setFilteredNotifications] = React.useState([]);\r\n  const [filter , setFilter] = React.useState(false);\r\n  const [loadFilter , setLoadFilter] = React.useState(false);\r\n  const [bgUpdateLoading, setBgUpdateLoading] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [currentTab, setCurrentTab] = React.useState(\"inbox\");\r\n  \r\n    const reset = ()=>setFilter(false);\r\n    const filterNotifications = async (query , channels , startDate , endDate) => {\r\n        if(startDate == null)startDate = new Date('January 1, 2000');\r\n        if(endDate == null)endDate = new Date('January 1, 3000');\r\n        startDate = startDate.getTime()/1000;\r\n        endDate = endDate.getTime()/1000;\r\n\r\n        if(loading)return;\r\n        setBgUpdateLoading(true);\r\n        setLoading(true);\r\n        setFilter(true);\r\n        var Filter = {\r\n            channels : channels , \r\n            date : {lowDate : startDate , highDate : endDate}\r\n        };\r\n        if(channels.length == 0)delete Filter.channels;\r\n\r\n        \r\n        setFilteredNotifications([]);\r\n        // if(notifications.length >= NOTIFICATIONS_PER_PAGE){\r\n        //     try {\r\n        //         const {count , results} = await postReq(\"/feeds/search\", {\r\n        //             subscriber : account,\r\n        //             searchTerm: query,\r\n        //             filter: Filter,\r\n        //             isSpam: 0,\r\n        //             page: 1,\r\n        //             pageSize: 5,\r\n        //             op: \"read\"\r\n        //         });\r\n        //         const parsedResponse = utils.parseApiResponse(results);\r\n        //         setFilteredNotifications([parsedResponse]);\r\n        //     }\r\n        //     catch (err) {\r\n        //         console.log(err);\r\n        //     }\r\n        // }\r\n        // else{\r\n          try{\r\n            let filterNotif = [];\r\n            for(const notif of allNotf){\r\n              let timestamp;\r\n              const matches = notif.message.match(/\\[timestamp:(.*?)\\]/);\r\n              if(matches){\r\n                timestamp = matches[1];\r\n              }\r\n              else timestamp = notif.epoch;\r\n                if(\r\n                    ( (Filter.channels === undefined ?  true : (Filter.channels.includes(notif.channel)))&&\r\n                timestamp >= startDate && timestamp <= endDate\r\n                && (query === \"\" || notif.message.toLowerCase().includes(query.toLowerCase())) )\r\n                )\r\n                filterNotif.push(notif);\r\n\r\n                \r\n\r\n            }\r\n            await setFilteredNotifications(filterNotif);\r\n          }catch(err){\r\n            console.log(err);\r\n          } finally {\r\n            setLoading(false);\r\n            setBgUpdateLoading(false);\r\n          }\r\n            \r\n        // }\r\n        \r\n    }\r\n  const loadNotifications = async () => {\r\n    if (loading || finishedFetching) return;\r\n    setLoading(true);\r\n    try {\r\n      const { count, results } = await api.fetchNotifications(\r\n        account,\r\n        NOTIFICATIONS_PER_PAGE,\r\n        page,\r\n        envConfig.apiUrl\r\n      );\r\n      const parsedResponse = utils.parseApiResponse(results);\r\n      dispatch(addPaginatedNotifications(parsedResponse));\r\n      if (count === 0) {\r\n        dispatch(setFinishedFetching());\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n    const fetchLatestNotifications = async () => {\r\n        if (loading || bgUpdateLoading) return;\r\n        setBgUpdateLoading(true);\r\n        setLoading(true);\r\n        try {\r\n            const { count, results } = await api.fetchNotifications(\r\n                account,\r\n                NOTIFICATIONS_PER_PAGE,\r\n                1,\r\n                envConfig.apiUrl\r\n            );\r\n            if (!notifications.length) {\r\n                dispatch(incrementPage());\r\n            }\r\n            const parsedResponse = utils.parseApiResponse(results);\r\n            const map1 = new Map();\r\n            const map2 = new Map();\r\n            results.forEach( each => {\r\n                map1.set(each.payload.data.sid , each.epoch);\r\n                map2.set(each.payload.data.sid , each.channel);\r\n            })\r\n            parsedResponse.forEach( each => {\r\n                each.date = map1.get(each.sid);\r\n                each.epoch = (new Date(each.date).getTime() / 1000);\r\n                each.channel = map2.get(each.sid);\r\n            })\r\n            dispatch(\r\n                updateTopNotifications({\r\n                    notifs: parsedResponse,\r\n                    pageSize: NOTIFICATIONS_PER_PAGE,\r\n                })\r\n            );\r\n            if (count === 0) {\r\n                dispatch(setFinishedFetching());\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        } finally {\r\n            setBgUpdateLoading(false);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchAllNotif = async () => {\r\n      setLoadFilter(true);\r\n      try {\r\n          const { count, results } = await api.fetchNotifications(\r\n              account,\r\n              100000,\r\n              1,\r\n              envConfig.apiUrl\r\n          );\r\n          if (!notifications.length) {\r\n              dispatch(incrementPage());\r\n          }\r\n          const parsedResponse = utils.parseApiResponse(results);\r\n          const map1 = new Map();\r\n          const map2 = new Map();\r\n          results.forEach( each => {\r\n              map1.set(each.payload.data.sid , each.epoch);\r\n              map2.set(each.payload.data.sid , each.channel);\r\n          })\r\n          parsedResponse.forEach( each => {\r\n              each.date = map1.get(each.sid);\r\n              each.epoch = (new Date(each.date).getTime() / 1000);\r\n              each.channel = map2.get(each.sid);\r\n          })\r\n          setNotif(parsedResponse);\r\n      } catch (err) {\r\n          console.log(err);\r\n      } finally {\r\n        setLoadFilter(false);\r\n      }\r\n  };\r\n\r\n    // React.useEffect(() => {\r\n    //     if (account && currentTab === \"inbox\") {\r\n    //         fetchLatestNotifications();\r\n    //     }\r\n    // }, [account, currentTab]);\r\n\r\n    React.useEffect(() => {\r\n        fetchLatestNotifications();\r\n        fetchAllNotif();\r\n    }, [toggle]);\r\n\r\n    //function to query more notifications\r\n    const handlePagination = async () => {\r\n      if(filter){\r\n        setLimit(limit+10);\r\n      }\r\n      else{\r\n        loadNotifications();\r\n        dispatch(incrementPage());\r\n      }\r\n        \r\n    };\r\n\r\n    const showWayPoint = (index: any) => {\r\n      if(!filter){\r\n          return (\r\n            Number(index) === notifications.length - 1 &&\r\n            !finishedFetching &&\r\n            !bgUpdateLoading\r\n        );\r\n      }\r\n      else{\r\n        return (\r\n          Number(index) === limit - 1\r\n      );\r\n      }\r\n        \r\n    };\r\n    const [clicked, setClicked] = React.useState(false);\r\n\r\n  // Render\r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n    <Container>\r\n    <SearchFilter notifications={allNotf} filterNotifications={filterNotifications} filter={filter} reset={reset} loadFilter={loadFilter}/>\r\n      {notifications && (\r\n        <Notifs id=\"scrollstyle-secondary\">\r\n\r\n          {bgUpdateLoading && (\r\n            <Item\r\n              padding=\"10px 20px\"\r\n            >\r\n              <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\r\n            </Item>\r\n          )}\r\n          { run && welcomeNotifs.map((oneNotification, index) => {\r\n              const {\r\n                cta,\r\n                title,\r\n                message,\r\n                app,\r\n                icon,\r\n                image,\r\n              } = oneNotification;\r\n\r\n\r\n              // render the notification item\r\n              return (\r\n                <div key={`${message}+${title}`}>\r\n                  <NotificationItem\r\n                    notificationTitle={title}\r\n                    notificationBody={message}\r\n                    cta={cta}\r\n                    app={app}\r\n                    icon={icon}\r\n                    image={image}\r\n                    theme={themes.scheme}\r\n                  />\r\n                </div>\r\n              );\r\n            })\r\n          }\r\n\r\n            {(filter? filteredNotifications.slice(0,limit) : notifications).map((oneNotification, index) => {\r\n            const {\r\n              cta,\r\n              title,\r\n              message,\r\n              app,\r\n              icon,\r\n              image,\r\n            } = oneNotification;\r\n            if(run) return;\r\n            // render the notification item\r\n            return (\r\n              <div key={index}>\r\n                {showWayPoint(index) && (\r\n                  <Waypoint onEnter={() => handlePagination()} />\r\n                )}\r\n                <NotificationItem\r\n                  notificationTitle={title}\r\n                  notificationBody={message}\r\n                  cta={cta}\r\n                  app={app}\r\n                  icon={icon}\r\n                  image={image}\r\n                  theme={themes.scheme}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          {loading && !bgUpdateLoading && (\r\n            <Item\r\n              padding=\"10px 20px\"\r\n            >\r\n              <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\r\n            </Item>\r\n          )}\r\n        </Notifs>\r\n      )}\r\n      {((!run && !notifications.length) || (!run && filter && !filteredNotifications.length) || (run && !welcomeNotifs.length)) && !loading && (\r\n        <Item>\r\n          <DisplayNotice\r\n            title=\"You currently have no notifications, try subscribing to some channels.\"\r\n            theme=\"third\"\r\n          />\r\n        </Item>\r\n      )}\r\n    </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  background: ${props => props.theme.mainBg};\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: stretch;\r\n  justify-content: center;\r\n  height: inherit;\r\n`;\r\n\r\nconst Notifs = styled.div`\r\n  align-self: stretch;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n  \r\n  flex: 1;\r\n\r\n  \"-webkit-scrollbar-track\": {\r\n    background-color: #EEE;\r\n    border-radius: 10px;\r\n  }\r\n`;\r\n\r\n// Export Default\r\nexport default Feedbox;","import axios from \"axios\";\r\nimport { envConfig } from \"@project/contracts\";\r\n\r\n\r\n// const BASE_URL = \"https://backend-staging.epns.io/apis\";\r\nconst BASE_URL = envConfig.apiUrl// \"https://backend-kovan.epns.io/apis\";\r\n// const BASE_URL = \"http://localhost:4000/apis\"; //for local push node\r\n\r\n/**\r\n * A function used to make get requests throughout the entire application\r\n * @param {String} path e.g /feeds/get_feeds, this represents the route of the enpoint to call\r\n * @returns {Promise}\r\n */\r\nexport const getReq = async (path) => {\r\n    try {\r\n      const response = await axios.get(BASE_URL + path);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n/**\r\n * A function used to make post requests to the backend\r\n * @param {String} path e.g /feeds/get_feeds, this represents the route of the enpoint to call\r\n * @param {Object} obj\r\n * @returns {Promise}\r\n */\r\nexport const postReq = async (path, obj) => {\r\n  try {\r\n    const response = await axios.post(BASE_URL + path, obj, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n","import EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { postReq } from \"api\";\r\n\r\n// STATIC SINGLETON\r\nexport const ChannelEvents = {\r\n  ADD_CHANNEL_ANY: \"AddChannelAny\",\r\n  ADD_CHANNEL_SELF: \"AddChannelSelf\",\r\n  UPDATE_CHANNEL_ANY: \"UpdateChannelAny\",\r\n  UPDATE_CHANNEL_SELF: \"UpdateChannelSelf\",\r\n  SUBSCRIBER_ANY_CHANNEL: \"SubscriberAnyChannel\",\r\n  SUBSCRIBER_SELF_CHANNEL: \"SubscriberSelfChannel\",\r\n  UNSUBSCRIBER_ANY_CHANNEL: \"UnsubscriberAnyChannel\",\r\n  UNSUBSCRIBER_SELF_CHANNEL: \"UnsubscriberSelfChannel\",\r\n};\r\n\r\nexport default class ChannelsDataStore {\r\n  static instance = ChannelsDataStore.instance || new ChannelsDataStore();\r\n\r\n  state = {\r\n    channelsCount: -1,\r\n    channelsMeta: {},\r\n    channelsJson: {},\r\n    subscribers: {},\r\n\r\n    callbacks: [],\r\n\r\n    account: null,\r\n    epnsReadProvider: null,\r\n    epnsCommReadProvider: null,\r\n  };\r\n\r\n  // init\r\n  init = (account, epnsReadProvider, epnsCommReadProvider) => {\r\n    // set account\r\n    this.state.account = account;\r\n\r\n    // First attach listeners then overwrite the old one if any\r\n    this.resetChannelsListeners();\r\n    this.state.epnsReadProvider = epnsReadProvider;\r\n    this.state.epnsCommReadProvider = epnsCommReadProvider;\r\n    this.initChannelsListenersAsync();\r\n\r\n    // next get store channels count\r\n    this.getChannelsCountAsync();\r\n  };\r\n\r\n  // RESET LISTENERS\r\n  resetChannelsListeners = () => {\r\n    // only proceed if a read provider is attached\r\n    if (this.state.epnsReadProvider) {\r\n      this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\r\n      this.state.epnsReadProvider.removeAllListeners(\"UpdateChannel\");\r\n      this.state.epnsCommReadProvider.removeAllListeners(\"Subscribe\");\r\n      this.state.epnsCommReadProvider.removeAllListeners(\"Unsubscribe\");\r\n    }\r\n  };\r\n\r\n  // init LISTENERS\r\n  initChannelsListenersAsync = async () => {\r\n    // Add Listeners\r\n    await this.listenForAddChannelAnyAsync();\r\n    await this.listenForAddChannelSelfAsync();\r\n\r\n    await this.listenForUpdateChannelAnyAsync();\r\n    await this.listenForUpdateChannelSelfAsync();\r\n\r\n    // use the communicator contract for the below\r\n    await this.listenForSubscribeAnyAsync();\r\n    await this.listenForSubscribeSelfAsync();\r\n    await this.listenForUnsubscribeAnyAsync();\r\n    await this.listenForUnsubscribeSelfAsync();\r\n  };\r\n\r\n  // 1. Add Any Channel Listeners\r\n  listenForAddChannelAnyAsync = async () => {\r\n    const contract = this.state.epnsReadProvider;\r\n    let filter = contract.filters.AddChannel(null, null);\r\n\r\n    contract.on(filter, async (channel, ipfs) => {\r\n      // Do own stuff\r\n      await this.incrementChannelsCountAsync(1);\r\n\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, ipfs);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // 2. Add Self Channel Listener\r\n  listenForAddChannelSelfAsync = async () => {\r\n    const contract = this.state.epnsReadProvider;\r\n    let filter = contract.filters.AddChannel(this.state.account, null);\r\n\r\n    contract.on(filter, async (channel, ipfs) => {\r\n      // Do own stuff\r\n      // Nothing to do, just do callback\r\n\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, ipfs);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // 3. Update Any Channel Listener\r\n  listenForUpdateChannelAnyAsync = async () => {\r\n    const contract = this.state.epnsReadProvider;\r\n    let filter = contract.filters.UpdateChannel(null, null);\r\n\r\n    contract.on(filter, async (channel, ipfs) => {\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, ipfs);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // 4. Update Self Channel Listener\r\n  listenForUpdateChannelSelfAsync = async () => {\r\n    const contract = this.state.epnsReadProvider;\r\n    let filter = contract.filters.UpdateChannel(this.state.account, null);\r\n\r\n    contract.on(filter, async (channel, ipfs) => {\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, ipfs);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // 5. Subscriber Any\r\n  listenForSubscribeAnyAsync = async () => {\r\n    const contract = this.state.epnsCommReadProvider;\r\n    let filter = contract.filters.Subscribe(null, null);\r\n\r\n    contract.on(filter, async (channel, user) => {\r\n      //   // Do own stuff\r\n      //   if (this.state.channelsMeta[channel]) {\r\n      //     const channelID = this.state.channelsMeta[channel];\r\n      //     let count = this.state.channelsMeta[channelID].memberCount.toNumber();\r\n      //     count = count + 1;\r\n      //     this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\r\n      //   }\r\n\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, user);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // 6. Subscriber Self\r\n  listenForSubscribeSelfAsync = async () => {\r\n    const contract = this.state.epnsCommReadProvider;\r\n    let filter = contract.filters.Subscribe(this.state.account, null);\r\n\r\n    contract.on(filter, async (channel, user) => {\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, user);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // 7. Unsubscribe Any\r\n  listenForUnsubscribeAnyAsync = async () => {\r\n    const contract = this.state.epnsCommReadProvider;\r\n    let filter = contract.filters.Unsubscribe(null, null);\r\n\r\n    contract.on(filter, async (channel, user) => {\r\n      // Do own stuff\r\n      // if (this.state.channelsMeta[channel]) {\r\n      //   const channelID = this.state.channelsMeta[channel];\r\n      //   let count = this.state.channelsMeta[channelID].memberCount.toNumber();\r\n      //   count = count - 1;\r\n      //   this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\r\n      // }\r\n\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, user);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // 8. Unsubscribe Self\r\n  listenForUnsubscribeSelfAsync = async () => {\r\n    const contract = this.state.epnsCommReadProvider;\r\n    let filter = contract.filters.Unsubscribe(this.state.account, null);\r\n\r\n    contract.on(filter, async (channel, user) => {\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, user);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // FOR CALLBACKS\r\n  addCallbacks = (callbackType, callbackID, callback) => {\r\n    // first check if callback already exists\r\n    if (!this.state.callbacks[callbackType]) {\r\n      this.state.callbacks[callbackType] = {};\r\n    }\r\n\r\n    if (!this.state.callbacks[callbackType][callbackID]) {\r\n      this.state.callbacks[callbackType][callbackID] = callback;\r\n    }\r\n  };\r\n\r\n  removeCallbacks = (callbackType, callbackID) => {\r\n    // first check if callback already exists\r\n    if (this.state.callbacks[callbackType][callbackID]) {\r\n      this.state.callbacks[callbackType][callbackID] = null;\r\n    }\r\n  };\r\n\r\n  // CHANNELS COUNT\r\n  getChannelsCountAsync = async () => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n      if (this.state.channelsCount == -1) {\r\n        // Count not set, get and set it first\r\n        const count = EPNSCoreHelper.getTotalNumberOfChannels(\r\n          this.state.epnsReadProvider\r\n        )\r\n          .then((response) => {\r\n            this.state.channelsCount = response;\r\n\r\n            if (enableLogs)\r\n              console.log(\"getChannelsCountAsync() --> %o\", response);\r\n            resolve(this.state.channelsCount);\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"!!!Error, getChannelsCountAsync() --> %o\", err);\r\n            reject(err);\r\n          });\r\n      } else {\r\n        resolve(this.state.channelsCount);\r\n      }\r\n    });\r\n  };\r\n\r\n  incrementChannelsCountAsync = async (incrementCount) => {\r\n    return new Promise((resolve, reject) => {\r\n      this.getChannelsCountAsync()\r\n        .then((response) => {\r\n          this.state.channelsCount = response + incrementCount;\r\n          console.log(\r\n            \"incrementChannelsCountAsync() --> %d\",\r\n            this.state.channelsCount\r\n          );\r\n          resolve(this.state.channelsCount);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"!!!Error, incrementChannelsCountAsync() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  };\r\n  /**\r\n   * Get paginated channel information\r\n   * @param {Number} startIndex the number of channels viewed so far e.g 50\r\n   * @param {Number} pageCount the number of items per page we want\r\n   * @returns\r\n   */\r\n  getChannelFromApi = async (startIndex, pageCount) => {\r\n    return postReq(\"/channels/fetch_channels\", {\r\n      page: Math.ceil(startIndex / pageCount) || 1,\r\n      pageSize: pageCount,\r\n      op: \"write\",\r\n    }).then((response) => {\r\n      const output = response.data.results.map(({channel}) => ({addr: channel}));\r\n      return output;\r\n    });\r\n  };\r\n  // CHANNELS META FUNCTIONS\r\n  // To get channels meta\r\n  // get channels meta in a paginated format\r\n  // by passing in the starting index and the number of items per page\r\n  getChannelsMetaAsync = async (startIndex, pageCount) => {\r\n    this.getChannelFromApi(startIndex, pageCount)\r\n    return new Promise(async (resolve, reject) => {\r\n      // get total number of channels\r\n      const channelsCount = await this.getChannelsCountAsync();\r\n      let stopIndex = startIndex + pageCount;\r\n\r\n      // if the stop index is -1 then get all channels\r\n      if (stopIndex == -1 || stopIndex > channelsCount) {\r\n        stopIndex = channelsCount;\r\n      }\r\n\r\n      // initialise an array with the values from 0 to the length of the number of channels\r\n      let channelIDs = [];\r\n\r\n      for (let i = startIndex; i < stopIndex; i++) {\r\n        channelIDs.push(i);\r\n      }\r\n      console.log({ channelIDs });\r\n\r\n      const promises = channelIDs.map(async (channelID) => {\r\n        // Match the cache\r\n        return this.getChannelMetaAsync(channelID)\r\n          .then((response) => response)\r\n          .catch((err) =>\r\n            console.log(\r\n              \"!!!Error (but skipping), getChannelMetaAsync() --> %o\",\r\n              err\r\n            )\r\n          );\r\n      });\r\n\r\n      // wait until all promises are resolved\r\n      const channelMetaData = await Promise.all(promises);\r\n\r\n      // return channels meta\r\n      // console.log(\"getChannelsMetaAsync(From %d to %d) --> %o\", startIndex, stopIndex, channelMetaData);\r\n      resolve(channelMetaData);\r\n    });\r\n  };\r\n\r\n  // To get a single channel meta via id\r\n  getChannelMetaAsync = async (channelID) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (this.state.channelsMeta[channelID]) {\r\n        console.log(\r\n          \"getChannelMetaAsync() [CACHED] --> %o\",\r\n          this.state.channelsMeta[channelID]\r\n        );\r\n        resolve(this.state.channelsMeta[channelID]);\r\n      } else {\r\n        let channelAddress;\r\n\r\n        await EPNSCoreHelper.getChannelAddressFromID(\r\n          channelID,\r\n          this.state.epnsReadProvider\r\n        )\r\n          .then(async (response) => {\r\n            channelAddress = response;\r\n            await this.getChannelMetaViaAddressAsync(channelAddress).then(\r\n              (response) => {\r\n                // update the channel cache before resolving\r\n                this.state.channelsMeta[channelID] = response;\r\n                this.state.channelsMeta[channelAddress] = channelID;\r\n\r\n                // resolve\r\n                // console.log(\"getChannelMetaAsync() [Address: %s] --> %o\", channelAddress, response);\r\n                resolve(response);\r\n              }\r\n            );\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"!!!Error, getChannelMetaAsync() --> %o\", err);\r\n            reject(err);\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  // To get a single channel meta via address\r\n  getChannelMetaViaAddressAsync = async (channelAddress) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (this.state.channelsMeta[channelAddress]) {\r\n        const channelID = this.state.channelsMeta[channelAddress];\r\n\r\n        console.log(\r\n          \"getChannelMetaViaAddressAsync() [CACHED] --> %o\",\r\n          this.state.channelsMeta[channelID]\r\n        );\r\n        resolve(this.state.channelsMeta[channelID]);\r\n      } else {\r\n        // Can't cache this :(, no way to know channel id\r\n        await EPNSCoreHelper.getChannelInfo(\r\n          channelAddress,\r\n          this.state.epnsReadProvider\r\n        )\r\n          .then((response) => {\r\n            // resolve\r\n            // console.log(\"getChannelMetaViaAddressAsync() [Address: %s] --> %o\", channelAddress, response);\r\n            resolve(response);\r\n          })\r\n          .catch((err) => {\r\n            console.log(\r\n              \"!!!Error, getChannelMetaViaAddressAsync() --> %o\",\r\n              err\r\n            );\r\n            reject(err);\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  getChannelSubscribers = async (channelAddress) => {\r\n    const cachedSubscribers = this.state.subscribers[channelAddress];\r\n    if (cachedSubscribers) {\r\n      return cachedSubscribers;\r\n    }\r\n    return postReq(\"/channels/get_subscribers\", {\r\n      channel: channelAddress,\r\n      op: \"read\",\r\n    })\r\n      .then(({ data }) => {\r\n        const subs = data.subscribers;\r\n        this.state.subscribers[channelAddress] = subs;\r\n        return subs;\r\n      })\r\n      .catch((err) => {\r\n        console.log(`getChannelSubscribers => ${err.message}`);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  // CHANNELS INFO FUNCTIONS\r\n  // To get a single channel meta via id\r\n  getChannelJsonAsync = async (channelAddress) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (this.state.channelsJson[channelAddress]) {\r\n        // console.log(\"getChannelJsonAsync() [CACHED] --> %o\", this.state.channelsJson[channelAddress]);\r\n        resolve(this.state.channelsJson[channelAddress]);\r\n      } else {\r\n        await EPNSCoreHelper.getChannelJsonFromChannelAddress(\r\n          channelAddress,\r\n          this.state.epnsReadProvider\r\n        )\r\n          .then((response) => {\r\n            // First set the cache\r\n            this.state.channelsJson[channelAddress] = response;\r\n\r\n            // resolve\r\n            // console.log(\"getChannelJsonAsync() [Address: %s] --> %o\", channelAddress, response);\r\n            resolve(response);\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"!!!Error, getChannelJsonAsync() --> %o\", err);\r\n            reject(err);\r\n          });\r\n      }\r\n    });\r\n  };\r\n}\r\n","import EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\nimport { ethers } from \"ethers\";\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\n\r\n// STATIC SINGLETON\r\nexport const UserEvents = {\r\n    SUBSCRIBED: \"Subscribed\",\r\n    UNSUBSCRIBED: \"Unsubscribed\",\r\n    PUBLIC_KEY_BROADCASTED: \"PublicKeyBroadcasted\",\r\n    CREATED_CHANNEL: \"CreatedChannel\",\r\n    DEACTIVATE_CHANNEL: \"DeactivateChannel\",\r\n}\r\n\r\nexport default class UsersDataStore {\r\n    static instance = UsersDataStore.instance || new UsersDataStore();\r\n\r\n    state = {\r\n      usersCount: -1,\r\n      userMeta: null,\r\n      ownerMeta: null,\r\n\r\n      callbacks: [],\r\n\r\n      account: null,\r\n      epnsReadProvider: null,\r\n      epnsCommReadProvider: null\r\n    }\r\n\r\n    // init\r\n    init = (account, epnsReadProvider, epnsCommReadProvider) => {\r\n      // set account\r\n      this.state.account = account;\r\n\r\n      // First attach listeners then overwrite the old one if any\r\n      this.resetUsersListeners();\r\n      this.state.epnsReadProvider = epnsReadProvider;\r\n      this.state.epnsCommReadProvider = epnsCommReadProvider;\r\n      this.initUsersListenersAsync();\r\n\r\n      // next get store user count & user meta\r\n      this.getOwnerMetaAsync();\r\n      this.getUsersCountAsync();\r\n      this.getUserMetaAsync();\r\n    }\r\n\r\n    // RESET LISTENERS\r\n    resetUsersListeners = () => {\r\n      // only proceed if a read provider is attached\r\n      if (this.state.epnsReadProvider) {\r\n        this.state.epnsCommReadProvider.removeAllListeners(\"Subscribe\");\r\n        this.state.epnsCommReadProvider.removeAllListeners(\"Unsubscribe\");\r\n        this.state.epnsCommReadProvider.removeAllListeners(\"PublicKeyRegistered\");\r\n        this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\r\n        this.state.epnsReadProvider.removeAllListeners(\"DeactivateChannel\");\r\n      }\r\n\r\n      // reset user meta as well\r\n      this.state.userMeta = null;\r\n    }\r\n\r\n    // init LISTENERS\r\n    initUsersListenersAsync = async () => {\r\n      // Add Listeners\r\n      await this.listenForSubscribedAsync();\r\n      await this.listenForUnsubscribedAsync();\r\n\r\n      if (!this.state.userMeta || (this.state.userMeta && !this.state.userMeta.publicKeyRegistered)) {\r\n        await this.listenForPublicKeyBroadcastAsync();\r\n      }\r\n    }\r\n\r\n    // 1. Listen for Subscribe Async\r\n    listenForSubscribedAsync = async () => {\r\n      // TODO use the right contract comms\r\n      // const contract = this.state.epnsReadProvider;\r\n      // let filter = contract.filters.Subscribe(null, this.state.account);\r\n\r\n      // if (this.state.userMeta) {\r\n      //   this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.add(1);\r\n      // }\r\n\r\n      // contract.on(filter, async (channel, user) => {\r\n      //   // then perform callbacks\r\n      //   if (this.state.callbacks[UserEvents.SUBSCRIBED]) {\r\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.SUBSCRIBED])) {\r\n      //       if (callback) { callback(channel, user); }\r\n      //     }\r\n      //   }\r\n      // });\r\n    }\r\n\r\n    // 2. Listen for Unsubscribe Async\r\n    listenForUnsubscribedAsync = async () => {\r\n      // TODO Use the COMMUNICATOR CONTRACT\r\n      // const contract = this.state.epnsReadProvider;\r\n      // let filter = contract.filters.Unsubscribe(null, this.state.account);\r\n\r\n      // if (this.state.userMeta) {\r\n      //   this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.sub(1);\r\n      // }\r\n\r\n      // contract.on(filter, async (channel, user) => {\r\n      //   // then perform callbacks\r\n      //   if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\r\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\r\n      //       if (callback) { callback(channel, user); }\r\n      //     }\r\n      //   }\r\n      // });\r\n    }\r\n\r\n    // 3. Listen For Public Key Broadcast\r\n    listenForPublicKeyBroadcastAsync = async () => {\r\n        // TODO Use the COMMUNICATOR CONTRACT\r\n      // const contract = this.state.epnsReadProvider;\r\n      // let filter = contract.filters.PublicKeyRegistered(this.state.account, null);\r\n\r\n      // if (this.state.userMeta) {\r\n      //   this.state.userMeta.publicKeyRegistered = true;\r\n      // }\r\n\r\n      // contract.once(filter, async (channel, user) => {\r\n      //   // then perform callbacks\r\n      //   if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\r\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\r\n      //       if (callback) { callback(channel, user); }\r\n      //     }\r\n      //   }\r\n      // });\r\n    }\r\n\r\n    // FOR CALLBACKS\r\n    addCallbacks = (callbackType, callbackID, callback) => {\r\n      // first check if callback already exists\r\n      if (!this.state.callbacks[callbackType]) {\r\n        this.state.callbacks[callbackType] = {};\r\n      }\r\n\r\n      if (!this.state.callbacks[callbackType][callbackID]) {\r\n        this.state.callbacks[callbackType][callbackID] = callback;\r\n      }\r\n    }\r\n\r\n    removeCallbacks = (callbackType, callbackID) => {\r\n      // first check if callback already exists\r\n      if (this.state.callbacks[callbackType][callbackID]) {\r\n        this.state.callbacks[callbackType][callbackID] = null;\r\n      }\r\n    }\r\n\r\n    // GET OWNER META\r\n    getOwnerMetaAsync = async () => {\r\n      const enableLogs = 0;\r\n\r\n      return new Promise ((resolve, reject) => {\r\n        if (this.state.ownerMeta) {\r\n          if (enableLogs) console.log(\"getOwnerMetaAsync() [CACHED] --> %o\", this.state.ownerMeta);\r\n          resolve(this.state.ownerMeta);\r\n        }\r\n        else {\r\n          EPNSCoreHelper.getOwnerInfo(this.state.epnsReadProvider)\r\n            .then(response => {\r\n              this.state.ownerMeta = response;\r\n\r\n              if (enableLogs) console.log(\"getOwnerMetaAsync() --> %o\", response);\r\n              resolve(this.state.ownerMeta);\r\n            })\r\n            .catch(err => {\r\n              console.log(\"!!!Error, getOwnerMetaAsync() --> %o\", err);\r\n              reject(err);\r\n            });\r\n        }\r\n      });\r\n    }\r\n\r\n    // USERS COUNT\r\n    getUsersCountAsync = async () => {\r\n      return new Promise (async (resolve, reject) => {\r\n        if (this.state.channelsCount == -1) {\r\n          // Count not set, get and set it first\r\n          const count = EPNSCoreHelper.getTotalNumberOfUsers(this.state.epnsReadProvider)\r\n            .then(response => {\r\n              this.state.usersCount = response;\r\n              console.log(\"getUsersCountAsync() --> %o\", response);\r\n              resolve(this.state.usersCount)\r\n            })\r\n            .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\r\n        }\r\n        else {\r\n          resolve(this.state.usersCount);\r\n        }\r\n      });\r\n    }\r\n\r\n    incrementUsersCountAsync = async (incrementCount) => {\r\n      return new Promise ((resolve, reject) => {\r\n        this.getUsersCountAsync()\r\n          .then(response => {\r\n            this.state.usersCount = response + incrementCount;\r\n            console.log(\"incrementChannelsCountAsync() --> %d\", this.state.usersCount);\r\n            resolve(this.state.usersCount);\r\n          })\r\n          .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\r\n      });\r\n    }\r\n\r\n    // GET USER META\r\n    getUserMetaAsync = async () => {\r\n      const enableLogs = 0;\r\n\r\n      return new Promise ((resolve, reject) => {\r\n        if (this.state.userMeta) {\r\n          if (enableLogs) console.log(\"getUserMetaAsync() [CACHED] --> %o\", this.state.userMeta);\r\n          resolve(this.state.userMeta);\r\n        }\r\n        else {\r\n          EPNSCoreHelper.getUserInfo(this.state.account, this.state.epnsCommReadProvider)\r\n            .then(response => {\r\n              this.state.userMeta = response;\r\n\r\n              if (enableLogs) console.log(\"getUserMetaAsync() --> %o\", this.state.userMeta);\r\n              resolve(this.state.userMeta);\r\n            })\r\n            .catch(err => {\r\n              console.log(\"!!!Error, getUserMetaAsync() --> %o\", err);\r\n              reject(err);\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n}\r\n","/**\r\n * This file helps us maintain a global state of all contracts to be used across the application\r\n * This is used to prevent duplication of logic and instantiating contracts multiple times\r\n * This is also used to prevent passing props everywhere and making the code ugly\r\n */\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  ZERO_ADDRESS: \"0x0000000000000000000000000000000000000000\",\r\n  epnsReadProvider: null, // the core contract reader\r\n  epnsWriteProvider: null, // the core contract with signer\r\n  epnsCommReadProvider: null, // the communicator contract reader\r\n  epnsCommWriteProvider: null, // the communicator write contract with signer\r\n  pushAdminAddress: null, // the address of the push admin\r\n};\r\n\r\nexport const contractSlice = createSlice({\r\n  name: \"contracts\",\r\n  initialState,\r\n  reducers: {\r\n    setCoreReadProvider: (state, action) => {\r\n      state.epnsReadProvider = action.payload;\r\n    },\r\n    setCoreWriteProvider: (state, action) => {\r\n      state.epnsWriteProvider = action.payload;\r\n    },\r\n    setCommunicatorReadProvider: (state, action) => {\r\n      state.epnsCommReadProvider = action.payload;\r\n    },\r\n    setCommunicatorWriteProvider: (state, action) => {\r\n      state.epnsCommWriteProvider = action.payload;\r\n    },\r\n    setPushAdmin: (state, action) => {\r\n      state.pushAdminAddress = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {\r\n  setCoreReadProvider,\r\n  setCoreWriteProvider,\r\n  setCommunicatorReadProvider,\r\n  setCommunicatorWriteProvider,\r\n  setPushAdmin\r\n} = contractSlice.actions;\r\n\r\nexport default contractSlice.reducer;\r\n","import React from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nimport NotificationToast from \"components/NotificationToast\";\r\n\r\nimport Feedbox from \"segments/Feedbox\";\r\n\r\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\r\nimport UsersDataStore from \"singletons/UsersDataStore\";\r\n\r\nimport {\r\n  setPushAdmin,\r\n} from \"redux/slices/contractSlice\";\r\n\r\nimport GLOBALS from \"config/Globals\";\r\n\r\n// Create Header\r\nfunction InboxPage() {\r\n  // React GA Analytics\r\n  ReactGA.pageview(\"/inbox\");\r\n\r\n  const dispatch = useDispatch();\r\n  const { account } = useWeb3React();\r\n  const {\r\n    epnsReadProvider,\r\n    epnsCommReadProvider,\r\n  } = useSelector((state) => state.contracts);\r\n\r\n  // toast related section\r\n  const [toast, showToast] = React.useState(null);\r\n  const clearToast = () => showToast(null);\r\n  \r\n  //clear toast variable after it is shown\r\n  React.useEffect(() => {\r\n    if (toast) {\r\n      clearToast();\r\n    }\r\n  }, [toast]);\r\n  // toast related section\r\n\r\n  /**\r\n   * When we instantiate the contract instances, fetch basic information about the user\r\n   * Corresponding channel owned.\r\n   */\r\n  React.useEffect(() => {\r\n    if (!epnsReadProvider || !epnsCommReadProvider) return;\r\n    \r\n    // save push admin to global state\r\n    epnsReadProvider.pushChannelAdmin()\r\n    .then((response) => {\r\n      dispatch(setPushAdmin(response));\r\n    })\r\n    .catch(err =>{\r\n      console.log({err})\r\n    });\r\n\r\n    // EPNS Read Provider Set\r\n    if (epnsReadProvider != null && epnsCommReadProvider != null) {\r\n      // Instantiate Data Stores\r\n      UsersDataStore.instance.init(\r\n        account,\r\n        epnsReadProvider,\r\n        epnsCommReadProvider\r\n      );\r\n      ChannelsDataStore.instance.init(\r\n        account,\r\n        epnsReadProvider,\r\n        epnsCommReadProvider\r\n      );\r\n    }\r\n  }, [epnsReadProvider, epnsCommReadProvider]);\r\n\r\n  // Render\r\n  return (\r\n    <Container>\r\n    <div className=\"joyride\"></div>\r\n      <Feedbox />\r\n      {toast && (\r\n        <NotificationToast notification={toast} clearToast={clearToast} />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css style\r\nconst Container = styled.div`\r\n  flex-direction: column;\r\n  background: ${props => props.theme.mainBg};\r\n  height: calc(100vh - ${GLOBALS.CONSTANTS.HEADER_HEIGHT}px - 52px - ${props => props.theme.interfaceTopPadding});\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n`;\r\n\r\n// Export Default\r\nexport default InboxPage;\r\n","import dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nexport default  {\r\n    etherscanToken: process.env.REACT_APP_INFURA_API_KEY || \"\"\r\n}\r\n","import React, {useRef, useState} from 'react';\r\nimport { useClick, useClickAway } from 'react-use';\r\nimport styled from 'styled-components';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport {Item, H2, H3, Span, Button, Input} from 'components/SharedStyling';\r\n\r\nconst ethers = require('ethers');\r\n\r\n\r\nexport default function AliasVerificationModal({\r\n    onClose,onSuccess, verificationStatus\r\n}) {\r\n    const { active, error, account, library, chainId } = useWeb3React();\r\n    const signer = library.getSigner(account);\r\n\r\n    const modalRef = useRef(null);\r\n    const polygonCommsContract = new ethers.Contract(addresses.epnsPolyComm, abis.epnsComm, signer);\r\n    const [mainAdress, setMainAddress] = useState('');\r\n    const [loading, setLoading] = useState('');\r\n\r\n    // Form signer and contract connection\r\n    useClickAway(modalRef, onClose);\r\n\r\n    const submitAlias = () => {\r\n        setLoading('loading')\r\n        const anotherSendTxPromise = polygonCommsContract.verifyChannelAlias(mainAdress);\r\n        anotherSendTxPromise\r\n        .then(async (tx) => {\r\n            console.log(tx);\r\n            setLoading(\"Transaction Sent!\");\r\n\r\n            setTimeout(() => {\r\n                onSuccess();\r\n                onClose();\r\n            }, 2000);\r\n\r\n            // await tx.wait(1);\r\n            // setLoading(\"Transaction Mined!\");\r\n        })\r\n        .catch(() => {\r\n            setLoading('There was an error');\r\n            setTimeout(() => {\r\n                setLoading('')\r\n            }, 2000)\r\n        })\r\n    };\r\n    \r\n\r\n    return (\r\n        <Overlay>\r\n            <AliasModal ref={modalRef}>\r\n                <Item align=\"flex-start\">\r\n                    <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n                    <Span weight=\"200\">Verify </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Alias</Span>\r\n                    </H2>\r\n                    {\r\n                        verificationStatus === null ?\r\n                        (\r\n                            <H3>There has been an error in the verification of your alias, Please contact the admin</H3>\r\n                        ) : (\r\n                            <H3>Before you can use this channel on this chain, you first need to verify your Alias.</H3>\r\n                        )\r\n                    }\r\n                </Item>\r\n                {\r\n                    verificationStatus !== null && (\r\n                        <>\r\n                            <Item align=\"flex-start\">\r\n                                <CustomInput\r\n                                    required\r\n                                    placeholder=\"Enter ethereum wallet address of this channel\"\r\n                                    radius=\"4px\"\r\n                                    padding=\"12px\"\r\n                                    border=\"1px solid #674c9f\"\r\n                                    bg=\"#fff\"\r\n                                    value={mainAdress}\r\n                                    onChange={(e) => {setMainAddress(e.target.value)}}\r\n                                />\r\n                            </Item>\r\n                            <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                                <Button\r\n                                    bg='#e20880'\r\n                                    color='#fff'\r\n                                    flex=\"1\"\r\n                                    radius=\"0px\"\r\n                                    padding=\"20px 10px\"\r\n                                    disabled={mainAdress.length !== 42}\r\n                                    onClick={submitAlias}\r\n                                >\r\n                                    { loading && <Loader\r\n                                        type=\"Oval\"\r\n                                        color=\"#FFF\"\r\n                                        height={16}\r\n                                        width={16}\r\n                                        />\r\n                                    }\r\n                                    <StyledInput\r\n                                        cursor=\"hand\"\r\n                                        textTransform=\"uppercase\"\r\n                                        color=\"#fff\" weight=\"400\"\r\n                                        size=\"0.8em\" spacing=\"0.2em\"\r\n                                        value={loading ? loading : \"Verify Alias\"}\r\n                                    />\r\n                                </Button>\r\n                            </Item>\r\n                        </>\r\n                    )\r\n                }\r\n            </AliasModal>\r\n        </Overlay>\r\n    )\r\n}\r\n\r\nconst StyledInput = styled(Input)`\r\n    width: 100%;\r\n    text-align: center;\r\n    caret-color: transparent;\r\n`\r\n\r\nconst CustomInput = styled(Input)`\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    margin: 20px 0px;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background: rgba(0,0,0,0.85);\r\n    height: 100%;\r\n    width: 100%;\r\n    z-index: 1000;\r\n    position: fixed;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst AliasModal = styled.div`\r\n    padding: 20px 30px;\r\n    background: white;\r\n`;","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport { useWeb3React } from '@web3-react/core';\r\n\r\n\r\n// Other Information URLs\r\nfunction ViewInfoItem() {\r\n  // render\r\n  return (\r\n    <>\r\n    <Container id=\"epns-browser\">\r\n      <ChannelInfo >\r\n        <ChannelTitle>\r\n          <>\r\n          <AppLinkText>\r\n            <AppLink href={`${process.env.REACT_APP_BROWSER_EXTENSION_URL}`} target=\"_blank\" rel=\"nofollow\">\r\n              Download EPNS Browser Extension\r\n            </AppLink>\r\n          </AppLinkText>\r\n          \r\n          </>\r\n        </ChannelTitle>\r\n      </ChannelInfo>\r\n    </Container>\r\n    <Container id=\"epns-app-ios\">\r\n      <ChannelInfo >\r\n        <ChannelTitle>\r\n          <>\r\n          <AppLinkText>\r\n            <AppLink href={`${process.env.REACT_APP_IOS_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\r\n              Download EPNS App (iOS)\r\n            </AppLink>\r\n          </AppLinkText>\r\n           For iOS Users\r\n          </>\r\n        </ChannelTitle>\r\n      </ChannelInfo>\r\n    </Container>\r\n    <Container id=\"epns-app\">\r\n      <ChannelInfo >\r\n        <ChannelTitle>\r\n          <>\r\n          <AppLinkText>\r\n            <AppLink href={`${process.env.REACT_APP_ANDROID_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\r\n              Download EPNS App (Android)\r\n            </AppLink>\r\n          </AppLinkText>\r\n           For Android Users\r\n          </>\r\n        </ChannelTitle>\r\n      </ChannelInfo>\r\n    </Container>\r\n    <Container >\r\n      <ChannelInfo>\r\n        <ChannelTitle>\r\n          <ChannelTitleLink href={process.env.REACT_APP_HOW_TO_GUIDE} target=\"_blank\" rel=\"nofollow\">\r\n            Click here for our How to Guides\r\n          </ChannelTitleLink>\r\n        </ChannelTitle>\r\n      </ChannelInfo>\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  // display: flex;\r\n  // flex-wrap: wrap;\r\n\r\n  background: ${props => props.theme.mainBg};\r\n\r\n  color:${props => props.theme.color};\r\n  border-radius: 10px;\r\n  border: 1px solid rgb(237, 237, 237);\r\n\r\n  margin: 15px 0px;\r\n  justify-content: center;\r\n  padding: 10px;\r\n`\r\n\r\nconst ChannelTitleLink = styled.a`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\nconst AppLink = styled.a`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\nconst AppLinkText = styled.div`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n`\r\nconst ChannelInfo = styled.div`\r\n  flex: 1;\r\n  margin: 5px 10px;\r\n  min-width: 120px;\r\n  flex-grow: 4;\r\n  flex-direction: column;\r\n  display: flex;\r\n`\r\n\r\nconst ChannelTitle = styled.div`\r\n  margin-bottom: 5px;\r\n`\r\n\r\n// Export Default\r\nexport default ViewInfoItem;\r\n","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nimport ViewInfoItem from \"components/ViewInfoItem\";\r\n\r\nimport * as dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\n// Other Information section\r\nfunction  Info() {\r\n  const { account, library } = useWeb3React();\r\n\r\n  const [controlAt, setControlAt] = React.useState(0);\r\n\r\n  return (\r\n    <Container>\r\n      <InfoBox>\r\n        <ViewInfoItem/>\r\n      </InfoBox>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  max-height: 80vh;\r\n`\r\n\r\nconst ContainerInfo = styled.div`\r\n  padding: 20px;\r\n`\r\nconst InfoBox = styled.div`\r\n  display: block;\r\n  align-self: stretch;\r\n  background: ${props => props.theme.mainBg};\r\n`\r\n\r\n\r\n// Export Default\r\nexport default  Info;\r\n","/**\r\n * This file helps us maintain the spamnotifications fetched in state, so when tabs are switched we can retain the notification information\r\n */\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    page: 1, //the current page\r\n    notifications: [],// the actual notifications\r\n    finishedFetching: false,\r\n    toggler: false\r\n}\r\n\r\nexport const contractSlice = createSlice({\r\n    name: \"spam\",\r\n    initialState,\r\n    reducers: {\r\n        toggleToggler: (state) => {\r\n            state.toggler = !state.toggler;\r\n        },\r\n        resetState: (state) => {\r\n            state.page = initialState.page;\r\n            state.notifications = initialState.notifications;\r\n            state.finishedFetching = initialState.finishedFetching;\r\n        },\r\n        addPaginatedNotifications: (state, action) => {\r\n            state.notifications = [ ...state.notifications, ...action.payload ];\r\n            state.page += 1;\r\n        },\r\n        incrementPage: (state) => {\r\n            state.page += 1;\r\n        },\r\n        addNewNotification: (state, action) => {\r\n            state.notifications = [{...action.payload}, ...state.notifications]\r\n        },\r\n        setFinishedFetching: (state) => {\r\n            state.finishedFetching = true;\r\n        },\r\n        updateTopNotifications: (state, action) => {\r\n            state.notifications = [...action.payload.notifs, ...state.notifications.slice(action.payload.pageSize)];\r\n            console.log({sn: state.notifications});\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    toggleToggler,\r\n    addPaginatedNotifications,\r\n    incrementPage,\r\n    addNewNotification,\r\n    setFinishedFetching,\r\n    resetState,\r\n    updateTopNotifications\r\n} = contractSlice.actions;\r\n\r\nexport default contractSlice.reducer;","import React, {useState} from \"react\";\r\nimport styled, { useTheme } from 'styled-components';\r\nimport Loader from \"react-loader-spinner\";\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { envConfig } from \"@project/contracts\";\r\nimport SearchFilter from '../components/SearchFilter';\r\nimport {\r\n  api,\r\n  utils,\r\n  NotificationItem,\r\n} from \"@epnsproject/frontend-sdk-staging\";\r\nimport {\r\n  addPaginatedNotifications,\r\n  incrementPage,\r\n  setFinishedFetching,\r\n  updateTopNotifications\r\n} from \"redux/slices/spamSlice\";\r\nimport { postReq } from \"api\";\r\nimport DisplayNotice from \"components/DisplayNotice\";\r\nimport {ThemeProvider} from \"styled-components\";\r\n\r\nconst NOTIFICATIONS_PER_PAGE = 10;\r\n// Create Header\r\nfunction SpamBox({ currentTab }) {\r\n  const dispatch = useDispatch();\r\n  const { account, chainId, library } = useWeb3React();\r\n  const { epnsCommReadProvider } = useSelector(\r\n    (state: any) => state.contracts\r\n  );\r\n\r\n  const themes = useTheme();\r\n\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  const { run } = useSelector((state: any) => state.userJourney);\r\n\r\n  const { notifications, page, finishedFetching } = useSelector((state: any) => state.spam);\r\n  const { toggle } = useSelector(\r\n    (state: any) => state.notifications\r\n  );\r\n  const EPNS_DOMAIN = {\r\n    name: \"EPNS COMM V1\",\r\n    chainId: chainId,\r\n    verifyingContract: epnsCommReadProvider?.address,\r\n  };\r\n  const [allNotif , setNotif] = React.useState([]);\r\n  const [loadFilter , setLoadFilter] = React.useState(false);\r\n  const [filteredNotifications , setFilteredNotifications] = React.useState([]);\r\n  const [filter , setFilter] = React.useState(false);\r\n  const [bgUpdateLoading, setBgUpdateLoading] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const reset = ()=>setFilter(false);\r\n  const filterNotifications = async (query , channels , startDate , endDate) => {\r\n    if(loading)return;\r\n    setLoading(true);\r\n    setBgUpdateLoading(true);\r\n    setFilter(true);\r\n    if(startDate == null)startDate = new Date('January 1, 2000');\r\n    if(endDate == null)endDate = new Date('January 1, 3000');\r\n    startDate = startDate.getTime()/1000;\r\n    endDate = endDate.getTime()/1000;\r\n    var Filter = {\r\n        channels : channels , \r\n        date : {lowDate : startDate , highDate : endDate}\r\n    };\r\n    if(channels.length == 0)delete Filter.channels;\r\n\r\n\r\n    setFilteredNotifications([]);\r\n    // if(notifications.length >= NOTIFICATIONS_PER_PAGE){\r\n    //     try {\r\n    //         const {count , results} = await postReq(\"/feeds/search\", {\r\n    //             subscriber : account,\r\n    //             searchTerm: query,\r\n    //             filter: Filter,\r\n    //             isSpam: 1,\r\n    //             page: 1,\r\n    //             pageSize: 5,\r\n    //             op: \"read\"\r\n    //         });\r\n    //         const parsedResponse = utils.parseApiResponse(results);\r\n    //         setFilteredNotifications([parsedResponse]);\r\n    //     }\r\n    //     catch (err) {\r\n    //         console.log(err);\r\n    //     }\r\n    // }\r\n    // else{\r\n    \r\n        let filterNotif = [];\r\n        for(const notif of allNotif){\r\n          let timestamp;\r\n          const matches = notif.message.match(/\\[timestamp:(.*?)\\]/);\r\n            if(matches){\r\n              timestamp = matches[1];\r\n            }\r\n            else timestamp = notif.epoch;\r\n            if(\r\n                ( (Filter.channels === undefined ?  true : (Filter.channels.includes(notif.channel)))&&\r\n            timestamp >= startDate && timestamp <= endDate\r\n            &&  notif.message.toLowerCase().includes(query.toLowerCase()) )\r\n            )\r\n            filterNotif.push(notif);\r\n        }\r\n        setFilteredNotifications(filterNotif);\r\n    // }\r\n    setLoading(false);\r\n    setBgUpdateLoading(false);\r\n}\r\n\r\n  const loadNotifications = async () => {\r\n    if (loading || finishedFetching  || run) return;\r\n    setLoading(true);\r\n    try {\r\n      const { count, results } = await api.fetchSpamNotifications(\r\n        account,\r\n        NOTIFICATIONS_PER_PAGE,\r\n        page,\r\n        envConfig.apiUrl\r\n      );\r\n        let parsedResponse = utils.parseApiResponse(results);\r\n          parsedResponse.forEach( (each,i) => {\r\n              each.date = results[i].epoch;\r\n              each.epoch = (new Date(each.date).getTime() / 1000);\r\n          })\r\n          const parsedResponsePromise = parsedResponse.map(async (elem: any, i: any) => {\r\n            elem.channel = results[i].channel;\r\n            const {\r\n              data: { subscribers },\r\n            } = await postReq(\"/channels/get_subscribers\", {\r\n              channel: results[i].channel,\r\n              op: \"read\",\r\n            });\r\n            elem.subscribers = subscribers;\r\n            return { ...elem };\r\n        });\r\n        parsedResponse = await Promise.all(parsedResponsePromise);\r\n      dispatch(addPaginatedNotifications(parsedResponse));\r\n      if (count === 0) {\r\n        dispatch(setFinishedFetching());\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchLatestNotifications = async () => {\r\n    if (loading || bgUpdateLoading  || run) return;\r\n    setBgUpdateLoading(true);\r\n    setLoading(true);\r\n\r\n    try {\r\n      const { count, results } = await api.fetchSpamNotifications(\r\n        account,\r\n        NOTIFICATIONS_PER_PAGE,\r\n        1,\r\n        envConfig.apiUrl\r\n      );\r\n      if (!notifications.length) {\r\n        dispatch(incrementPage());\r\n      }\r\n      let parsedResponse = utils.parseApiResponse(results);\r\n        parsedResponse.forEach( (each,i) => {\r\n            each.date = results[i].epoch;\r\n            each.epoch = (new Date(each.date).getTime() / 1000);\r\n        })\r\n        const parsedResponsePromise = parsedResponse.map(async (elem: any, i: any) => {\r\n          elem.channel = results[i].channel;\r\n          const {\r\n            data: { subscribers },\r\n          } = await postReq(\"/channels/get_subscribers\", {\r\n            channel: results[i].channel,\r\n            op: \"read\",\r\n          });\r\n          elem.subscribers = subscribers;\r\n          return { ...elem };\r\n        });\r\n      parsedResponse = await Promise.all(parsedResponsePromise);\r\n      dispatch(\r\n        updateTopNotifications({\r\n          notifs: parsedResponse,\r\n          pageSize: NOTIFICATIONS_PER_PAGE,\r\n        })\r\n      );\r\n      if (count === 0) {\r\n        dispatch(setFinishedFetching());\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setBgUpdateLoading(false);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchAllNotif = async () => {\r\n    setLoadFilter(true);\r\n    try {\r\n      const { count, results } = await api.fetchSpamNotifications(\r\n        account,\r\n        100000,\r\n        1,\r\n        envConfig.apiUrl\r\n      );\r\n      if (!notifications.length) {\r\n        dispatch(incrementPage());\r\n      }\r\n      let parsedResponse = utils.parseApiResponse(results);\r\n        parsedResponse.forEach( (each,i) => {\r\n            each.date = results[i].epoch;\r\n            each.epoch = (new Date(each.date).getTime() / 1000);\r\n        })\r\n        const parsedResponsePromise = parsedResponse.map(async (elem: any, i: any) => {\r\n          elem.channel = results[i].channel;\r\n          const {\r\n            data: { subscribers },\r\n          } = await postReq(\"/channels/get_subscribers\", {\r\n            channel: results[i].channel,\r\n            op: \"read\",\r\n          });\r\n          elem.subscribers = subscribers;\r\n          return { ...elem };\r\n        });\r\n      parsedResponse = await Promise.all(parsedResponsePromise);\r\n\r\n      let res = parsedResponse.filter( notif => !isSubscribedFn(notif.subscribers));\r\n      setNotif(res);\r\n\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setBgUpdateLoading(false);\r\n      setLoading(false);\r\n      setLoadFilter(false);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    // if (account && currentTab === \"spambox\") {\r\n      fetchLatestNotifications();\r\n      fetchAllNotif();\r\n    // }\r\n    // else{\r\n    //   console.log(account);\r\n    // }\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (epnsCommReadProvider) {\r\n      loadNotifications();\r\n    }\r\n  }, [epnsCommReadProvider, account]);\r\n\r\n  //function to query more notifications\r\n  const handlePagination = async () => {\r\n    loadNotifications();\r\n    dispatch(incrementPage());\r\n  };\r\n\r\n  const showWayPoint = (index: any) => {\r\n    return (\r\n      Number(index) === notifications.length - 1 &&\r\n      !finishedFetching &&\r\n      !bgUpdateLoading\r\n    );\r\n  };\r\n\r\n  const onSubscribeToChannel = async (channelAddress) => {\r\n    let txToast;\r\n    const type = {\r\n      Subscribe: [\r\n        { name: \"channel\", type: \"address\" },\r\n        { name: \"subscriber\", type: \"address\" },\r\n        { name: \"action\", type: \"string\" },\r\n      ],\r\n    };\r\n    const message = {\r\n      channel: channelAddress,\r\n      subscriber: account,\r\n      action: \"Subscribe\",\r\n    };\r\n\r\n    const signature = await library\r\n      .getSigner(account)\r\n      ._signTypedData(EPNS_DOMAIN, type, message);\r\n\r\n    return postReq(\"/channels/subscribe_offchain\", {\r\n      signature,\r\n      message,\r\n      op: \"write\",\r\n      chainId,\r\n      contractAddress: epnsCommReadProvider.address,\r\n    });\r\n  };\r\n\r\n  const isSubscribedFn = (subscribers: any) => {\r\n    return subscribers\r\n      .map((a) => a.toLowerCase())\r\n      .includes(account.toLowerCase());\r\n  };\r\n\r\n  // Render\r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n      <Container>\r\n      <SearchFilter notifications = {allNotif} filterNotifications = {filterNotifications} filter={filter} reset={reset} loadFilter={loadFilter}/>\r\n        {bgUpdateLoading && (\r\n          <div style={{ marginTop: \"10px\" }}>\r\n            <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\r\n          </div>\r\n        )}\r\n        {notifications && (\r\n          <Items id=\"scrollstyle-secondary\">\r\n            {(filter && !run ? filteredNotifications : notifications).map((oneNotification, index) => {\r\n              const {\r\n                cta,\r\n                title,\r\n                message,\r\n                app,\r\n                icon,\r\n                image,\r\n                channel,\r\n                subscribers,\r\n              } = oneNotification;\r\n              // render the notification item\r\n              // console.log(app , index);\r\n              return (\r\n                <div key={index}>\r\n                  {showWayPoint(index) && !loading && (\r\n                    <Waypoint onEnter={handlePagination} />\r\n                  )}\r\n                  <NotificationItem\r\n                    notificationTitle={title}\r\n                    notificationBody={message}\r\n                    cta={cta}\r\n                    app={app}\r\n                    icon={icon}\r\n                    image={image}\r\n                    theme={themes.scheme}\r\n                    subscribeFn={(e) => {\r\n                      e?.stopPropagation();\r\n                      onSubscribeToChannel(channel);\r\n                    }}\r\n                    isSpam\r\n                    isSubscribedFn={async () => isSubscribedFn(subscribers)}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </Items>\r\n        )}\r\n        {loading && !bgUpdateLoading && (\r\n          <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\r\n        )}\r\n        {(!notifications.length || (filter && !filteredNotifications.length)) && !loading && (\r\n          <CenteredContainerInfo>\r\n            <DisplayNotice\r\n              title=\"You currently have no spam notifications.\"\r\n              theme=\"third\"\r\n            />\r\n          </CenteredContainerInfo>\r\n        )}\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nconst CenteredContainerInfo = styled.div`\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Items = styled.div`\r\n  display: block;\r\n  align-self: stretch;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n`;\r\n// css styles\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n  max-height: 100vh;\r\n  background: ${props => props.theme.mainBg};\r\n\r\n  // padding: 20px;\r\n  // font-size: 16px;\r\n  // display: flex;\r\n  // font-weight: 200;\r\n  // align-content: center;\r\n  // align-items: center;\r\n  // justify-content: center;\r\n  // width: 100%;\r\n  // min-height: 40vh;\r\n`;\r\n\r\n// Export Default\r\nexport default SpamBox;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { envConfig } from \"@project/contracts\";\r\nimport DisplayNotice from \"components/DisplayNotice\";\r\nimport SpamBox from \"segments/spam\";\r\nimport { postReq } from \"api\";\r\nimport {\r\n  api,\r\n  utils,\r\n  NotificationItem,\r\n} from \"@epnsproject/frontend-sdk-staging\";\r\nimport {\r\n  addPaginatedNotifications,\r\n  incrementPage,\r\n  setFinishedFetching,\r\n  resetState,\r\n  updateTopNotifications,\r\n} from \"redux/slices/notificationSlice\";\r\n\r\nconst NOTIFICATIONS_PER_PAGE = 10;\r\n// Create Header\r\nfunction Feedbox() {\r\n  const dispatch = useDispatch();\r\n  const { account } = useWeb3React();\r\n  const { epnsCommReadProvider } = useSelector((state: any) => state.contracts);\r\n  const { notifications, page, finishedFetching, toggle } = useSelector(\r\n    (state: any) => state.notifications\r\n  );\r\n\r\n  const [bgUpdateLoading, setBgUpdateLoading] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [currentTab, setCurrentTab] = React.useState(\"inbox\");\r\n\r\n  const loadNotifications = async () => {\r\n    if (loading || finishedFetching) return;\r\n    setLoading(true);\r\n    try {\r\n      const { count, results } = await api.fetchNotifications(\r\n        account,\r\n        NOTIFICATIONS_PER_PAGE,\r\n        page,\r\n        envConfig.apiUrl\r\n      );\r\n      const parsedResponse = utils.parseApiResponse(results);\r\n      dispatch(addPaginatedNotifications(parsedResponse));\r\n      if (count === 0) {\r\n        dispatch(setFinishedFetching());\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const fetchLatestNotifications = async () => {\r\n    if (loading || bgUpdateLoading) return;\r\n    setBgUpdateLoading(true);\r\n    setLoading(true);\r\n    try {\r\n      const { count, results } = await api.fetchNotifications(\r\n        account,\r\n        NOTIFICATIONS_PER_PAGE,\r\n        1,\r\n        envConfig.apiUrl\r\n      );\r\n      if (!notifications.length) {\r\n        dispatch(incrementPage());\r\n      }\r\n      const parsedResponse = utils.parseApiResponse(results);\r\n      // replace the first 20 notifications with these\r\n      dispatch(\r\n        updateTopNotifications({\r\n          notifs: parsedResponse,\r\n          pageSize: NOTIFICATIONS_PER_PAGE,\r\n        })\r\n      );\r\n      if (count === 0) {\r\n        dispatch(setFinishedFetching());\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setBgUpdateLoading(false);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (account && currentTab === \"inbox\") {\r\n      fetchLatestNotifications();\r\n    }\r\n  }, [account, currentTab]);\r\n\r\n  React.useEffect(() => {\r\n    fetchLatestNotifications();\r\n  }, [toggle]);\r\n\r\n  //function to query more notifications\r\n  const handlePagination = async () => {\r\n    loadNotifications();\r\n    dispatch(incrementPage());\r\n  };\r\n\r\n  const showWayPoint = (index: any) => {\r\n    return (\r\n      Number(index) === notifications.length - 1 &&\r\n      !finishedFetching &&\r\n      !bgUpdateLoading\r\n    );\r\n  };\r\n\r\n  // Render\r\n  return (\r\n    <FullWidth>\r\n      <SpamBox currentTab={currentTab} />\r\n    </FullWidth>\r\n  );\r\n}\r\n\r\nconst FullWidth = styled.div`\r\n  width: 100%;\r\n`;\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Button = styled.div`\r\n  border: 0;\r\n  outline: 0;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-align-items: center;\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n  -webkit-box-pack: center;\r\n  -webkit-justify-content: center;\r\n  -ms-flex-pack: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  background: ${(props: any) => (props.spam ? \"#e20880\" : \"#674C9F\")};\r\n  min-width: 100px;\r\n  width: 45%;\r\n  cursor: ${(props: any) => (props.active ? \"not-allowed\" : \"pointer\")};\r\n  opacity: ${(props: any) => (props.active ? 0.5 : 1)};\r\n\r\n  &:hover {\r\n    opacity: ${(props: any) => (props.active ? 0.5 : 0.8)};\r\n  }\r\n`;\r\n\r\nconst EmptyWrapper = styled.div`\r\n  padding-top: 50px;\r\n  padding-bottom: 50px;\r\n`;\r\nconst CenteredContainerInfo = styled.div`\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Items = styled.div`\r\n  display: block;\r\n  align-self: stretch;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n  background: #fafafa;\r\n`;\r\n// css styles\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n  max-height: 100vh;\r\n\r\n  // padding: 20px;\r\n  // font-size: 16px;\r\n  // display: flex;\r\n  // font-weight: 200;\r\n  // align-content: center;\r\n  // align-items: center;\r\n  // justify-content: center;\r\n  // width: 100%;\r\n  // min-height: 40vh;\r\n`;\r\n\r\n// Export Default\r\nexport default Feedbox;\r\n","// Utility Helper Functions\r\nconst UtilityHelper = {\r\n  isMainnet : (chainId) => {\r\n    if (chainId === 1) {\r\n      return true;\r\n    }\r\n  },\r\n}\r\n\r\nexport default UtilityHelper;\r\n","const size = {\r\n  mobileS: '320px',\r\n  mobileM: '375px',\r\n  mobileL: '425px',\r\n  tablet: '768px',\r\n  laptop: '1024px',\r\n  laptopL: '1440px',\r\n  desktop: '2560px'\r\n}\r\n\r\nexport const Device = {\r\n  mobileS: `(max-width: ${size.mobileS})`,\r\n  mobileM: `(max-width: ${size.mobileM})`,\r\n  mobileL: `(max-width: ${size.mobileL})`,\r\n  tablet: `(max-width: ${size.tablet})`,\r\n  laptop: `(max-width: ${size.laptop})`,\r\n  laptopL: `(max-width: ${size.laptopL})`,\r\n  desktop: `(max-width: ${size.desktop})`,\r\n  desktopL: `(max-width: ${size.desktop})`\r\n};\r\n","import React from \"react\";\r\n\r\nimport styled, { useTheme } from 'styled-components';\r\nimport { Item, ItemH, Span, A} from 'components/SharedStyling';\r\n\r\n// Faucet URLs\r\nfunction MetaInfoDisplay({ externalIcon, internalIcon, text, bgColor, onClick, onMouseEnter, onMouseLeave }) {\r\n  const themes = useTheme();\r\n\r\n  // render\r\n  return (\r\n    <MetaContainer>\r\n      {externalIcon &&\r\n        <Item\r\n          margin=\"0px 4px 0px 0px\"\r\n        >\r\n          {externalIcon}\r\n        </Item>\r\n      }\r\n      <MetaContent\r\n        hoverBG=\"transparent\"\r\n        onClick={onClick}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={onMouseLeave}\r\n      >\r\n        <Span\r\n          bg={bgColor}\r\n        >\r\n          {internalIcon && \r\n            <IconContainer>\r\n              {internalIcon}\r\n            </IconContainer>\r\n          }\r\n          {text}\r\n        </Span>\r\n      </MetaContent>\r\n    </MetaContainer>\r\n  );\r\n}\r\n\r\nconst MetaContainer = styled(ItemH)`\r\n  flex-wrap: initial;\r\n  flex: initial;\r\n  padding: 5px;\r\n`\r\n\r\nconst MetaContent = styled(A)`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  \r\n  & > Span {\r\n    background: ${props => props.bgColor};\r\n    margin: 0px 5px;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    padding: 5px 10px;\r\n    display: flex;\r\n    border-radius: 10px;\r\n    font-size: 11px;\r\n    gap: 3px;\r\n    transition: 300ms;\r\n  }\r\n`\r\n\r\nconst IconContainer = styled(Span)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0px 4px 0px 0px;\r\n  color: inherit;\r\n`\r\n\r\n// Export Default\r\nexport default MetaInfoDisplay;\r\n","const channelsTuts = { \r\n  ens: {\r\n    maintainer: '0x983110309620D911731Ac0932219af06091b6744',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/AmalyHBJ5Gw?controls=0&autoplay=1',\r\n    userjourneyshort: 'ens',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-to-add-push-notifications-to-ens-decentralized-domain-name-services-a20f001a7234'\r\n  },\r\n  coindesk: {\r\n    maintainer: '0xe56f1D3EDFFF1f25855aEF744caFE7991c224FFF',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/z_RZgoYNH_Y?controls=0&autoplay=1',\r\n    userjourneyshort: 'coindesk',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-and-coindesk-announce-media-push-notifications-1707b12884d'\r\n  },  \r\n  snapshot: {\r\n    maintainer: '0x8C28Cf33d9Fd3D0293f963b1cd27e3FF422B425c',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/AYy42D5oG20?controls=0&autoplay=1',\r\n    userjourneyshort: 'snapshot',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-partners-with-snapshot-to-deliver-notifications-to-improve-community-governance-5730559cb84b'\r\n  },\r\n  makerdao: {\r\n    maintainer: '0x8Cd0ad5C55498Aacb72b6689E1da5A284C69c0C7',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/OxZ5H2vRnRc?controls=0&autoplay=1',\r\n    userjourneyshort: 'makerdao',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-partners-with-makerdao-development-and-ux-core-unit-to-enable-push-notifications-for-protocol-53f777957d26'\r\n  },\r\n  cvi: {\r\n    maintainer: '0x2dbf5aFead4759E6151590E4a8F6cD596B7044F8',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/r_wXWfEWSM0?controls=0&autoplay=1',\r\n    userjourneyshort: 'cvi',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-collaborates-with-cvi-crypto-volatility-index-to-enable-push-notifications-for-their-5ea662ee73a3'\r\n  },\r\n  bancor: {\r\n    maintainer: '0x7F41abf7fDb9E4A6373EC3BAB3Df814b5CCceCC3',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/SmoOX2JXx_4?controls=0&autoplay=1',\r\n    userjourneyshort: 'bancor',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-integrates-with-bancor-network-to-facilitate-decentralized-push-notifications-d35b5e27d4a9'\r\n  },\r\n  oasisapp: {\r\n    maintainer: '0x12b3eE60Df8ea26D03b8035Ec90434a38A82C4C7',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/7PPc6a3XUo4?controls=0&autoplay=1',\r\n    userjourneyshort: 'oasisapp',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-push-notifications-arrive-at-defi-on-oasis-app-770ae7ed1b'\r\n  },\r\n  mover: {\r\n    maintainer: '0xb754601d2C8C1389E6633b1449B84CcE57788566',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/TX1acRPGovA?controls=0&autoplay=1',\r\n    userjourneyshort: 'mover',\r\n    article: 'https://medium.com/ethereum-push-notification-service/mover-integrates-with-epns-to-deliver-yield-harvesting-notifications-ab3bc9a6b26e'\r\n  },\r\n  poh: {\r\n    maintainer: '0x327a29fcE0a6490E4236240Be176dAA282EcCfdF',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/_Urc35obsOQ?controls=0&autoplay=1',\r\n    userjourneyshort: 'poh',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-joins-proof-of-humanity-to-enhance-the-user-experience-of-decentralized-self-sovereign-e734780c9840'\r\n  },\r\n  kyber: {\r\n    maintainer: '0x91c9D4373B077eF8082F468C7c97f2c499e36F5b',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/EpTYdJMQxoU?controls=0&autoplay=1',\r\n    userjourneyshort: 'kyber',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-push-notifications-to-support-kybers-frictionless-liquidity-pools-4fe65746b39'\r\n  },\r\n  fabwelt: {\r\n    maintainer: '0x361Cb6BE977d0113A33914A8f952Ced95747F793',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/kLyZ0DT?controls=0&autoplay=1',\r\n    userjourneyshort: 'fabwelt',\r\n    article: 'https://medium.com/ethereum-push-notification-service/fabwelt-partners-with-epns-to-bring-push-notifications-to-crypto-gaming-c247e70bb627'\r\n  },\r\n  banklessfr: {\r\n    maintainer: '0xA8aF754379d8ae406dFbDD0D6c46324aD647243E',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/1mnLTslK_sY?controls=0&autoplay=1',\r\n    userjourneyshort: 'banklessfr',\r\n    article: null\r\n  },\r\n  angle: {\r\n    maintainer: '0xA2dEe32662F6243dA539bf6A8613F9A9e39843D3',\r\n    userjourneyyoutube: null,\r\n    userjourneyshort: 'angle',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-allies-with-angle-protocol-to-facilitate-push-notifications-for-users-af77cf4d3e2b'\r\n  },\r\n  mstable: {\r\n    maintainer: '0xC30CE8F08BD8F667E65185310807Db937A5d6E53',\r\n    userjourneyyoutube: null,\r\n    userjourneyshort: 'mstable',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-allies-with-mstable-to-facilitate-decentralized-notifications-for-users-a3e6be14eecc'\r\n  },\r\n  aragon: {\r\n    maintainer: '0x187a34c86aA6378333cE9033Aa34718D2CEdEd2C',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/PT90Zyi9A0g?controls=0&autoplay=1',\r\n    userjourneyshort: 'aragon',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-partners-with-aragon-voice-to-power-unstoppable-decentralized-governance-56182b9d9aa0'\r\n  },\r\n  cryptomanga: {\r\n    maintainer: '0x0B430A1651E6A64510afC97195040359941d0b23',\r\n    userjourneyyoutube: null,\r\n    userjourneyshort: 'cryptomanga',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-x-cryptomanga-decentralized-communication-for-decentralized-gaming-d296956afdeb'\r\n  },\r\n  dydx: {\r\n    maintainer: '0x23c6b8fB0557FD5e6696BceF3fD4855E0d7018C0',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/oXgNlebVUAo?controls=0&autoplay=1',\r\n    userjourneyshort: 'dydx',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-teams-up-with-dydx-foundation-to-enable-notifications-for-governance-updates-5794a5e22c4d'\r\n  },\r\n  idle: {\r\n    maintainer: '0xFb3bD022D5DAcF95eE28a6B07825D4Ff9C5b3814',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/08bBRIzRcok?controls=0&autoplay=1',\r\n    userjourneyshort: 'idle',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-collaborates-with-idle-to-enable-push-notifications-for-governance-updates-32e142ed2f33'\r\n  },\r\n  tracerdao: {\r\n    maintainer: '0x8bf25240402C126bb236d26D391b782c5c893D32',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/Pw5zjKmQLFg?controls=0&autoplay=1',\r\n    userjourneyshort: 'tracerdao',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-brings-push-notifs-to-tracer-dao-governance-91f7b9a9ddcc'\r\n  },\r\n  armor: {\r\n    maintainer: '0x5aFeDeF166bd626B3043cb1D53e16EA9BF863E06',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/AMW9Xf0Rc2Y?controls=0&autoplay=1',\r\n    userjourneyshort: 'armor',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-partners-with-armor-to-enable-push-notifications-for-its-users-daa70b4f172d'\r\n  },\r\n  pods: {\r\n    maintainer: '0xb4F88Ad000A53638F203dcA2C39828a58057d53c',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/Ink21CE_RzM?controls=0&autoplay=1',\r\n    userjourneyshort: 'pods',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-inks-partnership-with-options-protocol-pods-finance-e5adcd2d5821'\r\n  },\r\n  ooki: {\r\n    maintainer: '0x9B43a385E08EE3e4b402D4312dABD11296d09E93',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/vGu--SUV4l4?controls=0&autoplay=1',\r\n    userjourneyshort: 'ooki',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-partners-with-bzx-to-deliver-crucial-margin-trading-push-notifications-to-wallets-a2f52e4fcefe'\r\n  },\r\n  pushgov: {\r\n    maintainer: '0xfE4A6Fbd27B496855245A1e8047F693f0aDfDb08',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/vvDlJttgQgQ?controls=0&autoplay=1',\r\n    userjourneyshort: 'pushgov',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-governance-goes-live-lets-push-for-progressive-decentralized-governance-7448b58b89b4'\r\n  },\r\n  symphony: {\r\n    maintainer: '0xd32908F63713F514aDDBE3962A2dE7112fdCD4A7',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/FtadeuLSPmE?controls=0&autoplay=1',\r\n    userjourneyshort: 'symphony',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-collaborates-with-symphony-finance-to-facilitate-push-notifications-for-limit-order-c6f27bf8e02a'\r\n  },\r\n  ethtracker: {\r\n    maintainer: '0xDBc5936E4daaE94F415C39D284f6a69c4d553F2F',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/13ahwv-Ox04?controls=0&autoplay=1',\r\n    userjourneyshort: 'ethtracker',\r\n    article: null\r\n  },\r\n  ethpricetracker: {\r\n    maintainer: '0x2B8ffb4460550Dbe8Ec1cEA9C1B61322dB56B082',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/13ahwv-Ox04?controls=0&autoplay=1',\r\n    userjourneyshort: 'ethpricetracker',\r\n    article: null\r\n  },\r\n  btctracker: {\r\n    maintainer: '0x03EAAAa48ea78d1E66eA3458364d553AD981871E',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/13ahwv-Ox04?controls=0&autoplay=1',\r\n    userjourneyshort: 'btctracker',\r\n    article: null\r\n  },\r\n  aave: {\r\n    maintainer: '0xAA940b3501176af328423d975C350d0d1BaAae50',\r\n    userjourneyyoutube: 'https://www.youtube.com/embed/YKflQ8eADFg?controls=0&autoplay=1',\r\n    userjourneyshort: 'aave',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-x-aave-protection-against-asset-liquidation-f33be395ef87'\r\n  },\r\n  gro: {\r\n    maintainer: '0x3c1F2E6Ec3De7811E2daa2B8E132CdCd8e39851c',\r\n    userjourneyyoutube: null,\r\n    userjourneyshort: 'gro',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-monthly-blocks-4371ef89bc91'\r\n  },\r\n  flipside: {\r\n    maintainer: '0xC2f41b3a1FF28Fd2A6EeE76EE12e51482fcFd11F',\r\n    userjourneyyoutube: null,\r\n    userjourneyshort: 'flipside',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-and-flipside-crypto-join-forces-to-facilitate-push-notifications-for-users-58df98b7aba7'\r\n  },\r\n  thedefiant: {\r\n    maintainer: '0x46b676303ebC5699BF47e416677A57A89c70a015',\r\n    userjourneyyoutube: null,\r\n    userjourneyshort: 'thedefiant',\r\n    article: 'https://medium.com/ethereum-push-notification-service/epns-teams-up-with-the-defiant-to-bring-defi-news-directly-to-users-wallets-8b4896d674bb'\r\n  },\r\n}\r\n\r\nexport default channelsTuts;\r\n","import React from \"react\";\r\n\r\nimport styled, { useTheme } from 'styled-components';\r\nimport { Item, ItemH, Image, Span, Anchor, Button} from 'components/SharedStyling';\r\n\r\nimport { FaPlay, FaShareSquare, FaYoutube } from 'react-icons/fa';\r\n\r\nimport MetaInfoDisplayer from \"components/MetaInfoDisplayer\";\r\n\r\nimport channelTuts from \"config/channelTuts\";\r\n\r\n// Check channel has tutorial\r\nexport const isChannelTutorialized = (addr) => {\r\n  let keyFound = false;\r\n  Object.entries(channelTuts).forEach(([key, value]) => {\r\n    if (channelTuts[key].maintainer === addr) {\r\n      keyFound = true;\r\n      return;\r\n    }\r\n  });\r\n\r\n  return keyFound;\r\n}\r\n\r\n// Channel Tutorial\r\nconst ChannelTutorial = ({ addr, bgColor, loadTeaser, playTeaser }) => {\r\n  const themes = useTheme();\r\n\r\n  // set state\r\n  const [showTuts, setShowTuts] = React.useState(false);\r\n\r\n  // helper functions\r\n  const getChannelTutItem = (addr) => {\r\n    let item = null;\r\n\r\n    Object.entries(channelTuts).forEach(([key, value]) => {\r\n      if (channelTuts[key].maintainer === addr) {\r\n        item = channelTuts[key];\r\n        return;\r\n      }\r\n    });\r\n\r\n    return item;\r\n  }\r\n\r\n  const item = getChannelTutItem(addr);\r\n\r\n  // render\r\n  return (\r\n    <Item\r\n      flex=\"initial\"\r\n      onMouseEnter={() => {\r\n        setShowTuts(true);\r\n        console.log(\"enter\")\r\n      }}\r\n      onMouseLeave={() => {\r\n        setShowTuts(false);\r\n        console.log(\"exit\")\r\n      }}\r\n      zIndex=\"10\"\r\n    >\r\n      {showTuts &&\r\n        <Item\r\n          position=\"absolute\"\r\n          width=\"280px\"\r\n          bottom=\"0px\"\r\n          padding=\"0px 0px 40px 0px\"\r\n        >\r\n          <TutsInner\r\n            bg={themes.backgroundBG}\r\n            padding=\"10px\"\r\n            border={`1px solid ${themes.borderBg}`}\r\n          >\r\n            {item.userjourneyshort && \r\n              <Item>\r\n                <Span\r\n                  bg={themes.viewChannelTutsTitleBg}\r\n                  color=\"#fff\"\r\n                  padding=\"4px 10px\"\r\n                  margin=\"0px 0px 10px 0px\"\r\n                  self=\"flex-end\"\r\n                  spacing=\"0.1em\"\r\n                  textTransform=\"uppercase\"\r\n                  size=\"bold\"\r\n                >\r\n                  Opt-in to enable\r\n                </Span>\r\n                <Image\r\n                  src={`./tuts/${item.userjourneyshort}/${item.userjourneyshort}_${themes.scheme}.png`}\r\n                  srcSet={`./tuts/${item.userjourneyshort}/${item.userjourneyshort}_${themes.scheme}@2x.png 2x, ./tuts/${item.userjourneyshort}/${item.userjourneyshort}_${themes.scheme}@3x.png 3x`}\r\n                  alt={`${item.alt}`}\r\n                />\r\n              </Item>\r\n            }\r\n\r\n            <ItemH\r\n              padding=\"10px 0px 0px 0px\"\r\n              justify=\"space-between\"\r\n              self=\"stretch\"\r\n            >\r\n              {item.userjourneyyoutube && \r\n                <Button\r\n                  bg={themes.viewChannelTutsButtonBg}\r\n                  color='#fff'\r\n                  radius=\"4px\"\r\n                  padding=\"5px 10px\"\r\n                  onClick={() => {\r\n                    setShowTuts(false);\r\n                    loadTeaser(item.userjourneyyoutube);\r\n                    playTeaser(true);\r\n                  }}\r\n                >\r\n                  <Span\r\n                    margin=\"0px 5px 0px 0px\"\r\n                    weight=\"bold\"\r\n                    color='#fff'\r\n                  >\r\n                    User Journey\r\n                  </Span>\r\n                  <FaYoutube size=\"20px\" />\r\n                </Button>\r\n              }\r\n              \r\n              {item.article && \r\n                <Button\r\n                  bg={themes.viewChannelTutsButtonBg}\r\n                  color='#fff'\r\n                  radius=\"4px\"\r\n                  padding=\"5px 10px\"\r\n                  onClick={() => {\r\n                    setShowTuts(false);\r\n                    window.open(`${item.article}`, \"_blank\") //to open new page\r\n                  }}\r\n                >\r\n                  <FaShareSquare size=\"20px\" />\r\n                </Button>\r\n              }\r\n            </ItemH>\r\n          </TutsInner>\r\n        </Item>\r\n      }\r\n\r\n      <MetaInfoDisplayer\r\n        internalIcon={<FaPlay />}\r\n        text=\"Short Tutorial\"\r\n        bgColor={bgColor}\r\n      />\r\n    </Item>\r\n  );\r\n}\r\n\r\n// CSS STYLES\r\nconst TutsInner = styled(Item)`\r\n  border-radius: 10px;\r\n  box-shadow: 0px 15px 20px -5px rgb(0 0 0 / 10%);\r\n`\r\n\r\n// Export Default\r\nexport default ChannelTutorial;\r\n","/**\r\n * This file helps us maintain the channels fetched in state, such that when we leave the tab, the channels can be fetched from memory\r\n */\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  CHANNNEL_DEACTIVATED_STATE: 2,\r\n  CHANNEL_BLOCKED_STATE: 3,\r\n  CHANNEL_ACTIVE_STATE: 1,\r\n  CHANNEL_BLACKLIST: [], //a list of channels\r\n  page: 0,\r\n  channels: [], // the channels meta-data\r\n  channelsCache: {}, // a mapping of channel address to channel details\r\n};\r\n\r\nexport const contractSlice = createSlice({\r\n  name: \"channels\",\r\n  initialState,\r\n  reducers: {\r\n    setChannelMeta: (state, action) => {\r\n      state.channels = action.payload;\r\n    },\r\n    incrementPage: (state) => {\r\n      state.page += 1;\r\n    },\r\n    cacheChannelInfo: (state, action) => {\r\n      const { address, meta } = action.payload;\r\n      state.channelsCache[address] = meta;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {\r\n  setChannelMeta,\r\n  incrementPage,\r\n  cacheChannelInfo,\r\n} = contractSlice.actions;\r\n\r\nexport default contractSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport styled, { css, useTheme } from \"styled-components\";\r\nimport { Device } from \"assets/Device\";\r\n\r\nimport { toast as toaster } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Skeleton from \"@yisheng90/react-loading\";\r\nimport { IoMdPeople } from \"react-icons/io\";\r\nimport { GoVerified } from \"react-icons/go\";\r\nimport { FaRegAddressCard } from \"react-icons/fa\";\r\nimport { AiOutlineShareAlt } from \"react-icons/ai\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport {ThemeProvider} from \"styled-components\";\r\nimport { Item, ItemH, Span, H2, B, A } from \"components/SharedStyling\";\r\n\r\nimport { postReq } from \"api\";\r\n\r\nimport MetaInfoDisplayer from \"components/MetaInfoDisplayer\";\r\nimport NotificationToast from \"components/NotificationToast\";\r\n\r\nimport ChannelTutorial, { isChannelTutorialized } from \"segments/ChannelTutorial\";\r\n\r\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\r\nimport { cacheChannelInfo } from \"redux/slices/channelSlice\";\r\nimport { incrementStepIndex,addNewWelcomeNotif } from \"redux/slices/userJourneySlice\";\r\n// Create Header\r\nfunction ViewChannelItem({ channelObjectProp, loadTeaser, playTeaser }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const themes = useTheme();\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const {\r\n    run,\r\n    stepIndex\r\n  } = useSelector((state) => state.userJourney);\r\n\r\n  const {\r\n    epnsReadProvider,\r\n    epnsWriteProvider,\r\n    epnsCommReadProvider,\r\n    pushAdminAddress,\r\n    ZERO_ADDRESS,\r\n  } = useSelector((state) => state.contracts);\r\n  const { canVerify } = useSelector((state) => state.admin);\r\n  const { channelsCache, CHANNEL_BLACKLIST } = useSelector(\r\n    (state) => state.channels\r\n  );\r\n  const { account, library, chainId } = useWeb3React();\r\n  const isOwner = channelObjectProp.addr === account;\r\n\r\n  const [channelObject, setChannelObject] = React.useState({});\r\n  const [channelJson, setChannelJson] = React.useState({});\r\n  const [subscribed, setSubscribed] = React.useState(true);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [memberCount, setMemberCount] = React.useState(0);\r\n  const [isPushAdmin, setIsPushAdmin] = React.useState(false);\r\n  const [isVerified, setIsVerified] = React.useState(false);\r\n  const [isBlocked, setIsBlocked] = React.useState(false);\r\n  const [vLoading, setvLoading] = React.useState(false);\r\n  const [bLoading, setBLoading] = React.useState(false);\r\n  const [txInProgress, setTxInProgress] = React.useState(false);\r\n  const [canUnverify, setCanUnverify] = React.useState(false);\r\n  const [verifierDetails, setVerifierDetails] = React.useState(null);\r\n  const [copyText, setCopyText] = React.useState(null);\r\n\r\n  // ------ toast related section\r\n  const isChannelBlacklisted = CHANNEL_BLACKLIST.includes(channelObject.addr);\r\n  const [toast, showToast] = React.useState(null);\r\n  const clearToast = () => showToast(null);\r\n\r\n  //clear toast variable after it is shown\r\n  React.useEffect(() => {\r\n    if (toast) {\r\n      clearToast();\r\n    }\r\n  }, [toast]);\r\n  // ------ toast related section\r\n\r\n  React.useEffect(() => {\r\n    if (!channelObject.addr) return;\r\n    if (channelObject.verifiedBy) {\r\n      // procced as usual\r\n      fetchChannelJson().catch((err) => alert(err.message));\r\n      setIsBlocked(\r\n        channelObject.channelState === 3 || channelObject.channelState === 2 //dont display channel if blocked //dont display channel if deactivated\r\n      );\r\n    } else {\r\n      // if this key (verifiedBy) is not present it means we are searching and should fetch the channel object from chain again\r\n      epnsReadProvider.channels(channelObject.addr).then((response) => {\r\n        setChannelObject({ ...response, addr: channelObject.addr });\r\n        fetchChannelJson();\r\n      });\r\n    }\r\n  }, [account, channelObject, chainId]);\r\n\r\n  React.useEffect(() => {\r\n    if (!channelObjectProp) return;\r\n    setChannelObject(channelObjectProp);\r\n  }, [channelObjectProp]);\r\n\r\n  React.useEffect(() => {\r\n    if (!isVerified || channelObject?.verifiedBy === ZERO_ADDRESS) return;\r\n    ChannelsDataStore.instance\r\n      .getChannelJsonAsync(channelObject.verifiedBy)\r\n      .then((verifierDetails) => {\r\n        setVerifierDetails(verifierDetails);\r\n      })\r\n      .catch((err) => {\r\n        console.log(channelObject.verifiedBy, err);\r\n      });\r\n  }, [isVerified, channelObject]);\r\n\r\n  const EPNS_DOMAIN = {\r\n    name: \"EPNS COMM V1\",\r\n    chainId: chainId,\r\n    verifyingContract: epnsCommReadProvider.address,\r\n  };\r\n  // to fetch channels\r\n  const fetchChannelJson = async () => {\r\n    try {\r\n      let channelJson = {};\r\n      setCopyText(channelObject.addr);\r\n      if (channelsCache[channelObject.addr]) {\r\n        channelJson = channelsCache[channelObject.addr];\r\n      } else {\r\n        channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(\r\n          channelObject.addr\r\n        );\r\n        dispatch(\r\n          cacheChannelInfo({\r\n            address: channelObject.addr,\r\n            meta: channelJson,\r\n          })\r\n        );\r\n      }\r\n      const channelSubscribers = await postReq(\"/channels/get_subscribers\", {\r\n        channel: channelObject.addr,\r\n        op: \"read\",\r\n      })\r\n        .then(({ data }) => {\r\n          const subs = data.subscribers;\r\n\r\n          return subs;\r\n        })\r\n        .catch((err) => {\r\n          console.log(`getChannelSubscribers => ${err.message}`);\r\n          return [];\r\n        });\r\n        let subscribed = channelSubscribers.find((sub) => {\r\n        return sub.toLowerCase() === account.toLowerCase();\r\n      });\r\n\r\n      if (run) subscribed = false;\r\n      setIsPushAdmin(pushAdminAddress === account);\r\n      setMemberCount(channelSubscribers.length);\r\n      setSubscribed(subscribed);\r\n      setChannelJson({ ...channelJson, addr: channelObject.addr });\r\n      if (\r\n        // channelObject.addr === \"0xB88460Bb2696CAb9D66013A05dFF29a28330689D\" && //production\r\n        run &&\r\n        channelObject.addr === \"0x2177cFc66474bBEce7Cbf114d780A5cfE78485De\" && //development\r\n        stepIndex === 3\r\n      ) {\r\n        console.log(channelObject.addr);\r\n        dispatch(incrementStepIndex());\r\n      }\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setIsBlocked(true);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!channelObject) return\r\n    setIsVerified(\r\n      Boolean(\r\n        (channelObject.verifiedBy &&\r\n          channelObject.verifiedBy !== ZERO_ADDRESS) ||\r\n          channelObject.addr === pushAdminAddress\r\n      )\r\n    )\r\n    setCanUnverify(channelObject.verifiedBy == account)\r\n  }, [channelObject])\r\n\r\n  // toast customize\r\n  const LoaderToast = ({ msg, color }) => (\r\n    <Toaster>\r\n      <Loader type=\"Oval\" color={color} height={30} width={30} />\r\n      <ToasterMsg>{msg}</ToasterMsg>\r\n    </Toaster>\r\n  );\r\n\r\n  // to subscribe\r\n  const subscribe = async () => {\r\n    console.log(\"click executed\")\r\n    subscribeAction(false);\r\n  };\r\n  const formatAddress = (addressText) => {\r\n    return addressText.length > 40\r\n      ? `${addressText.slice(0, 4)}....${addressText.slice(36)}`\r\n      : addressText;\r\n  };\r\n\r\n  // Toastify\r\n  let notificationToast = () =>\r\n    toaster.dark(<LoaderToast msg=\"Preparing Notification\" color=\"#fff\" />, {\r\n      position: \"bottom-right\",\r\n      autoClose: false,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n  const verifyChannel = () => {\r\n    setvLoading(true);\r\n    // post op\r\n    epnsWriteProvider\r\n      .verifyChannel(channelObject.addr)\r\n      .then(async (tx) => {\r\n        console.log(tx);\r\n        console.log(\"Transaction Sent!\");\r\n\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transaction sent\",\r\n          type: toaster.TYPE.INFO,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        // await tx.wait(1);\r\n        // console.log (\"Transaction Mined!\");\r\n        setIsVerified(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"!!!Error verifyChannel() --> %o\", err);\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transacion Failed: \" + err.error?.message || \"Unknown Error\",\r\n          type: toaster.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setvLoading(false);\r\n      });\r\n  };\r\n\r\n  const unverifyChannel = () => {\r\n    setvLoading(true);\r\n    epnsWriteProvider\r\n      .unverifyChannel(channelObject.addr)\r\n      .then(async (tx) => {\r\n        console.log(tx);\r\n        console.log(\"Transaction Sent!\");\r\n\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transaction sent\",\r\n          type: toaster.TYPE.INFO,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        await tx.wait(1);\r\n        console.log(\"Transaction Mined!\");\r\n        setIsVerified(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"!!!Error handleSendMessage() --> %o\", err);\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transacion Failed: \" + err.error?.message || \"Unknown Error\",\r\n          type: toaster.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n      });\r\n    setvLoading(false);\r\n  };\r\n  const blockChannel = () => {\r\n    setBLoading(true);\r\n    epnsWriteProvider\r\n      .blockChannel(channelObject.addr)\r\n      .then(async (tx) => {\r\n        console.log(tx);\r\n        console.log(\"Transaction Sent!\");\r\n\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transaction Sent\",\r\n          type: toaster.TYPE.INFO,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        // await tx.wait(1);\r\n        // console.log (\"Transaction Mined!\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"!!!Error handleSendMessage() --> %o\", err);\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transacion Failed: \" + err.error.message,\r\n          type: toaster.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n      })\r\n      .finally(() => {\r\n        // post op\r\n        setBLoading(false);\r\n        setIsBlocked(true);\r\n      });\r\n  };\r\n\r\n  const subscribeAction = async () => {\r\n    setTxInProgress(true);\r\n    let txToast;\r\n    try {\r\n      const type = {\r\n        Subscribe: [\r\n          { name: \"channel\", type: \"address\" },\r\n          { name: \"subscriber\", type: \"address\" },\r\n          { name: \"action\", type: \"string\" },\r\n        ],\r\n      };\r\n      const message = {\r\n        channel: channelObject.addr,\r\n        subscriber: account,\r\n        action: \"Subscribe\",\r\n      };\r\n\r\n      const signature = await library\r\n        .getSigner(account)\r\n        ._signTypedData(EPNS_DOMAIN, type, message);\r\n      txToast = toaster.dark(\r\n        <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\r\n        {\r\n          position: \"bottom-right\",\r\n          autoClose: false,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        }\r\n      );\r\n\r\n      if(run) {\r\n        console.log(\"in run\");\r\n        toaster.update(txToast, {\r\n          render: \"Successfully opted into channel !\",\r\n          type: toaster.TYPE.SUCCESS,\r\n          autoClose: 5000,\r\n        });\r\n        dispatch(addNewWelcomeNotif({\r\n          cta: \"\",\r\n          title: channelJson.info,\r\n          message: `Welcome to ${channelJson.name} Channel. From now onwards, you'll be getting notifications from this channel`,\r\n          icon: channelJson.icon,\r\n          url: channelJson.url,\r\n          sid: \"\",\r\n          app: channelJson.name,\r\n          image: \"\"\r\n        }))\r\n        setTxInProgress(false); \r\n        setSubscribed(true);\r\n        if(stepIndex === 5) {console.log(\"this is working\"); dispatch(incrementStepIndex());}\r\n        return;\r\n      }\r\n\r\n      postReq(\"/channels/subscribe_offchain\", {\r\n        signature,\r\n        message,\r\n        op: \"write\",\r\n        chainId,\r\n        contractAddress: epnsCommReadProvider.address,\r\n      }).then((res) => {\r\n        setSubscribed(true);\r\n        setMemberCount(memberCount + 1);\r\n        toaster.update(txToast, {\r\n          render: \"Successfully opted into channel !\",\r\n          type: toaster.TYPE.SUCCESS,\r\n          autoClose: 5000,\r\n        });\r\n        console.log(res);\r\n        setTxInProgress(false);\r\n      });\r\n    } catch (err) {\r\n      toaster.update(txToast, {\r\n        render: \"There was an error opting into channel (\" + err.message + \")\",\r\n        type: toaster.TYPE.ERROR,\r\n        autoClose: 5000,\r\n      });\r\n      console.log(err);\r\n    } finally {\r\n      setTxInProgress(false);\r\n    }\r\n  };\r\n\r\n  const copyToClipboard = (address) => {\r\n    let hostname = window.location.hostname;\r\n    // if we are on localhost, attach the port\r\n    if (hostname === \"localhost\") {\r\n      hostname = hostname + \":3000\";\r\n    }\r\n    const url = `${hostname}/#/channels?channel=${address}`;\r\n    // fallback for non navigator browser support\r\n    if (navigator && navigator.clipboard) {\r\n      navigator.clipboard.writeText(url);\r\n    } else {\r\n      const el = document.createElement(\"textarea\");\r\n      el.value = url;\r\n      document.body.appendChild(el);\r\n      el.select();\r\n      document.execCommand(\"copy\");\r\n      document.body.removeChild(el);\r\n    }\r\n\r\n\r\n  };\r\n\r\n\r\n  const unsubscribeAction = async () => {\r\n    let txToast;\r\n    try {\r\n      const type = {\r\n        Unsubscribe: [\r\n          { name: \"channel\", type: \"address\" },\r\n          { name: \"unsubscriber\", type: \"address\" },\r\n          { name: \"action\", type: \"string\" },\r\n        ],\r\n      };\r\n      const message = {\r\n        channel: channelObject.addr,\r\n        unsubscriber: account,\r\n        action: \"Unsubscribe\",\r\n      };\r\n      const signature = await library\r\n        .getSigner(account)\r\n        ._signTypedData(EPNS_DOMAIN, type, message);\r\n\r\n      txToast = toaster.dark(\r\n        <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\r\n        {\r\n          position: \"bottom-right\",\r\n          autoClose: false,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        }\r\n      );\r\n\r\n      postReq(\"/channels/unsubscribe_offchain\", {\r\n        signature,\r\n        message,\r\n        op: \"write\",\r\n        chainId,\r\n        contractAddress: epnsCommReadProvider.address,\r\n      })\r\n        .then((res) => {\r\n          setSubscribed(false);\r\n          setMemberCount(memberCount + 1);\r\n          toaster.update(txToast, {\r\n            render: \"Successfully opted out of channel !\",\r\n            type: toaster.TYPE.SUCCESS,\r\n            autoClose: 5000,\r\n          });\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          toaster.update(txToast, {\r\n            render:\r\n              \"There was an error opting into channel (\" + err.message + \")\",\r\n            type: toaster.TYPE.ERROR,\r\n            autoClose: 5000,\r\n          });\r\n          console.log(err);\r\n        })\r\n        .finally(() => {\r\n          setTxInProgress(false);\r\n        });\r\n    } finally {\r\n      setTxInProgress(false);\r\n    }\r\n  };\r\n\r\n  if (isBlocked) return <></>;\r\n  if (isChannelBlacklisted) return <></>;\r\n\r\n  // render\r\n  return (\r\n    <Container key={channelObject.addr}>\r\n      <ChannelLogo>\r\n        <ChannelLogoOuter>\r\n          <ChannelLogoInner>\r\n            {loading ? (\r\n              <Skeleton color={themes.interfaceSkeleton}  height=\"100%\" />\r\n            ) : (\r\n              <ChannelLogoImg src={`${channelJson.icon}`} />\r\n            )}\r\n          </ChannelLogoInner>\r\n        </ChannelLogoOuter>\r\n      </ChannelLogo>\r\n\r\n      <ChannelInfo>\r\n        <ChannelTitle>\r\n          {loading ? (\r\n            <Skeleton color={themes.interfaceSkeleton} width=\"50%\" height={24} />\r\n          ) : (\r\n            <ChannelTitleLink\r\n              href={channelJson.url}\r\n              target=\"_blank\"\r\n              rel=\"nofollow\"\r\n            >\r\n              <Span>\r\n                {channelJson.name}\r\n                {isVerified && (\r\n                  <Span \r\n                    margin=\"0px 5px\"\r\n                  >\r\n                  <GoVerified size={18} color={themes.viewChannelVerifiedBadge} />\r\n                  </Span>\r\n                )}\r\n              </Span>\r\n            </ChannelTitleLink>\r\n          )}\r\n        </ChannelTitle>\r\n\r\n        <ChannelDesc>\r\n          {loading ? (\r\n            <>\r\n              <SkeletonWrapper atH={5} atW={100}>\r\n                <Skeleton color={themes.interfaceSkeleton} width=\"100%\" height={5} />\r\n              </SkeletonWrapper>\r\n\r\n              <SkeletonWrapper atH={5} atW={100}>\r\n                <Skeleton color={themes.interfaceSkeleton} width=\"100%\" height={5} />\r\n              </SkeletonWrapper>\r\n\r\n              <SkeletonWrapper atH={5} atW={100}>\r\n                <Skeleton color={themes.interfaceSkeleton} width=\"40%\" height={5} />\r\n              </SkeletonWrapper>\r\n            </>\r\n          ) : (\r\n            <ChannelDescLabel>{channelJson.info}</ChannelDescLabel>\r\n          )}\r\n        </ChannelDesc>\r\n\r\n        <ChannelMeta>\r\n          {loading ? (\r\n            <>\r\n              <SkeletonWrapper atH={10} atW={30} marginBottom=\"0\">\r\n                <Skeleton color={themes.interfaceSkeleton} />\r\n              </SkeletonWrapper>\r\n            </>\r\n          ) : (\r\n            <ItemH\r\n              align=\"center\"\r\n              justify=\"flex-start\"\r\n              margin=\"0px -5px\"\r\n            >\r\n              <MetaInfoDisplayer\r\n                externalIcon={<IoMdPeople size={20} color={themes.viewChannelSecondaryIcon} />}\r\n                internalIcon={null}\r\n                text={memberCount}\r\n                bgColor={themes.viewChannelSecondaryBG}\r\n              />\r\n\r\n              <MetaInfoDisplayer\r\n                externalIcon={<FaRegAddressCard size={20} color={themes.viewChannelSecondaryIcon} />}\r\n                internalIcon={<AiOutlineShareAlt />}\r\n                text={formatAddress(copyText)}\r\n                bgColor={themes.viewChannelSecondaryBG}\r\n                onClick={() => {\r\n                  copyToClipboard(channelJson.addr);\r\n                  setCopyText(\"copied\");\r\n                }}\r\n                onMouseEnter={() => {\r\n                  setCopyText(\"click to copy\");\r\n                }}\r\n                onMouseLeave={() => {\r\n                  setCopyText(channelJson.addr);\r\n                }}\r\n              />\r\n\r\n              {isChannelTutorialized(channelObject.addr) && \r\n                <ChannelTutorial \r\n                  addr={channelObject.addr}\r\n                  bgColor={themes.viewChannelSecondaryBG}\r\n                  loadTeaser={loadTeaser}\r\n                  playTeaser={playTeaser}\r\n                />\r\n              }\r\n                  \r\n              {verifierDetails && (\r\n                <Subscribers>\r\n                  <VerifiedBy>Verified by:</VerifiedBy>\r\n                  <VerifierIcon src={verifierDetails.icon} />\r\n                  <VerifierName>{verifierDetails.name}</VerifierName>\r\n                </Subscribers>\r\n              )}\r\n\r\n            </ItemH>\r\n          )}\r\n        </ChannelMeta>\r\n      </ChannelInfo>\r\n      {!!account && !!library && (\r\n        <>\r\n          <LineBreak />\r\n          <ChannelActions>\r\n            {loading && (\r\n              <SkeletonButton>\r\n                <Skeleton color={themes.interfaceSkeleton} />\r\n              </SkeletonButton>\r\n            )}\r\n            {!loading && isPushAdmin && (\r\n              <SubscribeButton onClick={blockChannel} disabled={bLoading}>\r\n                {bLoading && (\r\n                  <ActionLoader>\r\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\r\n                  </ActionLoader>\r\n                )}\r\n                <ActionTitle hideit={bLoading}>Block channel</ActionTitle>\r\n              </SubscribeButton>\r\n            )}\r\n            {!loading && (isPushAdmin || canVerify) && !isVerified && (\r\n              <SubscribeButton onClick={verifyChannel} disabled={vLoading}>\r\n                {vLoading && (\r\n                  <ActionLoader>\r\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\r\n                  </ActionLoader>\r\n                )}\r\n                <ActionTitle hideit={vLoading}>Verify Channel</ActionTitle>\r\n              </SubscribeButton>\r\n            )}\r\n            {!loading && (isPushAdmin || canUnverify) && isVerified && (\r\n              <UnsubscribeButton onClick={unverifyChannel} disabled={vLoading}>\r\n                {vLoading && (\r\n                  <ActionLoader>\r\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\r\n                  </ActionLoader>\r\n                )}\r\n                <ActionTitle hideit={vLoading}>Unverify Channel</ActionTitle>\r\n              </UnsubscribeButton>\r\n            )}\r\n            {!loading && (!subscribed) && (\r\n              <SubscribeButton onClick={subscribe} disabled={txInProgress} className=\"optin\" >\r\n                {txInProgress && (\r\n                  <ActionLoader>\r\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\r\n                  </ActionLoader>\r\n                )}\r\n                <ActionTitle hideit={txInProgress}>Opt-In</ActionTitle>\r\n              </SubscribeButton>\r\n            )}\r\n            {!loading && subscribed && (\r\n              <>\r\n                {isOwner && <OwnerButton disabled>Owner</OwnerButton>}\r\n                {!isOwner && (\r\n                  <UnsubscribeButton\r\n                    onClick={unsubscribeAction}\r\n                    disabled={txInProgress}\r\n                  >\r\n                    {txInProgress && (\r\n                      <ActionLoader>\r\n                        <Loader\r\n                          type=\"Oval\"\r\n                          color=\"#FFF\"\r\n                          height={16}\r\n                          width={16}\r\n                        />\r\n                      </ActionLoader>\r\n                    )}\r\n                    <ActionTitle hideit={txInProgress}>Opt-Out</ActionTitle>\r\n                  </UnsubscribeButton>\r\n                )}\r\n              </>\r\n            )}\r\n          </ChannelActions>\r\n        </>\r\n      )}\r\n      {toast && (\r\n        <NotificationToast notification={toast} clearToast={clearToast} />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst FlexBox = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst ColumnFlex = styled(FlexBox)`\r\n  flex-direction: column;\r\n`;\r\n// css styles\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  background: ${props => props.theme.mainBg};\r\n  border-radius: 10px;\r\n  border: 1px solid ${props => props.theme.viewChannelOuterBorder};\r\n\r\n  margin: 15px 0px;\r\n  justify-content: center;\r\n  padding: 10px;\r\n\r\n  align-self: stretch;\r\n`;\r\n\r\nconst SkeletonWrapper = styled.div`\r\n  overflow: hidden;\r\n  width: ${(props) => props.atW + \"%\" || \"100%\"};\r\n  height: ${(props) => props.atH}px;\r\n  border-radius: ${(props) => props.borderRadius || 10}px;\r\n  margin-bottom: ${(props) => props.marginBottom || 5}px;\r\n  margin-right: ${(props) => props.marginRight || 0}px;\r\n`;\r\n\r\nconst ChannelLogo = styled.div`\r\n  max-width: 100px;\r\n  min-width: 32px;\r\n  flex: 1;\r\n  margin: 5px;\r\n  padding: 10px;\r\n  border: 2px solid ${props => props.theme.viewChannelIconBorder};\r\n  overflow: hidden;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-self: flex-start;\r\n\r\n`;\r\n\r\nconst ChannelLogoOuter = styled.div`\r\n  padding-top: 100%;\r\n  position: relative;\r\n`;\r\n\r\nconst ChannelLogoInner = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  overflow: hidden;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ChannelLogoImg = styled.img`\r\n  object-fit: contain;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ChannelInfo = styled.div`\r\n  flex: 1;\r\n  margin: 5px 10px;\r\n  min-width: 240px;\r\n  flex-grow: 4;\r\n  flex-direction: column;\r\n  display: flex;\r\n\r\n  @media (max-width: 480px) {\r\n    min-width: 210px;\r\n  }\r\n`;\r\n\r\nconst ChannelTitle = styled(ItemH)`\r\n  padding: 5px 10px 5px 0px;\r\n  justify-content: flex-start;\r\n  margin: 0;\r\n  flex: initial;\r\n  align-items: center;\r\n`;\r\n\r\nconst ChannelTitleLink = styled.a`\r\n  text-decoration: none;\r\n  display: flex;\r\n  flex: 1;\r\n  align-item: center;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n\r\n  & > Span {\r\n    font-weight: 600;\r\n    color: ${props => props.theme.viewChannelLink};\r\n    font-size: 20px;\r\n  }\r\n\r\n  & > Span > Span {\r\n    vertical-align: middle;\r\n  }\r\n\r\n`;\r\n\r\nconst VerifiedBy = styled.span`\r\n  color: #ec008c;\r\n  font-size: 16px;\r\n  line-height: 20px;\r\n  letter-spacing: 0.05em;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst VerifierIcon = styled.img`\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  margin-left: 6px;\r\n  margin-right: 4px;\r\n`;\r\n\r\nconst VerifierName = styled.span`\r\n  font-weight: 400;\r\n  color: ${props => props.theme.color};\r\n  font-size: 16px;\r\n  letter-spacing: 0em;\r\n`;\r\n\r\nconst ChannelDesc = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  font-size: 14px;\r\n  color: rgba(0, 0, 0, 0.75);\r\n  padding: 5px 0px 10px 0px;\r\n  font-weight: 400;\r\n  flex-direction: column;\r\n  color: ${props => props.theme.color};\r\n\r\n`;\r\n\r\nconst ChannelDescLabel = styled.label`\r\n  flex: 1;\r\n`;\r\n\r\nconst ChannelMeta = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n  padding: 5px 0px;\r\n  font-size: 13px;\r\n`;\r\n\r\nconst ChannelMetaBox = styled.label`\r\n  margin: 0px 5px;\r\n  color: #fff; \r\n  font-weight: 600;\r\n  padding: 5px 10px;\r\n  display: flex;\r\n  border-radius: 10px;\r\n  font-size: 11px;\r\n  gap: 3px;\r\n`;\r\n\r\nconst Subscribers = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst SubscribersCount = styled(ChannelMetaBox)`\r\n  background: ${props => props.theme.viewChannelSecondaryBG};\r\n  transition: 300ms;\r\n`;\r\n\r\nconst Pool = styled.div`\r\n  margin: 0px 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst PoolShare = styled(ChannelMetaBox)`\r\n  background: #674c9f;\r\n`;\r\n\r\nconst LineBreak = styled.div`\r\n  display: none;\r\n  flex-basis: 100%;\r\n  height: 0;\r\n\r\n  @media ${Device.tablet} {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst ChannelActions = styled.div`\r\n  margin: 5px;\r\n  flex-grow: 1;\r\n  // max-width: 250px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  // justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ChannelActionButton = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  ${(props) =>\r\n    props.disabled &&\r\n    css`\r\n      &:hover {\r\n        opacity: 1;\r\n        cursor: default;\r\n        pointer: default;\r\n      }\r\n      &:active {\r\n        opacity: 1;\r\n        cursor: default;\r\n        pointer: default;\r\n      }\r\n    `}\r\n`;\r\n\r\nconst ActionTitle = styled.span`\r\n  ${(props) =>\r\n    props.hideit &&\r\n    css`\r\n      visibility: hidden;\r\n    `};\r\n`;\r\n\r\nconst ActionLoader = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst SkeletonButton = styled.div`\r\n  border: 0;\r\n  outline: 0;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 10px;\r\n  border-radius: 5px;\r\n  flex: 1;\r\n`;\r\n\r\nconst SubscribeButton = styled(ChannelActionButton)`\r\n  background: #e20880;\r\n  min-width: 80px;\r\n`;\r\n\r\nconst UnsubscribeButton = styled(ChannelActionButton)`\r\n  background: #674c9f;\r\n  min-width: 80px;\r\n`;\r\n\r\nconst OwnerButton = styled(ChannelActionButton)`\r\n  background: #35c5f3;\r\n`;\r\n\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`;\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`;\r\n\r\n// Export Default\r\nexport default ViewChannelItem;\r\n","import React from \"react\";\r\n\r\nimport { useTheme } from 'styled-components';\r\nimport { Item, ItemH, Span, Anchor} from 'components/SharedStyling';\r\n\r\nimport { FaGasPump } from 'react-icons/fa';\r\n\r\n// Faucet URLs\r\nfunction Faucets() {\r\n  const themes = useTheme();\r\n\r\n  // render\r\n  return (\r\n    <ItemH\r\n      self=\"flex-end\"\r\n      flex=\"initial\"\r\n      bg={`${themes.faucetBg}`}\r\n      radius=\"8px\"\r\n      padding=\"30px 10px 10px 10px\"\r\n      margin=\"10px\"\r\n      border={`1px solid ${themes.faucetBorder}`}\r\n      overflow=\"hidden\"\r\n      align=\"center\"\r\n    >\r\n      <Span\r\n        pos=\"absolute\"\r\n        top=\"10px\"\r\n        right=\"0px\"\r\n        padding=\"5px 10px\"\r\n        bg={`${themes.faucetHeader}`}\r\n        color=\"#fff\"\r\n        size=\"12px\"\r\n        weight=\"600\"\r\n      >\r\n        Get Free Kovan Ether\r\n      </Span>\r\n\r\n      <Item margin=\"5px\">\r\n        <Anchor\r\n          direction=\"column\"\r\n          href=\"https://faucet.metamask.io/\"\r\n          target=\"_blank\"\r\n          rel=\"nofollow\"\r\n        >\r\n          <FaGasPump size={30} color={`${themes.faucetIcon}`}/>\r\n          <Span\r\n            bg=\"#000\"\r\n            color=\"#fff\"\r\n            size=\"10px\"\r\n            weight=\"600\"\r\n            spacing=\"0.1em\"\r\n            textAlign=\"center\"\r\n            padding=\"5px 10px\"\r\n            margin=\"10px 0px 0px 0px\"\r\n            textTransform=\"uppercase\"\r\n            radius=\"8px\"\r\n          >\r\n            Metamask Faucet\r\n          </Span>\r\n        </Anchor>\r\n      </Item>\r\n      <Item margin=\"5px\">\r\n        <Anchor\r\n          direction=\"column\"\r\n          href=\"https://gitter.im/kovan-testnet/faucet\"\r\n          target=\"_blank\"\r\n          rel=\"nofollow\"\r\n        >\r\n          <FaGasPump size={30} color={`${themes.faucetIcon}`}/>\r\n          <Span\r\n            bg=\"#000\"\r\n            color=\"#fff\"\r\n            size=\"10px\"\r\n            weight=\"600\"\r\n            spacing=\"0.1em\"\r\n            textAlign=\"center\"\r\n            padding=\"5px 10px\"\r\n            margin=\"10px 0px 0px 0px\"\r\n            textTransform=\"uppercase\"\r\n            radius=\"8px\"\r\n          >\r\n            Faucet Kovan\r\n          </Span>\r\n        </Anchor>\r\n      </Item>\r\n\r\n    </ItemH>\r\n  );\r\n}\r\n\r\n// Export Default\r\nexport default Faucets;\r\n","import React, {useState} from \"react\";\r\nimport styled, { useTheme } from \"styled-components\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { postReq } from \"api\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nimport { Item, ItemH } from \"components/SharedStyling\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\n\r\nimport UtilityHelper from 'helpers/UtilityHelper';\r\n\r\nimport DisplayNotice from \"components/DisplayNotice\";\r\nimport ViewChannelItem from \"components/ViewChannelItem\";\r\nimport Faucets from \"components/Faucets\";\r\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\r\nimport { setChannelMeta, incrementPage } from \"redux/slices/channelSlice\";\r\n\r\nimport {ThemeProvider} from \"styled-components\";\r\n\r\n\r\nconst CHANNELS_PER_PAGE = 10; //pagination parameter which indicates how many channels to return over one iteration\r\nconst SEARCH_TRIAL_LIMIT = 5; //ONLY TRY SEARCHING 5 TIMES BEFORE GIVING UP\r\nconst DEBOUNCE_TIMEOUT = 500; //time in millisecond which we want to wait for then to finish typing\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/;\r\nconst SEARCH_DELAY = 1500;\r\n\r\n// Create Header\r\nfunction ViewChannels({ loadTeaser, playTeaser }) {\r\n  const themes = useTheme();\r\n  const dispatch = useDispatch();\r\n  const { account, chainId } = useWeb3React();\r\n  const { channels, page, ZERO_ADDRESS } = useSelector((state: any) => state.channels);\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [moreLoading, setMoreLoading] = React.useState(false);\r\n  const [search, setSearch] = React.useState(\"\");\r\n  const [channelToShow, setChannelToShow] = React.useState([]);\r\n  const [loadingChannel, setLoadingChannel] = React.useState(false);\r\n  const [trialCount, setTrialCount] = React.useState(0);\r\n\r\n  const channelsVisited = page * CHANNELS_PER_PAGE;\r\n\r\n  // fetch channel data if we are just getting to this pae\r\n  React.useEffect(() => {\r\n    setLoading(!channels.length); //if there are no channels initially then, set the loader\r\n    fetchInitialsChannelMeta();\r\n  }, [account, chainId]);\r\n\r\n  // to update a page\r\n  const updateCurrentPage = () => {\r\n    if (loading || moreLoading) return;\r\n    // fetch more channel information\r\n    setMoreLoading(true);\r\n    dispatch(incrementPage());\r\n    loadMoreChannelMeta(page + 1); //load the meta for the next page\r\n  };\r\n\r\n  // to fetch initial channels and logged in user data\r\n  const fetchInitialsChannelMeta = async () => {\r\n    // fetch the meta of the first `CHANNELS_PER_PAGE` channels\r\n    const channelsMeta = await ChannelsDataStore.instance.getChannelFromApi(\r\n      channelsVisited,\r\n      CHANNELS_PER_PAGE\r\n    );\r\n    dispatch(incrementPage())\r\n    if (!channels.length) {\r\n      dispatch(setChannelMeta(channelsMeta));\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // load more channels when we get to the bottom of the page\r\n  const loadMoreChannelMeta = async (newPageNumber: any) => {\r\n    const startingPoint = newPageNumber * CHANNELS_PER_PAGE;\r\n    const moreChannels = await ChannelsDataStore.instance.getChannelFromApi(\r\n      startingPoint,\r\n      CHANNELS_PER_PAGE\r\n    );\r\n    dispatch(setChannelMeta([...channels, ...moreChannels]));\r\n    setMoreLoading(false);\r\n  };\r\n\r\n  // conditionally display the waymore bar which loads more information\r\n  // load more channels when we are at the bottom of the page\r\n  const showWayPoint = (index: any) => {\r\n    return Number(index) === channels.length - 1;\r\n  };\r\n\r\n  // Search Channels Feature\r\n  React.useEffect(() => {\r\n    if (!channels.length) return;\r\n    setChannelToShow(channels);\r\n  }, [channels]);\r\n\r\n  function searchForChannel() {\r\n    if (loadingChannel) return; //if we are already loading, do nothing\r\n    if (search) {\r\n      setLoadingChannel(true); //begin loading here\r\n      setChannelToShow([]); //maybe remove later\r\n      postReq(\"/channels/search\", {\r\n        query: search,\r\n        op: \"read\",\r\n        page : 1,\r\n        pageSize : 1000\r\n      })\r\n        .then((data) => {\r\n          setChannelToShow(data.data.channels || []);\r\n          setLoadingChannel(false);\r\n        })\r\n        .catch(() => {\r\n          // if there's an error search for three times before giving up and displaying the normal channels\r\n          if (trialCount < SEARCH_TRIAL_LIMIT) {\r\n            setTrialCount((t) => t + 1);\r\n            searchForChannel(); //if theres an error, recursively search\r\n          } else {\r\n            setChannelToShow(channels);\r\n            setLoadingChannel(false);\r\n          }\r\n        });\r\n    } else {\r\n      // if no search item, then set it back to the channels\r\n      setLoadingChannel(false);\r\n      setChannelToShow(channels);\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    // this is done so that we only make a request after the user stops typing\r\n    const timeout = setTimeout(searchForChannel, DEBOUNCE_TIMEOUT);\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [search]);\r\n\r\n\r\n\r\n  React.useEffect(() => {\r\n    const parsedChannel = window.location.href.toString().slice(window.location.href.toString().length - 42)\r\n    if(!ADDRESS_REGEX.test(parsedChannel)) return;\r\n    setTimeout(() => {\r\n      setSearch(parsedChannel);\r\n    }, SEARCH_DELAY)\r\n  }, [])\r\n  \r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n      <Container>\r\n        <ScrollItem>\r\n          {!loading && (\r\n            <ItemH\r\n              padding=\"10px 0px\"\r\n              flex=\"initial\"\r\n            >\r\n              <SearchContainer\r\n                flex=\"1\"\r\n                margin=\"10px\"\r\n              >\r\n                <SearchBar\r\n                  type=\"text\"\r\n                  value={search}\r\n                  onChange={(e: any) => setSearch(e.target.value)}\r\n                  className=\"input\"\r\n                  placeholder=\"Search By Name/Address\"\r\n                />\r\n                <Item\r\n                  position=\"absolute\"\r\n                  top=\"0\"\r\n                  bottom=\"0\"\r\n                  left=\"12px\"\r\n\r\n                >\r\n                  <AiOutlineSearch size={20} style={{color: themes.viewChannelSearchIcon}} />\r\n                </Item>\r\n              </SearchContainer>\r\n\r\n              {!UtilityHelper.isMainnet(chainId) && \r\n                <Faucets /> \r\n              }\r\n              \r\n            </ItemH>\r\n          )}\r\n\r\n          {/* render all channels depending on if we are searching or not */}\r\n          {(search ? channelToShow : channels).map(\r\n            (channel: any, index: any) =>\r\n              channel &&\r\n              channel.addr !== ZERO_ADDRESS && (\r\n                <>\r\n                  <ViewChannelItems key={channel.addr} self=\"stretch\">\r\n                    <ViewChannelItem channelObjectProp={channel} loadTeaser={loadTeaser} playTeaser={playTeaser} />\r\n                  </ViewChannelItems>\r\n\r\n                  {showWayPoint(index) && (\r\n                    <Waypoint onEnter={updateCurrentPage} />\r\n                  )}\r\n                </>\r\n              )\r\n          )}\r\n          {/* render all channels depending on if we are searching or not */}\r\n\r\n          {/* if we are in search mode and there are no channels then display error message */}\r\n          {search && !channelToShow?.length && !loadingChannel && (\r\n            <CenteredContainerInfo>\r\n              <DisplayNotice\r\n                title=\"No channels match your query, please search for another name/address\"\r\n                theme=\"third\"\r\n              />\r\n            </CenteredContainerInfo>\r\n          )}\r\n\r\n          {/* display loader if pagination is loading next batch of channelTotalList */}\r\n          {((moreLoading && channels.length) ||\r\n            loading ||\r\n            loadingChannel) && (\r\n            <CenterContainer>\r\n              <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\r\n            </CenterContainer>\r\n          )}\r\n        </ScrollItem>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst SearchBar = styled.input`\r\n  width: 100%;\r\n  padding-right: 50px;\r\n  height: 60px;\r\n  padding-left: 40px;\r\n\r\n  background: ${props => props.theme.viewChannelSearchBg};\r\n  border: 1px solid ${props => props.theme.viewChannelSearchBorder} !important;\r\n  color: ${props => props.theme.viewChannelSearchText};\r\n  box-sizing: border-box;\r\n  border-radius: 10px;\r\n  text-transform: capitalize;\r\n  font-size: 16px;\r\n\r\n  input[type=\"reset\"] {\r\n    display: none;\r\n  }\r\n  &::placeholder {\r\n    letter-spacing: 0.15em;\r\n  }\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:focus {\r\n    border: 1px solid #ec008c;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  max-height: 92vh;\r\n`;\r\n\r\nconst ContainerInfo = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst ViewChannelItems = styled.div`\r\n  align-self: stretch;\r\n`\r\n\r\nconst CenteredContainerInfo = styled.div`\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CenterContainer = styled(ContainerInfo)`\r\n  width: fit-content;\r\n  align-self: center;\r\n`;\r\n\r\nconst ScrollItem = styled(Item)`\r\n  display: flex;\r\n  align-self: stretch;\r\n  align-items: stretch;\r\n  justify-content: stretch;\r\n  flex-wrap: nowrap;\r\n  \r\n  flex: 1;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n\r\n  &::-webkit-scrollbar-track {\r\n    background-color: ${props => props.theme.scrollBg};\r\n    border-radius: 10px;\r\n  }\r\n\r\n  &::-webkit-scrollbar {\r\n    background-color: ${props => props.theme.scrollBg};\r\n    width: 6px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    border-radius: 10px;\r\n    background-image: -webkit-gradient(linear,\r\n                       left top,\r\n                       left bottom,\r\n                       color-stop(0.44, #35c5f3),\r\n                       color-stop(0.72, #35b0f3),\r\n                       color-stop(0.86, #35a1f3));\r\n  }\r\n`;\r\n\r\nconst SearchContainer = styled(Item)`\r\n  min-width: 320px;\r\n\r\n  @media (max-width: 768px) {\r\n    min-width: 320px;\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    min-width: 210px;\r\n  }\r\n`;\r\n\r\n// Export Default\r\nexport default ViewChannels;","import React from 'react'\r\n\r\nexport const CloseIcon = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.243\" height=\"10.243\" viewBox=\"0 0 16.243 16.243\">\r\n        <g id=\"Group_4723\" data-name=\"Group 4723\" transform=\"translate(2.121 2.121)\">\r\n            <g id=\"Group_4716\" data-name=\"Group 4716\" transform=\"translate(0)\">\r\n            <line id=\"Line_1079\" data-name=\"Line 1079\" x2=\"16.97\" transform=\"translate(0 12) rotate(-45)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"3\"/>\r\n            <line id=\"Line_1080\" data-name=\"Line 1080\" y2=\"16.97\" transform=\"translate(0 0) rotate(-45)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"3\"/>\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);\r\n","  import React from \"react\";\r\n  import { toast } from \"react-toastify\";\r\n  import Dropdown from \"react-dropdown\";\r\n  import { FiLink } from \"react-icons/fi\";\r\n  import Loader from \"react-loader-spinner\";\r\n  import styled , {useTheme} from \"styled-components\";\r\n  import { BsFillImageFill } from \"react-icons/bs\";\r\n  import { useSelector } from \"react-redux\";\r\n  import { postReq } from \"api\";\r\n  import {\r\n  Section,\r\n  Content,\r\n  Item,\r\n  ItemH,\r\n  H2,\r\n  H3,\r\n  Span,\r\n  Button,\r\n  FormSubmision,\r\n  Input,\r\n  TextField,\r\n} from \"components/SharedStyling\";\r\n\r\nimport \"react-dropdown/style.css\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\n\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nimport { CloseIcon } from \"assets/icons\";\r\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\r\nimport CryptoHelper from \"helpers/CryptoHelper\";\r\nconst ethers = require(\"ethers\");\r\n\r\n// Set Notification Form Type | 0 is reserved for protocol storage\r\nconst NFTypes = [\r\n  { value: \"1\", label: \"Broadcast (IPFS Payload)\" },\r\n  // { value: \"2\", label: \"Secret (IPFS Payload)\" },\r\n  { value: \"3\", label: \"Targetted (IPFS Payload)\" },\r\n  { value: \"4\", label: \"Subset (IPFS Payload)\" },\r\n  // { value: \"5\", label: \"Offchain (Push)\" },\r\n];\r\nconst LIMITER_KEYS = [\"Enter\", \",\"];\r\n\r\n// Create Header\r\nfunction SendNotifications() {\r\n  const theme = useTheme();\r\n  const { account, library, chainId } = useWeb3React();\r\n  const { epnsCommWriteProvider, epnsCommReadProvider } = useSelector(\r\n    (state: any) => state.contracts\r\n  );\r\n  const { channelDetails, delegatees } = useSelector(\r\n    (state: any) => state.admin\r\n  );\r\n  const { CHANNNEL_DEACTIVATED_STATE } = useSelector(\r\n    (state: any) => state.channels\r\n  );\r\n\r\n  const [nfProcessing, setNFProcessing] = React.useState(0);\r\n  const [channelAddress, setChannelAddress] = React.useState(\"\");\r\n  const [nfRecipient, setNFRecipient] = React.useState(\"\");\r\n  const [multipleRecipients, setMultipleRecipients] = React.useState([]);\r\n  const [tempRecipeint, setTempRecipient] = React.useState(\"\"); // to temporarily hold the address of one recipient who would be entered into the recipeints array above.\r\n  const [nfType, setNFType] = React.useState(\"\");\r\n  const [nfSub, setNFSub] = React.useState(\"\");\r\n  const [nfSubEnabled, setNFSubEnabled] = React.useState(false);\r\n  const [nfMsg, setNFMsg] = React.useState(\"\");\r\n  const [nfCTA, setNFCTA] = React.useState(\"\");\r\n  const [nfCTAEnabled, setNFCTAEnabled] = React.useState(false);\r\n  const [nfMedia, setNFMedia] = React.useState(\"\");\r\n  const [nfMediaEnabled, setNFMediaEnabled] = React.useState(false);\r\n  const [nfInfo, setNFInfo] = React.useState(\"\");\r\n  const [delegateeOptions, setDelegateeOptions] = React.useState([]);\r\n\r\n  const isChannelDeactivated = channelDetails\r\n      ? channelDetails.channelState === CHANNNEL_DEACTIVATED_STATE\r\n      : false;\r\n  const cannotDisplayDelegatees =\r\n      (delegatees.length === 1 && delegatees[0].address === account) ||\r\n      !delegatees.length; //do not display delegatees dropdown if you are the only delegatee to yourself or there are no delegatess\r\n  // construct a list of channel delegators\r\n  React.useEffect(() => {\r\n      if (!account) return;\r\n      if (!delegatees || !delegatees.length) {\r\n          setChannelAddress(account);\r\n      } else {\r\n          setDelegateeOptions(\r\n              delegatees.map((oneDelegatee: any) => ({\r\n                  value: oneDelegatee.address,\r\n                  label: (\r\n                      <CustomDropdownItem>\r\n                          <img src={oneDelegatee.icon} alt=\"\" />\r\n                          <div>{oneDelegatee.name}</div>\r\n                      </CustomDropdownItem>\r\n                  ),\r\n              }))\r\n          );\r\n          // default the channel address to the first one on the list which should be that of the user if they have a channel\r\n          setChannelAddress(delegatees[0].address);\r\n      }\r\n  }, [delegatees, account]);\r\n\r\n  // on change for the subset type notifications input\r\n  const handleSubsetInputChange = (e: any) => {\r\n      // if the user enters in a comma or an enter then separate the addresses\r\n      if (LIMITER_KEYS.includes(e.key)) {\r\n          e.preventDefault();\r\n          // if they enter a limiter key, then add the temp value to the recipeints list\r\n          // then clear the value of the temp text\r\n          setMultipleRecipients((oldRecipients) =>\r\n              // use this combination to remove duplicates\r\n              Array.from(new Set([...oldRecipients, tempRecipeint]))\r\n          );\r\n          const listRecipients = Array.from(\r\n              new Set([...multipleRecipients, tempRecipeint])\r\n          );\r\n          setNFRecipient(listRecipients.join());\r\n          setTempRecipient(\"\");\r\n      }\r\n  };\r\n  // when to remove a subscriber\r\n  const removeRecipient = (recipientAddress: any) => {\r\n      const filteredRecipients = multipleRecipients.filter(\r\n          (rec) => rec !== recipientAddress\r\n      );\r\n      setNFRecipient(filteredRecipients.join());\r\n      setMultipleRecipients(filteredRecipients);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n      const broadcastIds = [\"1\"]; //id's of notifications which qualify as broadcast\r\n      setMultipleRecipients([]); //reset array when type changes/\r\n      if (broadcastIds.includes(nfType)) {\r\n          // This is broadcast, nfRecipient will be the same\r\n          setNFRecipient(account);\r\n      } else {\r\n          setNFRecipient(\"\");\r\n      }\r\n  }, [nfType]);\r\n\r\n  // validate the body being sent, return true if no errors\r\n  const bodyValidated = (notificationToast) => {\r\n      let validated = true;\r\n      // if we are sending for a subset and there\r\n      if (nfType === \"4\" && multipleRecipients.length < 2) {\r\n          toast.update(notificationToast, {\r\n              render: \"Please enter at least two recipients in order to use subset notifications type\",\r\n              type: toast.TYPE.ERROR,\r\n              autoClose: 5000,\r\n          });\r\n          validated = false;\r\n      }\r\n      return validated;\r\n  };\r\n\r\n  const handleSendMessage = async (e) => {\r\n      // Check everything in order\r\n      e.preventDefault();\r\n\r\n      // Toastify\r\n      let notificationToast = toast.dark(\r\n          <LoaderToast msg=\"Preparing Notification\" color=\"#fff\" />,\r\n          {\r\n              position: \"bottom-right\",\r\n              autoClose: false,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n          }\r\n      );\r\n\r\n      // do some validation\r\n      if (!bodyValidated(notificationToast)) return;\r\n\r\n      // Set to processing\r\n      setNFProcessing(1);\r\n\r\n      // Form signer and contract connection\r\n      const communicatorContract = epnsCommWriteProvider;\r\n      // define the epns comms contracts\r\n\r\n      // For payload basic\r\n      let nsub = nfSub;\r\n      let nmsg = nfMsg;\r\n      let secretEncrypted;\r\n\r\n      let asub = nfSub;\r\n      let amsg = nfMsg;\r\n      let acta = nfCTA;\r\n      let aimg = nfMedia;\r\n\r\n      // Decide type and storage\r\n      switch (nfType) {\r\n          // Broadcast Notification\r\n          case \"1\":\r\n              break;\r\n\r\n          // Targetted Notification\r\n          case \"3\":\r\n              break;\r\n\r\n          // Secret Notification\r\n          case \"2\":\r\n              // Create secret\r\n              let secret = CryptoHelper.makeid(14);\r\n\r\n              // Encrypt payload and change sub and nfMsg in notification\r\n              nsub = \"You have a secret message!\";\r\n              nmsg = \"Open the app to see your secret message!\";\r\n\r\n              // get public key from EPNSCoreHelper\r\n              let k = await EPNSCoreHelper.getPublicKey(\r\n                  nfRecipient,\r\n                  epnsCommWriteProvider\r\n              );\r\n              if (k == null) {\r\n                  // No public key, can't encrypt\r\n                  setNFInfo(\r\n                      \"Public Key Registration is required for encryption!\"\r\n                  );\r\n                  setNFProcessing(2);\r\n\r\n                  toast.update(notificationToast, {\r\n                      render: \"Unable to encrypt for this user, no public key registered\",\r\n                      type: toast.TYPE.ERROR,\r\n                      autoClose: 5000,\r\n                  });\r\n\r\n                  return;\r\n              }\r\n\r\n              let publickey = k.toString().substring(2);\r\n              //console.log(\"This is public Key: \" + publickey);\r\n\r\n              secretEncrypted = await CryptoHelper.encryptWithECIES(\r\n                  secret,\r\n                  publickey\r\n              );\r\n              asub = CryptoHelper.encryptWithAES(nfSub, secret);\r\n              amsg = CryptoHelper.encryptWithAES(nfMsg, secret);\r\n              acta = CryptoHelper.encryptWithAES(nfCTA, secret);\r\n              aimg = CryptoHelper.encryptWithAES(nfMedia, secret);\r\n              break;\r\n\r\n          // Targetted Notification\r\n          case \"4\":\r\n              break;\r\n\r\n          // Offchain Notification\r\n          case \"5\":\r\n              console.log(\r\n                  nsub,\r\n                  nmsg,\r\n                  nfType,\r\n                  asub,\r\n                  amsg,\r\n                  acta,\r\n                  aimg,\r\n                  \"case 5\"\r\n              );\r\n\r\n              break;\r\n          default:\r\n              break;\r\n      }\r\n\r\n      // Handle Storage\r\n      let storagePointer = \"\";\r\n\r\n      // IPFS PAYLOAD --> 1, 2, 3\r\n      if (\r\n          nfType === \"1\" ||\r\n          nfType === \"2\" ||\r\n          nfType === \"3\" ||\r\n          nfType === \"4\"\r\n      ) {\r\n          // Checks for optional fields\r\n          if (nfSubEnabled && isEmpty(nfSub)) {\r\n              setNFInfo(\"Enter Subject or Disable it\");\r\n              setNFProcessing(2);\r\n\r\n              toast.update(notificationToast, {\r\n                  render: \"Incorrect Payload\",\r\n                  type: toast.TYPE.ERROR,\r\n                  autoClose: 5000,\r\n              });\r\n\r\n              return;\r\n          }\r\n\r\n          if (nfMediaEnabled && isEmpty(nfMedia)) {\r\n              setNFInfo(\"Enter Media URL or Disable it\");\r\n              setNFProcessing(2);\r\n\r\n              toast.update(notificationToast, {\r\n                  render: \"Incorrect Payload\",\r\n                  type: toast.TYPE.ERROR,\r\n                  autoClose: 5000,\r\n              });\r\n              return;\r\n          }\r\n\r\n          if (nfCTAEnabled && isEmpty(nfCTA)) {\r\n              setNFInfo(\"Enter Call to Action Link or Disable it\");\r\n              setNFProcessing(2);\r\n\r\n              toast.update(notificationToast, {\r\n                  render: \"Incorrect Payload\",\r\n                  type: toast.TYPE.ERROR,\r\n                  autoClose: 5000,\r\n              });\r\n              return;\r\n          }\r\n\r\n          if (isEmpty(nfMsg)) {\r\n              setNFInfo(\"Message cannot be empty\");\r\n              setNFProcessing(2);\r\n\r\n              toast.update(notificationToast, {\r\n                  render: \"Incorrect Payload\",\r\n                  type: toast.TYPE.ERROR,\r\n                  autoClose: 5000,\r\n              });\r\n              return;\r\n          }\r\n\r\n          const jsonPayload = {\r\n              notification: {\r\n                  title: nsub,\r\n                  body: nmsg,\r\n              },\r\n              data: {\r\n                  type: nfType,\r\n                  secret: secretEncrypted,\r\n                  asub: asub,\r\n                  amsg: amsg,\r\n                  acta: acta,\r\n                  aimg: aimg,\r\n              },\r\n          };\r\n\r\n          // if we are sending a subset type, then include recipients\r\n          if (nfType === \"4\") {\r\n              jsonPayload[\"recipients\"] = [...multipleRecipients];\r\n          }\r\n\r\n          const input = JSON.stringify(jsonPayload);\r\n          console.log(input);\r\n\r\n          console.log(\"Uploding to IPFS...\");\r\n          toast.update(notificationToast, {\r\n              render: \"Preparing Payload for upload\",\r\n          });\r\n\r\n          const ipfs = require(\"nano-ipfs-store\").at(\r\n              \"https://ipfs.infura.io:5001\"\r\n          );\r\n\r\n          try {\r\n              storagePointer = await ipfs.add(input);\r\n          } catch (e) {\r\n              setNFProcessing(2);\r\n              setNFInfo(\"IPFS Upload Error\");\r\n          }\r\n\r\n          console.log(\"IPFS cid: %o\", storagePointer);\r\n      }\r\n      if (\r\n          nfType === \"1\" ||\r\n          nfType === \"2\" ||\r\n          nfType === \"3\" ||\r\n          nfType === \"4\"\r\n      ) {\r\n          // Prepare Identity and send notification\r\n          const identity = nfType + \"+\" + storagePointer;\r\n          const identityBytes = ethers.utils.toUtf8Bytes(identity);\r\n          console.log({\r\n              identityBytes,\r\n          });\r\n          const EPNS_DOMAIN = {\r\n              name: \"EPNS COMM V1\",\r\n              chainId: chainId,\r\n              verifyingContract: epnsCommReadProvider.address,\r\n          };\r\n\r\n          const type = {\r\n              Data: [\r\n                  { name: \"acta\", type: \"string\" },\r\n                  { name: \"aimg\", type: \"string\" },\r\n                  { name: \"amsg\", type: \"string\" },\r\n                  { name: \"asub\", type: \"string\" },\r\n                  { name: \"type\", type: \"string\" },\r\n                  { name: \"secret\", type: \"string\" },\r\n              ],\r\n          };\r\n\r\n          const payload = {\r\n              data: {\r\n                  acta: acta,\r\n                  aimg: aimg,\r\n                  amsg: amsg,\r\n                  asub: asub,\r\n                  type: nfType,\r\n                  secret: \"\",\r\n              },\r\n\r\n              notification: {\r\n                  body: amsg,\r\n                  title: asub,\r\n              },\r\n          };\r\n\r\n          const message = payload.data;\r\n          console.log(payload, \"payload\");\r\n          console.log(\"chainId\", chainId);\r\n          const signature = await library\r\n              .getSigner(account)\r\n              ._signTypedData(EPNS_DOMAIN, type, message);\r\n          console.log(\"case5 signature\", signature);\r\n          try {\r\n              console.log(nfRecipient);\r\n              postReq(\"/payloads/add_manual_payload\", {\r\n                  signature,\r\n                  op: \"write\",\r\n                  chainId: chainId.toString(),\r\n                  channel: channelAddress,\r\n                  recipient: nfRecipient,\r\n                  deployedContract: epnsCommReadProvider.address,\r\n                  payload: payload,\r\n                  type: nfType,\r\n              }).then(async (res) => {\r\n                  toast.update(notificationToast, {\r\n                      render: \"Notification Sent\",\r\n                      type: toast.TYPE.INFO,\r\n                      autoClose: 5000,\r\n                  });\r\n\r\n                  setNFProcessing(2);\r\n                  setNFType(\"\");\r\n                  setNFInfo(\"Offchain Notification Sent\");\r\n\r\n                  toast.update(notificationToast, {\r\n                      render: \"Offchain Notification Sent\",\r\n                      type: toast.TYPE.SUCCESS,\r\n                      autoClose: 5000,\r\n                  });\r\n                  console.log(res);\r\n              });\r\n          } catch (err) {\r\n              setNFInfo(\"Offchain Notification Failed, please try again\");\r\n\r\n              toast.update(notificationToast, {\r\n                  render: \"Offchain Notification Failed: \" + err,\r\n                  type: toast.TYPE.ERROR,\r\n                  autoClose: 5000,\r\n              });\r\n              setNFProcessing(0);\r\n              console.log(err);\r\n          }\r\n\r\n          // var anotherSendTxPromise;\r\n\r\n          // anotherSendTxPromise = communicatorContract.sendNotification(\r\n          //   channelAddress,\r\n          //   nfRecipient,\r\n          //   identityBytes\r\n          // );\r\n\r\n          // console.log(\"Sending Transaction... \");\r\n          // toast.update(notificationToast, {\r\n          //   render: \"Sending Notification...\",\r\n          // });\r\n\r\n          // anotherSendTxPromise\r\n          //   .then(async (tx) => {\r\n          //     console.log(tx);\r\n          //     console.log(\"Transaction Sent!\");\r\n\r\n          //     toast.update(notificationToast, {\r\n          //       render: \"Notification Sent\",\r\n          //       type: toast.TYPE.INFO,\r\n          //       autoClose: 5000,\r\n          //     });\r\n\r\n          //     await tx.wait(1);\r\n          //     console.log(\"Transaction Mined!\");\r\n\r\n          //     setNFProcessing(2);\r\n          //     setNFType(\"\");\r\n          //     setNFInfo(\"Notification Sent\");\r\n\r\n          //     toast.update(notificationToast, {\r\n          //       render: \"Transaction Mined / Notification Sent\",\r\n          //       type: toast.TYPE.SUCCESS,\r\n          //       autoClose: 5000,\r\n          //     });\r\n          //   })\r\n          //   .catch((err) => {\r\n          //     console.log(\"!!!Error handleSendMessage() --> %o\", err);\r\n          //     setNFInfo(\"Transaction Failed, please try again\");\r\n\r\n          //     toast.update(notificationToast, {\r\n          //       render: \"Transacion Failed: \" + err,\r\n          //       type: toast.TYPE.ERROR,\r\n          //       autoClose: 5000,\r\n          //     });\r\n          //     setNFProcessing(0);\r\n          //   });\r\n      }\r\n      if (nfType === \"5\") {\r\n          // const jsonPayload = {\r\n          //   notification: {\r\n          //     title: nsub,\r\n          //     body: nmsg,\r\n          //   },\r\n          //   data: {\r\n          //     type: nfType,\r\n          //     secret: secretEncrypted,\r\n          //     asub: asub,\r\n          //     amsg: amsg,\r\n          //     acta: acta,\r\n          //     aimg: aimg,\r\n          //   },\r\n          // };\r\n\r\n          const EPNS_DOMAIN = {\r\n              name: \"EPNS COMM V1\",\r\n              chainId: chainId,\r\n              verifyingContract: epnsCommReadProvider.address,\r\n          };\r\n\r\n          const type = {\r\n              Data: [\r\n                  { name: \"acta\", type: \"string\" },\r\n                  { name: \"aimg\", type: \"string\" },\r\n                  { name: \"amsg\", type: \"string\" },\r\n                  { name: \"asub\", type: \"string\" },\r\n                  { name: \"type\", type: \"string\" },\r\n                  { name: \"secret\", type: \"string\" },\r\n              ],\r\n          };\r\n\r\n          const payload = {\r\n              data: {\r\n                  acta: acta,\r\n                  aimg: aimg,\r\n                  amsg: amsg,\r\n                  asub: asub,\r\n                  type: nfType,\r\n                  secret: \"\",\r\n              },\r\n\r\n              notification: {\r\n                  body: amsg,\r\n                  title: asub,\r\n              },\r\n          };\r\n\r\n          const message = payload.data;\r\n          console.log(payload, \"payload\");\r\n          console.log(\"chainId\", chainId);\r\n          const signature = await library\r\n              .getSigner(account)\r\n              ._signTypedData(EPNS_DOMAIN, type, message);\r\n          console.log(\"case5 signature\", signature);\r\n          try {\r\n              postReq(\"/payloads/add_manual_payload\", {\r\n                  signature,\r\n                  op: \"write\",\r\n                  chainId: chainId.toString(),\r\n                  channel: channelAddress,\r\n                  recipient: nfRecipient,\r\n                  deployedContract: epnsCommReadProvider.address,\r\n                  payload: payload,\r\n                  type: \"3\",\r\n              }).then(async (res) => {\r\n                  toast.update(notificationToast, {\r\n                      render: \"Notification Sent\",\r\n                      type: toast.TYPE.INFO,\r\n                      autoClose: 5000,\r\n                  });\r\n\r\n                  setNFProcessing(2);\r\n                  setNFType(\"\");\r\n                  setNFInfo(\"Offchain Notification Sent\");\r\n\r\n                  toast.update(notificationToast, {\r\n                      render: \"Offchain Notification Sent\",\r\n                      type: toast.TYPE.SUCCESS,\r\n                      autoClose: 5000,\r\n                  });\r\n                  console.log(res);\r\n              });\r\n          } catch (err) {\r\n              setNFInfo(\"Offchain Notification Failed, please try again\");\r\n\r\n              toast.update(notificationToast, {\r\n                  render: \"Offchain Notification Failed: \" + err,\r\n                  type: toast.TYPE.ERROR,\r\n                  autoClose: 5000,\r\n              });\r\n              setNFProcessing(0);\r\n              console.log(err);\r\n          }\r\n      }\r\n  };\r\n\r\n  const isEmpty = (field: any) => {\r\n      if (field.trim().length == 0) {\r\n          return true;\r\n      }\r\n\r\n      return false;\r\n  };\r\n\r\n  // toast customize\r\n  const LoaderToast = ({ msg, color }) => (\r\n      <Toaster>\r\n          <Loader type=\"Oval\" color={color} height={30} width={30} />\r\n          <ToasterMsg>{msg}</ToasterMsg>\r\n      </Toaster>\r\n  );\r\n\r\n  return (\r\n      <>\r\n          <Section>\r\n              <Content padding=\"10px 20px 20px\">\r\n                  <Item align=\"flex-start\">\r\n                      <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n                          <Span weight=\"200\" style={{color : theme.color}}>Send </Span>\r\n                          <Span\r\n                              bg=\"#674c9f\"\r\n                              color=\"#fff\"\r\n                              weight=\"600\"\r\n                              padding=\"0px 8px\"\r\n                          >\r\n                              Notification\r\n                          </Span>\r\n                      </H2>\r\n                      {!isChannelDeactivated ? (\r\n                          <H3 style={{color : theme.color}}>\r\n                              EPNS supports three types of notifications (for\r\n                              now!). <b>Groups</b>, <b>Subsets</b>, and{\" \"}\r\n                              <b>Targetted</b>\r\n                              {/* and{\" \"} <b>Subsets</b>. */}\r\n                          </H3>\r\n                      ) : (\r\n                          <H3>\r\n                              This channel has been deactivated, please\r\n                              reactivate it!.\r\n                          </H3>\r\n                      )}\r\n                  </Item>\r\n              </Content>\r\n          </Section>\r\n\r\n          {!isChannelDeactivated && (\r\n              <Section>\r\n                  <ModifiedContent>\r\n                      <Item align=\"stretch\">\r\n                          <FormSubmision\r\n                              flex=\"1\"\r\n                              direction=\"column\"\r\n                              margin=\"0px\"\r\n                              justify=\"center\"\r\n                              size=\"1.1rem\"\r\n                              onSubmit={handleSendMessage}\r\n                          >\r\n                              <Item\r\n                                  margin=\"0px 20px\"\r\n                                  flex=\"1\"\r\n                                  self=\"stretch\"\r\n                                  align=\"stretch\"\r\n                              >\r\n                                  {!cannotDisplayDelegatees && (\r\n                                      <Item\r\n                                          flex=\"5\"\r\n                                          justify=\"flex-start\"\r\n                                          align=\"stretch\"\r\n                                          minWidth=\"280px\"\r\n                                      >\r\n                                          <DropdownStyledParentWhite>\r\n                                              <DropdownHeader>\r\n                                                  SEND NOTIFICATION ON BEHALF\r\n                                                  OF\r\n                                              </DropdownHeader>\r\n                                              <DropdownStyledWhite\r\n                                                  options={delegateeOptions}\r\n                                                  onChange={(option: any) => {\r\n                                                      setChannelAddress(\r\n                                                          option.value\r\n                                                      );\r\n                                                  }}\r\n                                                  value={delegateeOptions.find(\r\n                                                      (d) =>\r\n                                                          d.value ==\r\n                                                          channelAddress\r\n                                                  )}\r\n                                              />\r\n                                          </DropdownStyledParentWhite>\r\n                                      </Item>\r\n                                  )}\r\n\r\n                                  <Input\r\n                                      display=\"none\"\r\n                                      value={nfType}\r\n                                      onChange={(e) => {\r\n                                          setNFType(e.target.value);\r\n                                      }}\r\n                                  />\r\n\r\n                                  <Item\r\n                                      flex=\"5\"\r\n                                      justify=\"flex-start\"\r\n                                      align=\"stretch\"\r\n                                      minWidth=\"280px\"\r\n                                  >\r\n                                      <DropdownStyledParent>\r\n                                          <DropdownStyled\r\n                                              options={NFTypes}\r\n                                              onChange={(option) => {\r\n                                                  setNFType(option.value);\r\n                                                  console.log(option);\r\n                                              }}\r\n                                              value={nfType}\r\n                                              placeholder=\"Select Type of Notification to Send\"\r\n                                          />\r\n                                      </DropdownStyledParent>\r\n                                  </Item>\r\n                                  <Input\r\n                                      display=\"none\"\r\n                                      value={nfType}\r\n                                      onChange={(e) => {\r\n                                          setNFType(e.target.value);\r\n                                      }}\r\n                                  />\r\n\r\n                                  {nfType && (\r\n                                      <ItemH\r\n                                          margin=\"0px 15px 15px 15px\"\r\n                                          bg=\"#f1f1f1\"\r\n                                          flex=\"1\"\r\n                                          self=\"stretch\"\r\n                                          justify=\"space-between\"\r\n                                      >\r\n                                          <ItemH\r\n                                              margin=\"15px 10px\"\r\n                                              flex=\"inital\"\r\n                                          >\r\n                                              <Span\r\n                                                  margin=\"0px 10px 0px 0px\"\r\n                                                  weight=\"400\"\r\n                                                  spacing=\"0.1em\"\r\n                                                  textTransform=\"uppercase\"\r\n                                                  size=\"0.8em\"\r\n                                                  bg=\"#e20880\"\r\n                                                  color=\"#fff\"\r\n                                                  padding=\"5px 15px\"\r\n                                                  radius=\"30px\"\r\n                                              >\r\n                                                  Enable Subject\r\n                                              </Span>\r\n                                              <Switch\r\n                                                  color=\"primary\"\r\n                                                  size=\"small\"\r\n                                                  checked={nfSubEnabled}\r\n                                                  onChange={() =>\r\n                                                      setNFSubEnabled(\r\n                                                          !nfSubEnabled\r\n                                                      )\r\n                                                  }\r\n                                              />\r\n                                          </ItemH>\r\n\r\n                                          <ItemH\r\n                                              margin=\"15px 10px\"\r\n                                              flex=\"inital\"\r\n                                          >\r\n                                              <Span\r\n                                                  margin=\"0px 10px 0px 0px\"\r\n                                                  weight=\"400\"\r\n                                                  spacing=\"0.1em\"\r\n                                                  textTransform=\"uppercase\"\r\n                                                  size=\"0.8em\"\r\n                                                  bg=\"#e20880\"\r\n                                                  color=\"#fff\"\r\n                                                  padding=\"5px 15px\"\r\n                                                  radius=\"30px\"\r\n                                              >\r\n                                                  Enable Media\r\n                                              </Span>\r\n                                              <Switch\r\n                                                  color=\"primary\"\r\n                                                  size=\"small\"\r\n                                                  checked={nfMediaEnabled}\r\n                                                  onChange={() =>\r\n                                                      setNFMediaEnabled(\r\n                                                          !nfMediaEnabled\r\n                                                      )\r\n                                                  }\r\n                                              />\r\n                                          </ItemH>\r\n\r\n                                          <ItemH\r\n                                              margin=\"15px 10px\"\r\n                                              flex=\"inital\"\r\n                                          >\r\n                                              <Span\r\n                                                  margin=\"0px 10px 0px 0px\"\r\n                                                  weight=\"400\"\r\n                                                  spacing=\"0.1em\"\r\n                                                  textTransform=\"uppercase\"\r\n                                                  size=\"0.8em\"\r\n                                                  bg=\"#e20880\"\r\n                                                  color=\"#fff\"\r\n                                                  padding=\"5px 15px\"\r\n                                                  radius=\"30px\"\r\n                                              >\r\n                                                  Enable CTA\r\n                                              </Span>\r\n                                              <Switch\r\n                                                  color=\"primary\"\r\n                                                  size=\"small\"\r\n                                                  checked={nfCTAEnabled}\r\n                                                  onChange={() =>\r\n                                                      setNFCTAEnabled(\r\n                                                          !nfCTAEnabled\r\n                                                      )\r\n                                                  }\r\n                                              />\r\n                                          </ItemH>\r\n                                      </ItemH>\r\n                                  )}\r\n                              </Item>\r\n\r\n                              {(nfType === \"2\" ||\r\n                                  nfType === \"3\" ||\r\n                                  nfType === \"5\") && (\r\n                                  <Item\r\n                                      margin=\"15px 20px 15px 20px\"\r\n                                      flex=\"1\"\r\n                                      self=\"stretch\"\r\n                                      align=\"stretch\"\r\n                                  >\r\n                                      <Input\r\n                                          required\r\n                                          placeholder=\"Enter recipient wallet address\"\r\n                                          radius=\"4px\"\r\n                                          padding=\"12px\"\r\n                                          border=\"1px solid #674c9f\"\r\n                                          bg=\"#fff\"\r\n                                          value={nfRecipient}\r\n                                          onChange={(e) => {\r\n                                              setNFRecipient(e.target.value);\r\n                                          }}\r\n                                      />\r\n                                      {nfRecipient.trim().length == 0 && (\r\n                                          <Span\r\n                                              padding=\"4px 10px\"\r\n                                              right=\"0px\"\r\n                                              top=\"0px\"\r\n                                              pos=\"absolute\"\r\n                                              color=\"#fff\"\r\n                                              bg=\"#000\"\r\n                                              size=\"0.7rem\"\r\n                                              z=\"1\"\r\n                                          >\r\n                                              Recipient Wallet\r\n                                          </Span>\r\n                                      )}\r\n                                  </Item>\r\n                              )}\r\n\r\n                              {nfType === \"4\" && (\r\n                                  <>\r\n                                      <MultiRecipientsContainer>\r\n                                          {multipleRecipients.map(\r\n                                              (oneRecipient) => (\r\n                                                  <span key={oneRecipient}>\r\n                                                      {oneRecipient}\r\n                                                      <i\r\n                                                          onClick={() =>\r\n                                                              removeRecipient(\r\n                                                                  oneRecipient\r\n                                                              )\r\n                                                          }\r\n                                                      >\r\n                                                          <CloseIcon />\r\n                                                      </i>\r\n                                                  </span>\r\n                                              )\r\n                                          )}\r\n                                      </MultiRecipientsContainer>\r\n                                      <Item\r\n                                          margin=\"15px 20px 15px 20px\"\r\n                                          flex=\"1\"\r\n                                          self=\"stretch\"\r\n                                          align=\"stretch\"\r\n                                      >\r\n                                          <Input\r\n                                              required={\r\n                                                  multipleRecipients.length ===\r\n                                                  0\r\n                                              }\r\n                                              placeholder=\"Enter recipients wallet addresses separated by a comma or by pressing the enter key\"\r\n                                              radius=\"4px\"\r\n                                              padding=\"12px\"\r\n                                              border=\"1px solid #674c9f\"\r\n                                              bg=\"#fff\"\r\n                                              value={tempRecipeint}\r\n                                              onKeyPress={\r\n                                                  handleSubsetInputChange\r\n                                              }\r\n                                              onChange={(e) => {\r\n                                                  const text =\r\n                                                      e.target.value.trim();\r\n                                                  console.log(text);\r\n                                                  console.log(tempRecipeint);\r\n                                                  // if (!LIMITER_KEYS.includes(text) && text.length > 0 ) {\r\n                                                  setTempRecipient(\r\n                                                      e.target.value\r\n                                                  );\r\n                                                  // }\r\n                                              }}\r\n                                          />\r\n                                          {nfRecipient.trim().length == 0 && (\r\n                                              <Span\r\n                                                  padding=\"4px 10px\"\r\n                                                  right=\"0px\"\r\n                                                  top=\"0px\"\r\n                                                  pos=\"absolute\"\r\n                                                  color=\"#fff\"\r\n                                                  bg=\"#000\"\r\n                                                  size=\"0.7rem\"\r\n                                                  z=\"1\"\r\n                                              >\r\n                                                  Recipient Wallet\r\n                                              </Span>\r\n                                          )}\r\n                                      </Item>\r\n                                  </>\r\n                              )}\r\n\r\n                              {nfType && nfSubEnabled && (\r\n                                  <Item\r\n                                      margin=\"15px 20px 15px 20px\"\r\n                                      flex=\"1\"\r\n                                      self=\"stretch\"\r\n                                      align=\"stretch\"\r\n                                  >\r\n                                      <Input\r\n                                          required\r\n                                          placeholder=\"Subject of Notification\"\r\n                                          padding=\"12px\"\r\n                                          borderBottom=\"1px solid #000\"\r\n                                          weight=\"400\"\r\n                                          size=\"1.2em\"\r\n                                          bg=\"#fff\"\r\n                                          value={nfSub}\r\n                                          onChange={(e) => {\r\n                                              setNFSub(e.target.value);\r\n                                          }}\r\n                                      />\r\n                                      {nfSub.trim().length == 0 && (\r\n                                          <Span\r\n                                              padding=\"4px 10px\"\r\n                                              right=\"0px\"\r\n                                              top=\"0px\"\r\n                                              pos=\"absolute\"\r\n                                              color=\"#fff\"\r\n                                              bg=\"#000\"\r\n                                              size=\"0.7rem\"\r\n                                              z=\"1\"\r\n                                          >\r\n                                              Subject\r\n                                          </Span>\r\n                                      )}\r\n                                  </Item>\r\n                              )}\r\n\r\n                              {nfType && (\r\n                                  <Item\r\n                                      margin=\"15px 20px 15px 20px\"\r\n                                      flex=\"1\"\r\n                                      self=\"stretch\"\r\n                                      align=\"stretch\"\r\n                                  >\r\n                                      <TextField\r\n                                          required\r\n                                          placeholder=\"Notification Message\"\r\n                                          rows=\"6\"\r\n                                          radius=\"4px\"\r\n                                          padding=\"12px\"\r\n                                          weight=\"400\"\r\n                                          border=\"1px solid #000\"\r\n                                          bg=\"#fff\"\r\n                                          value={nfMsg}\r\n                                          onChange={(e) => {\r\n                                              setNFMsg(e.target.value);\r\n                                          }}\r\n                                          autocomplete=\"off\"\r\n                                      />\r\n                                  </Item>\r\n                              )}\r\n\r\n                              {nfType && nfMediaEnabled && (\r\n                                  <ItemH\r\n                                      padding=\"15px 20px 15px 20px\"\r\n                                      flex=\"1\"\r\n                                      self=\"stretch\"\r\n                                      align=\"center\"\r\n                                  >\r\n                                      <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\r\n                                          <BsFillImageFill\r\n                                              size={24}\r\n                                              color=\"#000\"\r\n                                          />\r\n                                      </Item>\r\n                                      <Item\r\n                                          flex=\"1\"\r\n                                          margin=\"0px 0px 0px 5px\"\r\n                                          align=\"stretch\"\r\n                                      >\r\n                                          <Input\r\n                                              required\r\n                                              placeholder=\"Media URL for Notification\"\r\n                                              padding=\"12px\"\r\n                                              border=\"1px solid #000\"\r\n                                              radius=\"4px\"\r\n                                              weight=\"400\"\r\n                                              bg=\"#f1f1f1\"\r\n                                              value={nfMedia}\r\n                                              onChange={(e) => {\r\n                                                  setNFMedia(e.target.value);\r\n                                              }}\r\n                                          />\r\n                                          {nfMedia.trim().length == 0 && (\r\n                                              <Span\r\n                                                  padding=\"4px 10px\"\r\n                                                  right=\"0px\"\r\n                                                  top=\"0px\"\r\n                                                  pos=\"absolute\"\r\n                                                  color=\"#fff\"\r\n                                                  bg=\"#000\"\r\n                                                  size=\"0.7rem\"\r\n                                                  z=\"1\"\r\n                                              >\r\n                                                  Media URL\r\n                                              </Span>\r\n                                          )}\r\n                                      </Item>\r\n                                  </ItemH>\r\n                              )}\r\n\r\n                              {nfType && nfCTAEnabled && (\r\n                                  <ItemH\r\n                                      margin=\"15px 20px 15px 20px\"\r\n                                      flex=\"1\"\r\n                                      self=\"stretch\"\r\n                                      align=\"center\"\r\n                                  >\r\n                                      <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\r\n                                          <FiLink size={24} color=\"#000\" />\r\n                                      </Item>\r\n                                      <Item\r\n                                          flex=\"1\"\r\n                                          margin=\"0px 0px 0px 5px\"\r\n                                          align=\"stretch\"\r\n                                      >\r\n                                          <Input\r\n                                              required\r\n                                              placeholder=\"Call to Action Link\"\r\n                                              padding=\"12px\"\r\n                                              border=\"1px solid #000\"\r\n                                              radius=\"4px\"\r\n                                              weight=\"400\"\r\n                                              bg=\"#f1f1f1\"\r\n                                              value={nfCTA}\r\n                                              onChange={(e) => {\r\n                                                  setNFCTA(e.target.value);\r\n                                              }}\r\n                                          />\r\n                                          {nfCTA.trim().length == 0 && (\r\n                                              <Span\r\n                                                  padding=\"4px 10px\"\r\n                                                  right=\"0px\"\r\n                                                  top=\"0px\"\r\n                                                  pos=\"absolute\"\r\n                                                  color=\"#fff\"\r\n                                                  bg=\"#000\"\r\n                                                  size=\"0.7rem\"\r\n                                                  z=\"1\"\r\n                                              >\r\n                                                  Call to Action URL\r\n                                              </Span>\r\n                                          )}\r\n                                      </Item>\r\n                                  </ItemH>\r\n                              )}\r\n\r\n                              {nfInfo && nfProcessing != 1 && (\r\n                                  <Item\r\n                                      color=\"#fff\"\r\n                                      bg=\"#e1087f\"\r\n                                      padding=\"10px 15px\"\r\n                                      margin=\"15px 0px\"\r\n                                  >\r\n                                      <Span\r\n                                          color=\"#fff\"\r\n                                          textTransform=\"uppercase\"\r\n                                          spacing=\"0.1em\"\r\n                                          weight=\"400\"\r\n                                          size=\"1em\"\r\n                                      >\r\n                                          {nfInfo}\r\n                                      </Span>\r\n                                  </Item>\r\n                              )}\r\n\r\n                              {nfType && (\r\n                                  <Item\r\n                                      margin=\"15px 0px 0px 0px\"\r\n                                      flex=\"1\"\r\n                                      self=\"stretch\"\r\n                                      align=\"stretch\"\r\n                                  >\r\n                                      <Button\r\n                                          bg=\"#e20880\"\r\n                                          color=\"#fff\"\r\n                                          flex=\"1\"\r\n                                          radius=\"0px\"\r\n                                          padding=\"20px 10px\"\r\n                                          disabled={\r\n                                              nfProcessing == 1 ? true : false\r\n                                          }\r\n                                      >\r\n                                          {nfProcessing == 1 && (\r\n                                              <Loader\r\n                                                  type=\"Oval\"\r\n                                                  color=\"#fff\"\r\n                                                  height={24}\r\n                                                  width={24}\r\n                                              />\r\n                                          )}\r\n                                          {nfProcessing != 1 && (\r\n                                              <Input\r\n                                                  cursor=\"hand\"\r\n                                                  textTransform=\"uppercase\"\r\n                                                  color=\"#fff\"\r\n                                                  weight=\"400\"\r\n                                                  size=\"0.8em\"\r\n                                                  spacing=\"0.2em\"\r\n                                                  type=\"submit\"\r\n                                                  value=\"Send Notification\"\r\n                                              />\r\n                                          )}\r\n                                      </Button>\r\n                                  </Item>\r\n                              )}\r\n                          </FormSubmision>\r\n                      </Item>\r\n                  </ModifiedContent>\r\n              </Section>\r\n          )}\r\n      </>\r\n  );\r\n  }\r\n\r\n  // css styles\r\n  const Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n  `;\r\n\r\n  const ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n  `;\r\n\r\n  const DropdownStyledParent = styled.div`\r\n  .is-open {\r\n      margin-bottom: 130px;\r\n  }\r\n  `;\r\n\r\n  const MultiRecipientsContainer = styled.div`\r\n  width: 100%;\r\n  padding: 0px 20px;\r\n  padding-top: 10px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 7px 15px;\r\n  span {\r\n      color: white;\r\n      background: #e20880;\r\n      padding: 6px 10px;\r\n      border-radius: 5px;\r\n      i {\r\n          cursor: pointer;\r\n          margin-left: 25px;\r\n      }\r\n  }\r\n  `;\r\n\r\n  const ModifiedContent = styled(Content)`\r\n  padding-top: 20px;\r\n  font-weight: 400;\r\n  `;\r\n\r\n  const DropdownHeader = styled.div`\r\n  color: black;\r\n  padding: 10px;\r\n  letter-spacing: 3px;\r\n  font-size: 14px;\r\n  `;\r\n\r\n  const DropdownStyled = styled(Dropdown)`\r\n  .Dropdown-control {\r\n      background-color: #000;\r\n      color: #fff;\r\n      padding: 12px 52px 12px 10px;\r\n      border: 1px solid #000;\r\n      border-radius: 4px;\r\n  }\r\n  .Dropdown-placeholder {\r\n      text-transform: uppercase;\r\n      font-weight: 400;\r\n      letter-spacing: 0.2em;\r\n      font-size: 0.8em;\r\n  }\r\n  .Dropdown-arrow {\r\n      top: 18px;\r\n      bottom: 0;\r\n      border-color: #fff transparent transparent;\r\n  }\r\n  .Dropdown-menu {\r\n      border: 1px solid #000;\r\n      box-shadow: none;\r\n      background-color: #000;\r\n      border-radius: 0px;\r\n      margin-top: -2px;\r\n      border-bottom-right-radius: 4px;\r\n      border-bottom-left-radius: 4px;\r\n  }\r\n  .Dropdown-option {\r\n      background-color: rgb(35 35 35);\r\n      color: #ffffff99;\r\n      text-transform: uppercase;\r\n      letter-spacing: 0.2em;\r\n      font-size: 0.7em;\r\n      padding: 15px 20px;\r\n  }\r\n  .Dropdown-option:hover {\r\n      background-color: #000000;\r\n      color: #fff;\r\n  }\r\n  `;\r\n\r\n  const DropdownStyledWhite = styled(DropdownStyled)`\r\n  .Dropdown-control {\r\n      color: #000;\r\n      background: #fafafa;\r\n      border: 0px;\r\n      padding: 15px 52px 15px 10px;\r\n  }\r\n  .Dropdown-arrow {\r\n      border-color: #000 transparent transparent;\r\n      top: 30px;\r\n  }\r\n  .Dropdown-menu {\r\n      border: 0px;\r\n      background-color: #fafafa;\r\n  }\r\n  .Dropdown-option {\r\n      background-color: #fafafa;\r\n      color: black;\r\n      transition: 300ms;\r\n  }\r\n  .Dropdown-option:hover {\r\n      background-color: #e7e6e6;\r\n  }\r\n  .Dropdown-option.is-selected {\r\n      background-color: #f1efef;\r\n  }\r\n  `;\r\n\r\n  const DropdownStyledParentWhite = styled(DropdownStyledParent)`\r\n  margin-bottom: 20px;\r\n  border: 1px solid rgba(169, 169, 169, 0.5);\r\n  `;\r\n\r\n  const CustomDropdownItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  img {\r\n      height: 30px;\r\n      width: 30px;\r\n      border-radius: 50%;\r\n      margin-right: 10px;\r\n  }\r\n  div {\r\n      color: black;\r\n      font-size: 16px;\r\n      letter-spacing: 2px;\r\n  }\r\n  `;\r\n\r\n  // Export Default\r\n  export default SendNotifications;\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport {Section, Content} from 'components/SharedStyling';\r\n\r\nimport CreateChannel from 'components/CreateChannel';\r\n\r\n// CREATE CHANNEL OWNER DASHBOARD\r\nfunction ChannelCreationDashboard() {\r\n  React.useEffect(() => {\r\n\r\n  });\r\n\r\n  // RRENDER\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Content padding=\"0px\">\r\n          <CreateChannel />\r\n        </Content>\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\n\r\n\r\n// Export Default\r\nexport default ChannelCreationDashboard;\r\n","/**\r\n * This file helps us to maintain the state of the logged in user user(if they have an account)\r\n * as well as the privilidges the logged in user has\r\n */\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    channelDetails: null,\r\n    canVerify: false,\r\n    delegatees: []\r\n};\r\n\r\nexport const contractSlice = createSlice({\r\n    name: \"admin\",\r\n    initialState,\r\n    reducers: {\r\n        setUserChannelDetails: (state, action) => {\r\n            state.channelDetails = action.payload;\r\n        },\r\n        setCanVerify: (state, action) => {\r\n            state.canVerify = action.payload;\r\n        },\r\n        setDelegatees: (state, action) => {\r\n            state.delegatees = action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    setUserChannelDetails,\r\n    setCanVerify,\r\n    setDelegatees\r\n} = contractSlice.actions;\r\n\r\nexport default contractSlice.reducer;","import React from \"react\";\r\nimport ReactGA from \"react-ga\";\r\nimport { ethers } from \"ethers\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport hex2ascii from \"hex2ascii\";\r\nimport { addresses, abis, envConfig } from \"@project/contracts\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nimport config from \"config\";\r\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\r\nimport NotificationToast from \"components/NotificationToast\";\r\nimport AliasVerificationodal from \"components/AliasVerificationModal\";\r\n\r\nimport Info from \"segments/Info\";\r\nimport SpamBox from \"segments/spam\";\r\n\r\nimport ViewChannels from \"segments/ViewChannels\";\r\nimport Feedbox from \"segments/Feedbox\";\r\n\r\nimport ChannelOwnerDashboard from \"segments/ChannelOwnerDashboard\";\r\nimport ChannelCreationDashboard from \"segments/ChannelCreationDashboard\";\r\n\r\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\r\nimport UsersDataStore from \"singletons/UsersDataStore\";\r\nimport { postReq } from \"api\";\r\n\r\nimport {\r\n  setCoreReadProvider,\r\n  setCoreWriteProvider,\r\n  setCommunicatorReadProvider,\r\n  setCommunicatorWriteProvider,\r\n  setPushAdmin,\r\n} from \"redux/slices/contractSlice\";\r\nimport {\r\n  setUserChannelDetails,\r\n  setCanVerify,\r\n  setDelegatees,\r\n} from \"redux/slices/adminSlice\";\r\nimport { addNewNotification, toggleToggler, resetState } from \"redux/slices/notificationSlice\";\r\n\r\nexport const ALLOWED_CORE_NETWORK = envConfig.coreContractChain; //chainId of network which we have deployed the core contract on\r\nconst CHANNEL_TAB = 1; //Default to 1 which is the channel tab\r\n\r\n// Create Header\r\nfunction Home() {\r\n  ReactGA.pageview(\"/home\");\r\n\r\n  const dispatch = useDispatch();\r\n  const { account, library, chainId } = useWeb3React();\r\n  const {\r\n    epnsReadProvider,\r\n    epnsWriteProvider,\r\n    epnsCommReadProvider,\r\n  } = useSelector((state) => state.contracts);\r\n\r\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\r\n  const INITIAL_OPEN_TAB = CHANNEL_TAB; //if they are not on a core network.redirect then to the notifications page\r\n\r\n  const [controlAt, setControlAt] = React.useState(0);\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [adminStatusLoaded, setAdminStatusLoaded] = React.useState(false);\r\n  const [aliasEthAccount, setAliasEthAccount] = React.useState(null);\r\n  const [aliasVerified, setAliasVerified] = React.useState(null); // null means error, false means unverified and true means verified\r\n  const [channelAdmin, setChannelAdmin] = React.useState(false);\r\n  const [channelJson, setChannelJson] = React.useState([]);\r\n\r\n  // toast related section\r\n  const [toast, showToast] = React.useState(null);\r\n  const clearToast = () => showToast(null);\r\n  const showNetworkToast = () => {\r\n    showToast({\r\n      notificationTitle: (\r\n        <span style={{ color: \"#e20880\" }}> Invalid Network </span>\r\n      ),\r\n      notificationBody:\r\n        \"Please connect to the Ethereum network to access channels\",\r\n    });\r\n  };\r\n\r\n  //clear toast variable after it is shown\r\n  React.useEffect(() => {\r\n    if (toast) {\r\n      clearToast();\r\n    }\r\n  }, [toast]);\r\n  // toast related section\r\n\r\n  React.useEffect(() => {\r\n    dispatch(resetState());\r\n    setTimeout(() => dispatch(toggleToggler()), 300)\r\n  }, [account]);\r\n\r\n  /**\r\n   * Logic to get channel alias and alias verification status as well as create instances of core and comunicator contract\r\n   */\r\n  React.useEffect(() => {\r\n    (async function init() {\r\n      const coreProvider = onCoreNetwork\r\n        ? library\r\n        : ethers.getDefaultProvider(ALLOWED_CORE_NETWORK, {\r\n            etherscan: config.etherscanToken,\r\n          });\r\n      // if we are not on the core network then check for if this account is an alias for another channel\r\n      if (!onCoreNetwork) {\r\n        // get the eth address of the alias address, in order to properly render information about the channel\r\n        const aliasEth = await postReq(\"/channels/get_eth_address\", {\r\n          aliasAddress: account,\r\n          op: \"read\",\r\n        }).then(({ data }) => {\r\n          console.log({ data });\r\n          const ethAccount = data;\r\n          if (ethAccount) {\r\n            setAliasEthAccount(ethAccount.ethAddress);\r\n          }\r\n          return data;\r\n        });\r\n        if (aliasEth) {\r\n          // if an alias exists, check if its verified.\r\n          await postReq(\"/channels/get_alias_verification_status\", {\r\n            aliasAddress: account,\r\n            op: \"read\",\r\n          }).then(({ data }) => {\r\n            // if it returns undefined then we need to let them know to verify their channel\r\n            if (!data) {\r\n              setAliasVerified(false);\r\n              return;\r\n            }\r\n            const { status } = data;\r\n            setAliasVerified(status || null);\r\n            return data;\r\n          });\r\n        }\r\n      }\r\n      // if we are not on the core network then fetch if there is an alias address from the api\r\n      // inititalise the read contract for the core network\r\n      const coreContractInstance = new ethers.Contract(\r\n        addresses.epnscore,\r\n        abis.epnscore,\r\n        coreProvider\r\n      );\r\n      // initialise the read contract for the communicator function\r\n      const commAddress = onCoreNetwork\r\n        ? addresses.epnsEthComm\r\n        : addresses.epnsPolyComm;\r\n      const commContractInstance = new ethers.Contract(\r\n        commAddress,\r\n        abis.epnsComm,\r\n        library\r\n      );\r\n      dispatch(setCommunicatorReadProvider(commContractInstance));\r\n      dispatch(setCoreReadProvider(coreContractInstance));\r\n      // initialise the read contract for the communicator function\r\n      if (!!(library && account)) {\r\n        let signer = library.getSigner(account);\r\n        const coreSignerInstance = new ethers.Contract(\r\n          addresses.epnscore,\r\n          abis.epnscore,\r\n          signer\r\n        );\r\n        const communicatorSignerInstance = new ethers.Contract(\r\n          commAddress,\r\n          abis.epnsComm,\r\n          signer\r\n        );\r\n        dispatch(setCoreWriteProvider(coreSignerInstance));\r\n        dispatch(setCommunicatorWriteProvider(communicatorSignerInstance));\r\n      }\r\n    })();\r\n  }, [account, chainId]);\r\n\r\n  /**\r\n   * When we instantiate the contract instances, fetch basic information about the user\r\n   * Corresponding channel owned.\r\n   */\r\n  React.useEffect(() => {\r\n    if (!epnsReadProvider || !epnsCommReadProvider) return;\r\n    // Reset when account refreshes\r\n    setChannelAdmin(false);\r\n    dispatch(setUserChannelDetails(null));\r\n    setAdminStatusLoaded(false);\r\n    userClickedAt(INITIAL_OPEN_TAB);\r\n    setChannelJson([]);\r\n    // save push admin to global state\r\n    epnsReadProvider.pushChannelAdmin().then((response) => {\r\n      dispatch(setPushAdmin(response));\r\n    });\r\n\r\n    // EPNS Read Provider Set\r\n    if (epnsReadProvider != null && epnsCommReadProvider != null) {\r\n      // Instantiate Data Stores\r\n      UsersDataStore.instance.init(\r\n        account,\r\n        epnsReadProvider,\r\n        epnsCommReadProvider\r\n      );\r\n      ChannelsDataStore.instance.init(\r\n        account,\r\n        epnsReadProvider,\r\n        epnsCommReadProvider\r\n      );\r\n      checkUserForChannelOwnership();\r\n      fetchDelegators();\r\n    }\r\n  }, [epnsReadProvider, epnsCommReadProvider]);\r\n\r\n  // handle user action at control center\r\n  const userClickedAt = (controlIndex) => {\r\n    setControlAt(controlIndex);\r\n  };\r\n\r\n  // fetch all the channels who have delegated to this account\r\n  const fetchDelegators = () => {\r\n    postReq(\"/channels/delegatee/get_channels\", {\r\n      delegateAddress: account,\r\n      op: \"read\",\r\n    })\r\n      .then(async ({ data: delegators }) => {\r\n        // if there are actual delegators\r\n        // fetch basic information abouot the channels and store it to state\r\n        if (delegators && delegators.channelOwners) {\r\n          const channelInformationPromise = [\r\n            ...new Set([account, ...delegators.channelOwners])//make the accounts unique\r\n          ].map((channelAddress) =>\r\n            ChannelsDataStore.instance\r\n              .getChannelJsonAsync(channelAddress)\r\n              .then((res) => ({ ...res, address: channelAddress }))\r\n              .catch(() => false)\r\n          );\r\n          const channelInformation = await Promise.all(\r\n            channelInformationPromise\r\n          );\r\n          dispatch(setDelegatees(channelInformation.filter(Boolean)));\r\n          // fetch the json information about this delegatee channel and add to global state\r\n        } else {\r\n          dispatch(setDelegatees([]));\r\n        }\r\n      })\r\n      .catch(async (err) => {\r\n        console.log({ err });\r\n      });\r\n  };\r\n\r\n  // Check if a user is a channel or not\r\n  const checkUserForChannelOwnership = async () => {\r\n    // Check if account is admin or not and handle accordingly\r\n    const ownerAccount = !onCoreNetwork ? aliasEthAccount : account;\r\n    EPNSCoreHelper.getChannelJsonFromUserAddress(ownerAccount, epnsReadProvider)\r\n      .then(async (response) => {\r\n        // if channel admin, then get if the channel is verified or not, then also fetch more details about the channel\r\n        const verificationStatus = await epnsWriteProvider.getChannelVerfication(\r\n          ownerAccount\r\n        );\r\n        const channelJson = await epnsWriteProvider.channels(ownerAccount);\r\n        const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(\r\n          ownerAccount\r\n        );\r\n        dispatch(\r\n          setUserChannelDetails({\r\n            ...response,\r\n            ...channelJson,\r\n            subscribers: channelSubscribers,\r\n          })\r\n        );\r\n        dispatch(setCanVerify(Boolean(verificationStatus)));\r\n        setChannelJson(response);\r\n        setChannelAdmin(true);\r\n        setAdminStatusLoaded(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\r\n          \"There was an error [checkUserForChannelOwnership]:\",\r\n          err.message\r\n        );\r\n        setChannelAdmin(false);\r\n        setAdminStatusLoaded(true);\r\n      })\r\n      .finally(() => {\r\n        setAdminStatusLoaded(true);\r\n      });\r\n  };\r\n\r\n  // Render\r\n  return (\r\n    <Container>\r\n      <Controls>\r\n        <ControlButton\r\n          index={0}\r\n          active={controlAt == 0 ? 1 : 0}\r\n          border=\"#e20880\"\r\n          onClick={() => {\r\n            userClickedAt(0);\r\n          }}\r\n        >\r\n          <ControlImage\r\n            src=\"./svg/feedbox.svg\"\r\n            active={controlAt == 0 ? 1 : 0}\r\n          />\r\n          <ControlText active={controlAt == 0 ? 1 : 0}>Inbox</ControlText>\r\n        </ControlButton>\r\n\r\n        <ControlButton\r\n          index={1}\r\n          active={controlAt == 1 ? 1 : 0}\r\n          border=\"#35c5f3\"\r\n          onClick={() => {\r\n            userClickedAt(1);\r\n          }}\r\n        >\r\n          <ControlImage\r\n            src=\"./svg/channel.svg\"\r\n            active={controlAt == 1 ? 1 : 0}\r\n          />\r\n          <ControlText active={controlAt == 1 ? 1 : 0}>Channels</ControlText>\r\n        </ControlButton>\r\n\r\n        <ControlButton\r\n          index={2}\r\n          active={controlAt == 2 ? 1 : 0}\r\n          border=\"#674c9f\"\r\n          disabled={!adminStatusLoaded}\r\n          onClick={() => {\r\n            if (adminStatusLoaded) {\r\n              // if youre not on kovan and you dont have a channel, you cannot create except on kovan, so throw error\r\n              if (!channelAdmin && !onCoreNetwork) {\r\n                return showNetworkToast();\r\n              }\r\n              if (channelAdmin && !aliasVerified && !onCoreNetwork) {\r\n                return setModalOpen(true);\r\n              }\r\n              userClickedAt(2);\r\n            }\r\n          }}\r\n        >\r\n          {!adminStatusLoaded && (\r\n            <Loader type=\"Oval\" color=\"#674c9f\" height={32} width={32} />\r\n          )}\r\n          {channelAdmin &&\r\n            adminStatusLoaded &&\r\n            (onCoreNetwork ? true : aliasVerified) && (\r\n              <ControlChannelContainer>\r\n                <ControlChannelImage\r\n                  src={`${channelJson.icon}`}\r\n                  active={controlAt == 2 ? 1 : 0}\r\n                />\r\n                <ControlChannelText active={controlAt == 2 ? 1 : 0}>\r\n                  {channelJson.name}\r\n                </ControlChannelText>\r\n              </ControlChannelContainer>\r\n            )}\r\n          {channelAdmin &&\r\n            adminStatusLoaded &&\r\n            aliasVerified === false &&\r\n            !onCoreNetwork && (\r\n              <ControlChannelContainer>\r\n                <ControlChannelImage\r\n                  src={`${channelJson.icon}`}\r\n                  active={controlAt == 2 ? 1 : 0}\r\n                />\r\n                <ControlChannelText active={controlAt == 2 ? 1 : 0}>\r\n                  Verify channel alias\r\n                </ControlChannelText>\r\n              </ControlChannelContainer>\r\n            )}\r\n          {channelAdmin &&\r\n            adminStatusLoaded &&\r\n            aliasVerified === null &&\r\n            !onCoreNetwork && (\r\n              <ControlChannelContainer>\r\n                <ControlChannelImage\r\n                  src={`${channelJson.icon}`}\r\n                  active={controlAt == 2 ? 1 : 0}\r\n                />\r\n                <ControlChannelText active={controlAt == 2 ? 1 : 0}>\r\n                  Contact the admin\r\n                </ControlChannelText>\r\n              </ControlChannelContainer>\r\n            )}\r\n          {!channelAdmin && adminStatusLoaded && (\r\n            <>\r\n              <ControlImage\r\n                src=\"./svg/channeladmin.svg\"\r\n                active={controlAt == 2 ? 1 : 0}\r\n              />\r\n              <ControlText active={controlAt == 2 ? 1 : 0}>\r\n                Create Your Channel\r\n              </ControlText>\r\n            </>\r\n          )}\r\n        </ControlButton>\r\n\r\n        <ControlButton\r\n          index={3}\r\n          active={controlAt == 3 ? 1 : 0}\r\n          border=\"#e20880\"\r\n          onClick={() => {\r\n            userClickedAt(3);\r\n          }}\r\n        >\r\n          <ControlImage src=\"./svg/share.svg\" active={controlAt == 3 ? 1 : 0} />\r\n          <ControlText active={controlAt == 3 ? 1 : 0}>\r\n            Receive Notifs\r\n          </ControlText>\r\n        </ControlButton>\r\n      </Controls>\r\n      <Interface>\r\n        {controlAt == 0 && <Feedbox />}\r\n        {controlAt == 1 && <ViewChannels />}\r\n        {controlAt == 2 && adminStatusLoaded && <ChannelOwnerDashboard />}\r\n        {controlAt == 3 && <Info />}\r\n        {toast && (\r\n          <NotificationToast notification={toast} clearToast={clearToast} />\r\n        )}\r\n        {modalOpen && (\r\n          <AliasVerificationodal\r\n            onClose={() => setModalOpen(false)}\r\n            onSuccess={() => setAliasVerified(true)}\r\n            verificationStatus={aliasVerified}\r\n          />\r\n        )}\r\n      </Interface>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css style\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: block;\r\n  flex-direction: column;\r\n  min-height: calc(100vh - 100px);\r\n`;\r\n\r\nconst Controls = styled.div`\r\n  flex: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ControlButton = styled.div`\r\n  flex: 1 1 21%;\r\n  height: 120px;\r\n  min-width: 200px;\r\n  background: #fff;\r\n\r\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\r\n  border-radius: 15px;\r\n  border: 1px solid rgb(225, 225, 225);\r\n\r\n  border-bottom: 10px solid rgb(180, 180, 180);\r\n  margin: 20px;\r\n  overflow: hidden;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  border-bottom: 10px solid\r\n    ${(props) => (props.active ? props.border : \"rgb(180,180,180)\")};\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ControlImage = styled.img`\r\n  height: 30%;\r\n  margin-right: 15px;\r\n  filter: ${(props) => (props.active ? \"brightness(1)\" : \"brightness(0)\")};\r\n  opacity: ${(props) => (props.active ? \"1\" : \"0.25\")};\r\n\r\n  transition: transform 0.2s ease-out;\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      transform: scale(3.5) translate(-20px, 0px);\r\n      opacity: 0.4;\r\n    `};\r\n`;\r\n\r\nconst ControlText = styled.label`\r\n  font-size: 16px;\r\n  font-weight: 200;\r\n  opacity: ${(props) => (props.active ? \"1\" : \"0.75\")};\r\n\r\n  transition: transform 0.2s ease-out;\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      transform: scale(1.3) translate(-10px, 0px);\r\n    `};\r\n`;\r\n\r\nconst ControlChannelContainer = styled.div`\r\n  margin: 0px 20px;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst ControlChannelImage = styled.img`\r\n  width: 20%;\r\n  margin-bottom: 10px;\r\n  transition: transform 0.2s ease-out;\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      transform: scale(3.5) translate(-40px, 5px);\r\n      opacity: 0.2;\r\n      z-index: 1;\r\n    `};\r\n`;\r\n\r\nconst ControlChannelText = styled.label`\r\n  font-size: 16px;\r\n  font-weight: 300;\r\n  opacity: ${(props) => (props.active ? \"1\" : \"0.75\")};\r\n  transition: transform 0.2s ease-out;\r\n  background: -webkit-linear-gradient(#db268a, #34c6f3);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  z-index: 2;\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      transform: scale(1.1) translate(0px, -20px);\r\n    `};\r\n`;\r\n\r\nconst Interface = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n\r\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\r\n  border-radius: 20px;\r\n  border: 1px solid rgb(225, 225, 225);\r\n\r\n  margin: 15px;\r\n  overflow: hidden;\r\n`;\r\n\r\n// Export Default\r\nexport default Home;\r\n","import React, {useRef, useState} from 'react';\r\nimport { useClick, useClickAway } from 'react-use';\r\nimport styled ,  {useTheme} from 'styled-components';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport {Item, H2, H3, Span, Button, Input} from 'components/SharedStyling';\r\n\r\nconst ethers = require('ethers');\r\n\r\n\r\nexport default function AddDelegateModal({\r\n    onClose,onSuccess, addDelegate\r\n}) {\r\n\r\n    const themes = useTheme();\r\n    console.log(themes);\r\n    const modalRef = useRef(null);\r\n    const [mainAdress, setMainAddress] = useState('');\r\n    const [loading, setLoading] = useState('');\r\n\r\n    // Form signer and contract connection\r\n    useClickAway(modalRef, onClose);\r\n\r\n    const addDelegateFunction = () => {\r\n        setLoading('loading')\r\n        addDelegate(mainAdress)\r\n        .then(async (tx) => {\r\n            console.log(tx);\r\n            setLoading(\"Transaction Sent!\");\r\n\r\n            setTimeout(() => {\r\n                onSuccess();\r\n                onClose();\r\n            }, 2000);\r\n\r\n        })\r\n        .catch((err) => {\r\n            console.log({\r\n                err\r\n            })\r\n            setLoading('There was an error');\r\n            setTimeout(() => {\r\n                setLoading('')\r\n            }, 2000)\r\n        })\r\n    };\r\n    \r\n\r\n    return (\r\n        <Overlay>\r\n            <AliasModal ref={modalRef} background={themes}>\r\n                <Item align=\"flex-start\">\r\n                    <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n                    <Span weight=\"200\">Add </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Delegate</Span>\r\n                    </H2>\r\n                    <H3>Add an account who can send notifications on your behalf.</H3>\r\n                </Item>\r\n                <Item align=\"flex-start\">\r\n                    <CustomInput\r\n                        required\r\n                        placeholder=\"Enter the ethereum address\"\r\n                        radius=\"4px\"\r\n                        padding=\"12px\"\r\n                        border=\"1px solid #674c9f\"\r\n                        bg=\"#fff\"\r\n                        value={mainAdress}\r\n                        onChange={(e) => {setMainAddress(e.target.value)}}\r\n                    />\r\n                </Item>\r\n                <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                    <Button\r\n                        bg='#e20880'\r\n                        color='#fff'\r\n                        flex=\"1\"\r\n                        radius=\"0px\"\r\n                        padding=\"20px 10px\"\r\n                        disabled={mainAdress.length !== 42}\r\n                        onClick={addDelegateFunction}\r\n                    >\r\n                        { loading && <Loader\r\n                            type=\"Oval\"\r\n                            color=\"#FFF\"\r\n                            height={16}\r\n                            width={16}\r\n                            />\r\n                        }\r\n                        <StyledInput\r\n                            cursor=\"hand\"\r\n                            textTransform=\"uppercase\"\r\n                            color=\"#fff\" weight=\"400\"\r\n                            size=\"0.8em\" spacing=\"0.2em\"\r\n                            value={loading ? loading : \"Add Delegate\"}\r\n                        />\r\n                    </Button>\r\n                </Item>\r\n            </AliasModal>\r\n        </Overlay>\r\n    )\r\n}\r\n\r\nconst StyledInput = styled(Input)`\r\n    width: 100%;\r\n    text-align: center;\r\n    caret-color: transparent;\r\n`\r\n\r\nconst CustomInput = styled(Input)`\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    margin: 20px 0px;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background: rgba(0,0,0,0.85);\r\n    height: 100%;\r\n    width: 100%;\r\n    z-index: 1000;\r\n    position: fixed;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst AliasModal = styled.div`\r\n    padding: 20px 30px;\r\n    background: ${props => props.background.mainBg};\r\n`;","import React, {useRef, useState} from 'react';\r\nimport { useClickAway } from 'react-use';\r\nimport styled from 'styled-components';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport {Item, H2, H3, Span, Button, Input} from 'components/SharedStyling';\r\n\r\n\r\n\r\nexport default function RemoveDelegateModal({\r\n    onClose,onSuccess, removeDelegate\r\n}) {\r\n\r\n    const modalRef = useRef(null);\r\n    const [mainAdress, setMainAddress] = useState('');\r\n    const [loading, setLoading] = useState('');\r\n\r\n    // Form signer and contract connection\r\n    useClickAway(modalRef, onClose);\r\n\r\n    const addDelegateFunction = () => {\r\n        setLoading('loading')\r\n        removeDelegate(mainAdress)\r\n        .then(async (tx) => {\r\n            console.log(tx);\r\n            setLoading(\"Transaction Sent!\");\r\n\r\n            setTimeout(() => {\r\n                onSuccess();\r\n                onClose();\r\n            }, 2000);\r\n\r\n        })\r\n        .catch((err) => {\r\n            console.log({\r\n                err\r\n            })\r\n            setLoading('There was an error');\r\n            setTimeout(() => {\r\n                setLoading('')\r\n            }, 2000)\r\n        })\r\n    };\r\n    \r\n\r\n    return (\r\n        <Overlay>\r\n            <AliasModal ref={modalRef}>\r\n                <Item align=\"flex-start\">\r\n                    <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n                    <Span weight=\"200\">Remove </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Delegate</Span>\r\n                    </H2>\r\n                    <H3>Remove an account who can send notifications on your behalf.</H3>\r\n                </Item>\r\n                <Item align=\"flex-start\">\r\n                    <CustomInput\r\n                        required\r\n                        placeholder=\"Enter the ethereum address\"\r\n                        radius=\"4px\"\r\n                        padding=\"12px\"\r\n                        border=\"1px solid #674c9f\"\r\n                        bg=\"#fff\"\r\n                        value={mainAdress}\r\n                        onChange={(e) => {setMainAddress(e.target.value)}}\r\n                    />\r\n                </Item>\r\n                <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                    <Button\r\n                        bg='#e20880'\r\n                        color='#fff'\r\n                        flex=\"1\"\r\n                        radius=\"0px\"\r\n                        padding=\"20px 10px\"\r\n                        disabled={mainAdress.length !== 42}\r\n                        onClick={addDelegateFunction}\r\n                    >\r\n                        { loading && <Loader\r\n                            type=\"Oval\"\r\n                            color=\"#FFF\"\r\n                            height={16}\r\n                            width={16}\r\n                            />\r\n                        }\r\n                        <StyledInput\r\n                            cursor=\"hand\"\r\n                            textTransform=\"uppercase\"\r\n                            color=\"#fff\" weight=\"400\"\r\n                            size=\"0.8em\" spacing=\"0.2em\"\r\n                            value={loading ? loading : \"Remove Delegate\"}\r\n                        />\r\n                    </Button>\r\n                </Item>\r\n            </AliasModal>\r\n        </Overlay>\r\n    )\r\n}\r\n\r\nconst StyledInput = styled(Input)`\r\n    width: 100%;\r\n    text-align: center;\r\n    caret-color: transparent;\r\n`\r\n\r\nconst CustomInput = styled(Input)`\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    margin: 20px 0px;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background: rgba(0,0,0,0.85);\r\n    height: 100%;\r\n    width: 100%;\r\n    z-index: 1000;\r\n    position: fixed;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst AliasModal = styled.div`\r\n    padding: 20px 30px;\r\n    background: white;\r\n`;","import React, { useRef, useState } from \"react\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { useClickAway } from \"react-use\";\r\nimport {\r\n  Section,\r\n  Content,\r\n  Item,\r\n  H3,\r\n  Span,\r\n  Button,\r\n} from \"components/SharedStyling\";\r\n\r\nconst MIN_STAKE_FEES = 50;\r\n\r\nexport default function ActivateChannelModal({\r\n  activateChannel,\r\n  loading,\r\n  setChannelStakeFees,\r\n  channelStakeFees,\r\n  onClose,\r\n}) {\r\n  const popupRef = React.useRef(null);\r\n  useClickAway(popupRef, onClose); //close the popoup when we click away\r\n  return (\r\n    <PopupOverlay>\r\n      <PopupSlider ref={popupRef}>\r\n        <Section>\r\n          <Content padding=\"50px 0px 0px 0px\">\r\n            <Item align=\"flex-start\" margin=\"0px 20px\">\r\n              <H3 color=\"#e20880\">Set your staking fees in DAI</H3>\r\n            </Item>\r\n\r\n            <Item\r\n              margin=\"-10px 20px 20px 20px\"\r\n              padding=\"20px 20px 10px 20px\"\r\n              bg=\"#f1f1f1\"\r\n            >\r\n              <Slider\r\n                defaultValue={MIN_STAKE_FEES}\r\n                onChangeCommitted={(_, value) =>\r\n                  setChannelStakeFees(Number(value))\r\n                }\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                step={MIN_STAKE_FEES}\r\n                marks\r\n                min={MIN_STAKE_FEES}\r\n                max={25000}\r\n              />\r\n              <Span\r\n                weight=\"400\"\r\n                size=\"1.0em\"\r\n                textTransform=\"uppercase\"\r\n                spacing=\"0.2em\"\r\n              >\r\n                Amount Staked: {channelStakeFees} DAI\r\n              </Span>\r\n            </Item>\r\n\r\n            <Item self=\"stretch\" align=\"stretch\" margin=\"20px 0px 0px 0px\">\r\n              <Button\r\n                bg=\"#e20880\"\r\n                color=\"#fff\"\r\n                flex=\"1\"\r\n                radius=\"0px\"\r\n                padding=\"20px 10px\"\r\n                onClick={activateChannel}\r\n              >\r\n                {loading ? (\r\n                  <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\r\n                ) : (\r\n                  <Span\r\n                    color=\"#fff\"\r\n                    weight=\"400\"\r\n                    textTransform=\"uppercase\"\r\n                    spacing=\"0.1em\"\r\n                  >\r\n                    Reactivate Channel\r\n                  </Span>\r\n                )}\r\n              </Button>\r\n            </Item>\r\n          </Content>\r\n        </Section>\r\n      </PopupSlider>\r\n    </PopupOverlay>\r\n  );\r\n}\r\n\r\nconst PopupOverlay = styled.div`\r\n  background: rgba(0, 0, 0, 0.5);\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst PopupSlider = styled.div`\r\n  height: 200px;\r\n  width: 70vw;\r\n  background: white;\r\n`;\r\n","import React from \"react\";\r\nimport { Section, Content, Item } from \"components/SharedStyling\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled, { css , useTheme } from \"styled-components\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { toast as toaster } from \"react-toastify\";\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { postReq } from \"api\";\r\n\r\nimport { ALLOWED_CORE_NETWORK } from \"pages/DeprecatedHome\";\r\nimport AddDelegateModal from \"./AddDelegateModal\";\r\nimport RemoveDelegateModal from \"./RemoveDelegateModal\";\r\nimport ActivateChannelModal from \"./ActivateChannelModal\";\r\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\r\nimport { setUserChannelDetails } from \"redux/slices/adminSlice\";\r\n\r\nimport \"react-dropdown/style.css\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nconst ethers = require(\"ethers\");\r\n\r\nconst MIN_STAKE_FEES = 50;\r\n\r\n// Create Header\r\nfunction ChannelSettings() {\r\n  const dispatch = useDispatch();\r\n  const { account, library, chainId } = useWeb3React();\r\n  const { epnsWriteProvider, epnsCommWriteProvider } = useSelector(\r\n    (state: any) => state.contracts\r\n  );\r\n  const { channelDetails } = useSelector((state: any) => state.admin);\r\n  const {\r\n    CHANNNEL_DEACTIVATED_STATE,\r\n    CHANNEL_BLOCKED_STATE,\r\n    CHANNEL_ACTIVE_STATE,\r\n  } = useSelector((state: any) => state.channels);\r\n\r\n  const theme = useTheme();\r\n  const { channelState } = channelDetails;\r\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [\r\n    showActivateChannelPopup,\r\n    setShowActivateChannelPopup,\r\n  ] = React.useState(false);\r\n  const [channelStakeFees, setChannelStakeFees] = React.useState(\r\n    MIN_STAKE_FEES\r\n  );\r\n  const [poolContrib, setPoolContrib] = React.useState(0);\r\n  const [addDelegateLoading, setAddDelegateLoading] = React.useState(false);\r\n  const [addModalOpen, setAddModalOpen] = React.useState(false);\r\n  const [removeDelegateLoading, setRemoveDelegateLoading] = React.useState(\r\n    false\r\n  );\r\n  const [removeModalOpen, setRemoveModalOpen] = React.useState(false);\r\n\r\n  // toaster customize\r\n  const LoaderToast = ({ msg, color }) => (\r\n    <Toaster>\r\n      <Loader type=\"Oval\" color={color} height={30} width={30} />\r\n      <ToasterMsg>{msg}</ToasterMsg>\r\n    </Toaster>\r\n  );\r\n\r\n  // Toastify\r\n  let notificationToast = () =>\r\n    toaster.dark(<LoaderToast msg=\"Preparing Notification\" color=\"#fff\" />, {\r\n      position: \"bottom-right\",\r\n      autoClose: false,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n  const isChannelDeactivated = channelState === CHANNNEL_DEACTIVATED_STATE;\r\n  const isChannelBlocked = channelState === CHANNEL_BLOCKED_STATE;\r\n  const channelInactive = isChannelBlocked || isChannelDeactivated;\r\n\r\n  React.useEffect(() => {\r\n    // To set channel info from a channel details\r\n    // setChannelState(channelDetails.channelState);\r\n    setPoolContrib(\r\n      +EPNSCoreHelper.formatBigNumberToMetric(\r\n        channelDetails.poolContribution,\r\n        true\r\n      )\r\n    );\r\n  }, [account]);\r\n\r\n  const toggleChannelActivationState = () => {\r\n    if (isChannelBlocked) return;\r\n    if (isChannelDeactivated) {\r\n      setShowActivateChannelPopup(true);\r\n    } else {\r\n      deactivateChannel();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Function to activate a channel that has been deactivated\r\n   */\r\n  const activateChannel = async () => {\r\n    // First Approve DAI\r\n    setLoading(true);\r\n    var signer = library.getSigner(account);\r\n    let daiContract = new ethers.Contract(addresses.dai, abis.erc20, signer);\r\n    const fees = ethers.utils.parseUnits(channelStakeFees.toString(), 18);\r\n    var sendTransactionPromise = daiContract.approve(addresses.epnscore, fees);\r\n    const tx = await sendTransactionPromise;\r\n\r\n    console.log(tx);\r\n    console.log(\"waiting for tx to finish\");\r\n\r\n    await library.waitForTransaction(tx.hash);\r\n    await epnsWriteProvider\r\n      .reactivateChannel(fees)\r\n      .then(async (tx: any) => {\r\n        console.log(tx);\r\n        console.log(\"Transaction Sent!\");\r\n\r\n        toaster.update(notificationToast(), {\r\n          render: \"Reactivating Channel\",\r\n          type: toaster.TYPE.INFO,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        await tx.wait(1);\r\n        toaster.update(notificationToast(), {\r\n          render: \"Channel Reactivated\",\r\n          type: toaster.TYPE.INFO,\r\n          autoClose: 5000,\r\n        });\r\n        dispatch(\r\n          setUserChannelDetails({\r\n            ...channelDetails,\r\n            channelState: CHANNEL_ACTIVE_STATE,\r\n          })\r\n        );\r\n      })\r\n      .catch((err: any) => {\r\n        console.log(\"!!!Error reactivateChannel() --> %o\", err);\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transacion Failed: \" + err.error?.message || err.message,\r\n          type: toaster.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n        setShowActivateChannelPopup(false);\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Function to deactivate a channel that has been deactivated\r\n   */\r\n  const deactivateChannel = async () => {\r\n    setLoading(true);\r\n    if (!poolContrib) return;\r\n\r\n    const amountToBeConverted = parseInt(\"\" + poolContrib) - 10;\r\n    console.log(\"Amount To be converted==>\", amountToBeConverted);\r\n\r\n    const { data: response } = await postReq(\"/channels/get_dai_to_push\", {\r\n      value: amountToBeConverted,\r\n    });\r\n\r\n    const pushValue = response.response.data.quote.PUSH.price;\r\n    const amountsOut = pushValue * Math.pow(10, 18);\r\n\r\n    await epnsWriteProvider\r\n      // .deactivateChannel(amountsOut.toString().replace(/0+$/, \"\")) //use this to remove trailing zeros 1232323200000000 -> 12323232\r\n      .deactivateChannel(Math.floor(pushValue)) \r\n      .then(async (tx: any) => {\r\n        console.log(tx);\r\n        console.log(\"Transaction Sent!\");\r\n\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transaction sending\",\r\n          type: toaster.TYPE.INFO,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        await tx.wait(1);\r\n        console.log(\"Transaction Mined!\");\r\n        dispatch(\r\n          setUserChannelDetails({\r\n            ...channelDetails,\r\n            channelState: CHANNNEL_DEACTIVATED_STATE,\r\n          })\r\n        );\r\n      })\r\n      .catch((err: any) => {\r\n        console.log(\"!!!Error deactivateChannel() --> %o\", err);\r\n        console.log({\r\n          err,\r\n        });\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transacion Failed: \" + err.error?.message || err,\r\n          type: toaster.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n      })\r\n      .finally(() => {\r\n        // post op\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const addDelegate = async (walletAddress: string) => {\r\n    setAddDelegateLoading(true);\r\n    return epnsCommWriteProvider.addDelegate(walletAddress).finally(() => {\r\n      setAddDelegateLoading(false);\r\n    });\r\n  };\r\n\r\n  const removeDelegate = (walletAddress: string) => {\r\n    setRemoveDelegateLoading(true);\r\n    return epnsCommWriteProvider.removeDelegate(walletAddress).finally(() => {\r\n      setRemoveDelegateLoading(false);\r\n    });\r\n  };\r\n\r\n  if (!onCoreNetwork) {\r\n    //temporarily deactivate the deactivate button if not on core network\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <DropdownWrapper background ={theme}>\r\n        <DeactivateButton\r\n          isChannelDeactivated={isChannelDeactivated}\r\n          onClick={toggleChannelActivationState}\r\n        >\r\n          <ActionTitle>\r\n            {loading ? (\r\n              \"Loading ...\"\r\n            ) : isChannelBlocked ? (\r\n              \"Channel Blocked\"\r\n            ) : isChannelDeactivated ? (\r\n              \"Activate Channel\"\r\n            ) : (\r\n              \"Deactivate Channel\"\r\n            )}\r\n          </ActionTitle>\r\n        </DeactivateButton>\r\n        <ActiveChannelWrapper>\r\n          <ChannelActionButton\r\n            disabled={channelInactive}\r\n            onClick={() => !channelInactive && setAddModalOpen(true)}\r\n          >\r\n            <ActionTitle>\r\n              {addDelegateLoading ? (\r\n                <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\r\n              ) : (\r\n                \"Add Delegate\"\r\n              )}\r\n            </ActionTitle>\r\n          </ChannelActionButton>\r\n\r\n          <ChannelActionButton\r\n            disabled={channelInactive}\r\n            onClick={() => !channelInactive && setRemoveModalOpen(true)}\r\n          >\r\n            <ActionTitle>\r\n              {removeDelegateLoading ? (\r\n                <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\r\n              ) : (\r\n                \"Remove Delegate\"\r\n              )}\r\n            </ActionTitle>\r\n          </ChannelActionButton>\r\n        </ActiveChannelWrapper>\r\n      </DropdownWrapper>\r\n      {/* modal to display the activate channel popup */}\r\n      {showActivateChannelPopup && (\r\n        <ActivateChannelModal\r\n          onClose={() => {\r\n            if (showActivateChannelPopup) {\r\n              setShowActivateChannelPopup(false);\r\n            }\r\n          }}\r\n          activateChannel={activateChannel}\r\n          loading={loading}\r\n          setChannelStakeFees={setChannelStakeFees}\r\n          channelStakeFees={channelStakeFees}\r\n        />\r\n      )}\r\n      {/* modal to add a delegate */}\r\n      {addModalOpen && (\r\n        <AddDelegateModal\r\n          onClose={() => setAddModalOpen(false)}\r\n          onSuccess={() => {\r\n            toaster.update(notificationToast(), {\r\n              render: \"Delegate Added\",\r\n              type: toaster.TYPE.INFO,\r\n              autoClose: 5000,\r\n            });\r\n          }}\r\n          addDelegate={addDelegate}\r\n        />\r\n      )}\r\n      {/* modal to remove a delegate */}\r\n      {removeModalOpen && (\r\n        <RemoveDelegateModal\r\n          onClose={() => {\r\n            setRemoveModalOpen(false);\r\n          }}\r\n          onSuccess={() => {\r\n            toaster.update(notificationToast(), {\r\n              render: \"Delegate Removed\",\r\n              type: toaster.TYPE.INFO,\r\n              autoClose: 5000,\r\n            });\r\n          }}\r\n          removeDelegate={removeDelegate}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst DropdownWrapper = styled.div`\r\n  position: absolute;\r\n  right: 20px;\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  width: 220px;\r\n  height: 230px;\r\n  padding: 20px;\r\n  padding-top: 30px;\r\n\r\n  background: ${props => props.background.mainBg};\r\n  border: 1px solid #a9a9a9;\r\n  box-sizing: border-box;\r\n  box-shadow: 0px 4px 30px rgba(0, 0, 0, 0.1);\r\n  border-radius: 10px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ActiveChannelWrapper = styled.div`\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  display: ${(props) => (props.inactive ? \"none\" : \"flex\")};\r\n`;\r\n\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`;\r\n\r\nconst ActionTitle = styled.span`\r\n  ${(props: any) =>\r\n    props.hideit &&\r\n    css`\r\n      visibility: hidden;\r\n    `};\r\n`;\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`;\r\n\r\nconst DeactivateButton = styled.div`\r\n  text-decoration: underline;\r\n  color: ${(props) => (props.isChannelDeactivated ? \"#674C9F\" : \"#e20880\")};\r\n  text-align: center;\r\n  font-size: 16px;\r\n  line-height: 20px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ChannelActionButton = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  background-color: #674c9f;\r\n  &:hover {\r\n    opacity: ${(props) => (props.disabled ? 0.5 : 0.9)};\r\n    cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: ${(props) => (props.disabled ? 0.5 : 0.75)};\r\n    cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\r\n    pointer: hand;\r\n  }\r\n  opacity: ${(props) => (props.disabled ? 0.5 : 1)};\r\n`;\r\n\r\nconst Settings = styled.img`\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-left: auto;\r\n  margin-right: 30px;\r\n`;\r\n\r\n// Export Default\r\nexport default ChannelSettings;\r\n","import React from \"react\";\r\nimport { useClickAway } from \"react-use\";\r\nimport styled from \"styled-components\";\r\nimport ChannelSettingsDropdown from \"./ChannelSettingsDropdown\";\r\n\r\nexport default function ChannelSettings() {\r\n  const [active, setActive] = React.useState(false);\r\n  const modalRef = React.useRef(null);\r\n  const toggleActive = () => {\r\n    setActive((a) => !a);\r\n  };\r\n\r\n  useClickAway(modalRef, () => active && setActive(false));\r\n\r\n  return (\r\n    <SettingsWrapper ref={modalRef}>\r\n      <Settings\r\n        active={active}\r\n        onClick={toggleActive}\r\n        src=\"/Settings.svg\"\r\n        alt=\"\"\r\n      ></Settings>\r\n      {active && <ChannelSettingsDropdown />}\r\n    </SettingsWrapper>\r\n  );\r\n}\r\n\r\nconst SettingsWrapper = styled.div`\r\n  position: absolute;\r\n  top: 30px;\r\n  right: 30px;\r\n`;\r\n\r\nconst Settings = styled.img`\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-left: auto;\r\n  margin-right: 30px;\r\n  cursor: pointer;\r\n  transition: 400ms;\r\n  transform: ${(props) => (props.active ? \"rotateZ(35deg)\" : \"none\")};\r\n`;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport styled , {useTheme} from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nconst DATE_FORMAT = \"DD/MM/YYYY\";\r\nexport default function ChannelDetails() {\r\n  const theme = useTheme();\r\n  const { library } = useWeb3React();\r\n  const { channelDetails, canVerify } = useSelector((state) => state.admin);\r\n  const { CHANNEL_ACTIVE_STATE, CHANNNEL_DEACTIVATED_STATE } = useSelector(\r\n    (state) => state.channels\r\n  );\r\n  const [verifyingChannel, setVerifyingChannel] = React.useState([]);\r\n  const [creationDate, setCreationDate] = React.useState(\"\");\r\n  const { channelState } = channelDetails;\r\n  const channelIsActive = channelState === CHANNEL_ACTIVE_STATE;\r\n  const channelIsDeactivated = channelState === CHANNNEL_DEACTIVATED_STATE;\r\n\r\n  React.useEffect(() => {\r\n    if (!channelDetails || !canVerify) return;\r\n    (async function() {\r\n      let channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(\r\n        channelDetails.verifiedBy\r\n      );\r\n      setVerifyingChannel(channelJson);\r\n    })();\r\n  }, [channelDetails, canVerify]);\r\n\r\n  React.useEffect(() => {\r\n    if (!channelDetails) return;\r\n    (async function() {\r\n      const bn = channelDetails.channelStartBlock.toString();\r\n      const block = await library.getBlock(+bn);\r\n      const date = moment(block.timestamp * 1000);//convert from millisecs\r\n      setCreationDate(date.format(DATE_FORMAT))\r\n    })();\r\n  }, [channelDetails]);\r\n\r\n  return (\r\n    <ChannelDetailsWrapper>\r\n      <SectionTop>\r\n        <ImageSection src={channelDetails.icon}></ImageSection>\r\n\r\n        <Details>\r\n          <ChannelName>\r\n            {channelDetails.name}\r\n            {canVerify && <VerifyImage src=\"/verify.png\"></VerifyImage>}\r\n          </ChannelName>\r\n          <ChanneStateText active={channelIsActive}>\r\n            {channelIsActive\r\n              ? \"ACTIVE\"\r\n              : channelIsDeactivated\r\n              ? \"DEACTIVATED\"\r\n              : \"BLOCKED\"}\r\n          </ChanneStateText>\r\n          <Subscribers>\r\n            <img src=\"/people.svg\"></img>\r\n            <SubscribersCount>\r\n              {channelDetails.subscribers.length}\r\n            </SubscribersCount>\r\n          </Subscribers>\r\n        </Details>\r\n      </SectionTop>\r\n\r\n      <SectionDes style={{color : theme.color}}>{channelDetails.info}</SectionDes>\r\n\r\n      <SectionDate>\r\n        {canVerify && (\r\n          <Verified>\r\n            <span>verified by:</span>\r\n\r\n            <VerifyingIcon src={verifyingChannel.icon}></VerifyingIcon>\r\n            <VerifyingName>{verifyingChannel.name}</VerifyingName>\r\n          </Verified>\r\n        )}\r\n\r\n        <Date>\r\n          <span>created on:</span>\r\n          <span style={{ marginLeft: \"10px\" }}>{creationDate}</span>\r\n        </Date>\r\n      </SectionDate>\r\n\r\n      <hr />\r\n    </ChannelDetailsWrapper>\r\n  );\r\n}\r\n\r\nconst ChannelDetailsWrapper = styled.div`\r\n  padding: 30px;\r\n  padding-bottom: 0;\r\n`;\r\n\r\nconst SectionTop = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst ImageSection = styled.img`\r\n  width: 120px;\r\n  height: 120px;\r\n  border-radius: 50%;\r\n  margin-right: 20px;\r\n`;\r\nconst VerifyImage = styled.img`\r\n  width: 20px;\r\n  height: 25px;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  margin-left: 8px;\r\n`;\r\n\r\nconst VerifyingIcon = styled.img`\r\n  height: 20px;\r\n  width: 20px;\r\n  border-radius: 50%;\r\n  margin-left: 6px;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst VerifyingName = styled.div``;\r\n\r\nconst Subscribers = styled.div`\r\n  height: fit-content;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst ActiveIcon = styled.span`\r\n  width: 8px;\r\n  height: 8px;\r\n  background: #57c255;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst ChanneStateText = styled.span`\r\n  color: #57c255;\r\n  font-family: Source Sans Pro;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 18px;\r\n  line-height: 23px;\r\n  letter-spacing: 0.1em;\r\n  text-transform: uppercase;\r\n  color: ${(props) => (props.active ? \"#57c255\" : \"red\")};\r\n  margin-bottom: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ${(props) =>\r\n    props.active &&\r\n    `\r\n        &::after {\r\n            width:8px;\r\n            height: 8px;\r\n            background: #57c255;\r\n            border-radius: 50%;\r\n            content: \"\";\r\n            display: inline-flex;\r\n            align-items: center;\r\n            margin-left: 6px;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst SubscribersCount = styled.span`\r\n  margin-left: 5px;\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n  height: 16px;\r\n  background: #35c5f3;\r\n  border-radius: 10px;\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  line-height: 17px;\r\n  display: inline-block;\r\n  color: #ffffff;\r\n`;\r\n\r\nconst Details = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst SectionLine = styled.div`\r\n  margin-left: 30px;\r\n  margin-right: 30px;\r\n`;\r\n\r\nconst Date = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 240px;\r\n  color: #674c9f;\r\n`;\r\n\r\nconst Verified = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  & > span {\r\n    color: #ec008c;\r\n    fontsize: 1em;\r\n    fontweight: bolder;\r\n  }\r\n`;\r\n\r\nconst ChannelName = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  font-family: Source Sans Pro;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 30px;\r\n  line-height: 38px;\r\n  margin-right: 8px;\r\n  text-transform: capitalize;\r\n  color: #e20880;\r\n`;\r\n\r\nconst SectionDate = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  line-height: 25px;\r\n  letter-spacing: 0.1em;\r\n  text-transform: uppercase;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst SectionDes = styled.div`\r\n  font-family: Source Sans Pro;\r\n  font-style: normal;\r\n  font-weight: 300;\r\n  font-size: 24px;\r\n  line-height: 30px;\r\n  letter-spacing: 0.1em;\r\n  text-transform: uppercase;\r\n  color: #000000;\r\n  margin-bottom: 40px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Section, Content } from \"components/SharedStyling\";\r\n\r\nimport SendNotifications from \"components/SendNotifications\";\r\nimport ChannelSettings from \"components/ChannelSettings\";\r\nimport ChannelDetails from \"components/ChannelDetails\";\r\nimport CreateChannel from \"components/CreateChannel\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// CREATE CHANNEL OWNER DASHBOARD\r\nfunction ChannelOwnerDashboard() {\r\n  const { channelDetails, delegatees } = useSelector((state) => state.admin);\r\n  return (\r\n    <>\r\n      <Section>\r\n        <ModifiedContent>\r\n          {/* display the create channel page if there are no details */}\r\n          {!channelDetails ? <CreateChannel /> : \"\"}\r\n          {/* display the create channel page if there are no details */}\r\n          {/* display the channel settings */}\r\n          {channelDetails ? <ChannelSettings /> : \"\"}\r\n          {/* display the channel settings */}\r\n          {/* display the details about the profile of the channel */}\r\n          {channelDetails ? <ChannelDetails /> : \"\"}\r\n          {/* display the details about the profile of the channel */}\r\n          {/* display the notifications settings */}\r\n          {channelDetails || delegatees?.length ? <SendNotifications /> : \"\"}\r\n          {/* display the notifications settings */}\r\n        </ModifiedContent>\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst ModifiedContent = styled(Content)`\r\n  padding: 0;\r\n  position: relative;\r\n`;\r\n\r\n// Export Default\r\nexport default ChannelOwnerDashboard;\r\n","import React from \"react\";\r\nimport ReactGA from \"react-ga\";\r\nimport { ethers } from \"ethers\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport hex2ascii from \"hex2ascii\";\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nimport config from \"config\";\r\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\r\nimport NotificationToast from \"components/NotificationToast\";\r\nimport AliasVerificationodal from \"components/AliasVerificationModal\";\r\nimport Info from \"segments/Info\";\r\nimport Feedbox from \"segments/Feedbox\";\r\nimport Spambox from \"segments/Spambox\";\r\nimport ViewChannels from \"segments/ViewChannels\";\r\nimport ChannelOwnerDashboard from \"segments/ChannelOwnerDashboard\";\r\nimport ChannelCreationDashboard from \"segments/ChannelCreationDashboard\";\r\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\r\nimport UsersDataStore from \"singletons/UsersDataStore\";\r\nimport { postReq } from \"api\";\r\nimport {\r\n  setCoreReadProvider,\r\n  setCoreWriteProvider,\r\n  setCommunicatorReadProvider,\r\n  setCommunicatorWriteProvider,\r\n  setPushAdmin,\r\n} from \"redux/slices/contractSlice\";\r\nimport {\r\n  setUserChannelDetails,\r\n  setCanVerify,\r\n  setDelegatees,\r\n} from \"redux/slices/adminSlice\";\r\nimport { addNewNotification } from \"redux/slices/notificationSlice\";\r\nexport const ALLOWED_CORE_NETWORK = 42; //chainId of network which we have deployed the core contract on\r\nconst CHANNEL_TAB = 0; //Default to 1 which is the channel tab\r\n\r\n// Create Header\r\nfunction InboxPage() {\r\n  ReactGA.pageview(\"/spam\");\r\n\r\n  const dispatch = useDispatch();\r\n  const { account, library, chainId } = useWeb3React();\r\n  const {\r\n    epnsReadProvider,\r\n    epnsWriteProvider,\r\n    epnsCommReadProvider,\r\n  } = useSelector((state) => state.contracts);\r\n\r\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\r\n  const INITIAL_OPEN_TAB = CHANNEL_TAB; //if they are not on a core network.redirect then to the notifications page\r\n\r\n  const [controlAt, setControlAt] = React.useState(0);\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [adminStatusLoaded, setAdminStatusLoaded] = React.useState(false);\r\n  const [aliasEthAccount, setAliasEthAccount] = React.useState(null);\r\n  const [aliasVerified, setAliasVerified] = React.useState(null); // null means error, false means unverified and true means verified\r\n  const [channelAdmin, setChannelAdmin] = React.useState(false);\r\n  const [channelJson, setChannelJson] = React.useState([]);\r\n\r\n  // toast related section\r\n  const [toast, showToast] = React.useState(null);\r\n  const clearToast = () => showToast(null);\r\n  const showNetworkToast = () => {\r\n    showToast({\r\n      notificationTitle: (\r\n        <span style={{ color: \"#e20880\" }}> Invalid Network </span>\r\n      ),\r\n      notificationBody:\r\n        \"Please connect to the Ethereum network to access channels\",\r\n    });\r\n  };\r\n  /**\r\n   * Event listener for new notifications\r\n   */\r\n  const listenFornewNotifications = () => {\r\n    const event = \"SendNotification\";\r\n    //callback function for listener\r\n    const cb = async (eventChannelAddress, eventUserAddress, identityHex) => {\r\n      const userAddress = account;\r\n      const identity = hex2ascii(identityHex);\r\n      const notificationId = identity\r\n        .concat(\"+\")\r\n        .concat(eventChannelAddress)\r\n        .concat(\"+\")\r\n        .concat(eventUserAddress)\r\n        .toLocaleLowerCase();\r\n      const ipfsId = identity.split(\"+\")[1];\r\n      const channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(\r\n        eventChannelAddress\r\n      );\r\n\r\n      // Form Gateway URL\r\n      const url = \"https://ipfs.io/ipfs/\" + ipfsId;\r\n      fetch(url)\r\n        .then((result) => result.json())\r\n        .then(async (result) => {\r\n          const ipfsNotification = { ...result };\r\n          const notificationTitle =\r\n            ipfsNotification.notification.title !== \"\"\r\n              ? ipfsNotification.notification.title\r\n              : channelJson.name;\r\n          const toastMessage = {\r\n            notificationTitle,\r\n            notificationBody: ipfsNotification.notification.body,\r\n          };\r\n          const notificationObject = {\r\n            title: notificationTitle,\r\n            message: ipfsNotification.data.amsg,\r\n            cta: ipfsNotification.data.acta,\r\n            app: channelJson.name,\r\n            icon: channelJson.icon,\r\n            image: ipfsNotification.data.aimg,\r\n          };\r\n\r\n          if (ipfsNotification.data.type === \"1\") {\r\n            const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(\r\n              eventChannelAddress\r\n            );\r\n            const isSubscribed = channelSubscribers.find((sub) => {\r\n              return sub.toLowerCase() === account.toLowerCase();\r\n            });\r\n            if (isSubscribed) {\r\n              console.log(\"message recieved\", notificationObject);\r\n              showToast(toastMessage);\r\n              dispatch(addNewNotification(notificationObject));\r\n            }\r\n          } else if (userAddress === eventUserAddress) {\r\n            showToast(toastMessage);\r\n            dispatch(addNewNotification(notificationObject));\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\r\n            \"!!!Error, getting new notification data from ipfs --> %o\",\r\n            err\r\n          );\r\n        });\r\n    };\r\n    epnsCommReadProvider.on(event, cb);\r\n    return () => epnsCommReadProvider.off.bind(epnsCommReadProvider, event, cb); //when we unmount we remove the listener\r\n  };\r\n\r\n  //clear toast variable after it is shown\r\n  React.useEffect(() => {\r\n    if (toast) {\r\n      clearToast();\r\n    }\r\n  }, [toast]);\r\n  // toast related section\r\n\r\n  /**\r\n   * Logic to get channel alias and alias verification status as well as create instances of core and comunicator contract\r\n   */\r\n  React.useEffect(() => {\r\n    (async function init() {\r\n      const coreProvider = onCoreNetwork\r\n        ? library\r\n        : ethers.getDefaultProvider(ALLOWED_CORE_NETWORK, {\r\n            etherscan: config.etherscanToken,\r\n          });\r\n      // if we are not on the core network then check for if this account is an alias for another channel\r\n      if (!onCoreNetwork) {\r\n        // get the eth address of the alias address, in order to properly render information about the channel\r\n        const aliasEth = await postReq(\"/channels/get_eth_address\", {\r\n          aliasAddress: account,\r\n          op: \"read\",\r\n        }).then(({ data }) => {\r\n          console.log({ data });\r\n          const ethAccount = data;\r\n          if (ethAccount) {\r\n            setAliasEthAccount(ethAccount.ethAddress);\r\n          }\r\n          return data;\r\n        });\r\n        if (aliasEth) {\r\n          // if an alias exists, check if its verified.\r\n          await postReq(\"/channels/get_alias_verification_status\", {\r\n            aliasAddress: account,\r\n            op: \"read\",\r\n          }).then(({ data }) => {\r\n            // if it returns undefined then we need to let them know to verify their channel\r\n            if (!data) {\r\n              setAliasVerified(false);\r\n              return;\r\n            }\r\n            const { status } = data;\r\n            setAliasVerified(status || null);\r\n            return data;\r\n          });\r\n        }\r\n      }\r\n      // if we are not on the core network then fetch if there is an alias address from the api\r\n      // inititalise the read contract for the core network\r\n      const coreContractInstance = new ethers.Contract(\r\n        addresses.epnscore,\r\n        abis.epnscore,\r\n        coreProvider\r\n      );\r\n      // initialise the read contract for the communicator function\r\n      const commAddress = onCoreNetwork\r\n        ? addresses.epnsEthComm\r\n        : addresses.epnsPolyComm;\r\n      const commContractInstance = new ethers.Contract(\r\n        commAddress,\r\n        abis.epnsComm,\r\n        library\r\n      );\r\n      dispatch(setCommunicatorReadProvider(commContractInstance));\r\n      dispatch(setCoreReadProvider(coreContractInstance));\r\n      // initialise the read contract for the communicator function\r\n      if (!!(library && account)) {\r\n        let signer = library.getSigner(account);\r\n        const coreSignerInstance = new ethers.Contract(\r\n          addresses.epnscore,\r\n          abis.epnscore,\r\n          signer\r\n        );\r\n        const communicatorSignerInstance = new ethers.Contract(\r\n          commAddress,\r\n          abis.epnsComm,\r\n          signer\r\n        );\r\n        dispatch(setCoreWriteProvider(coreSignerInstance));\r\n        dispatch(setCommunicatorWriteProvider(communicatorSignerInstance));\r\n      }\r\n    })();\r\n  }, [account, chainId]);\r\n\r\n  /**\r\n   * When we instantiate the contract instances, fetch basic information about the user\r\n   * Corresponding channel owned.\r\n   */\r\n  React.useEffect(() => {\r\n    if (!epnsReadProvider || !epnsCommReadProvider) return;\r\n    // Reset when account refreshes\r\n    setChannelAdmin(false);\r\n    dispatch(setUserChannelDetails(null));\r\n    setAdminStatusLoaded(false);\r\n    userClickedAt(INITIAL_OPEN_TAB);\r\n    setChannelJson([]);\r\n    // save push admin to global state\r\n    epnsReadProvider.pushChannelAdmin()\r\n    .then((response) => {\r\n      dispatch(setPushAdmin(response));\r\n    })\r\n    .catch(err =>{\r\n      console.log({err})\r\n    });\r\n\r\n    // EPNS Read Provider Set\r\n    if (epnsReadProvider != null && epnsCommReadProvider != null) {\r\n      // Instantiate Data Stores\r\n      UsersDataStore.instance.init(\r\n        account,\r\n        epnsReadProvider,\r\n        epnsCommReadProvider\r\n      );\r\n      ChannelsDataStore.instance.init(\r\n        account,\r\n        epnsReadProvider,\r\n        epnsCommReadProvider\r\n      );\r\n      checkUserForChannelOwnership();\r\n      listenFornewNotifications();\r\n      fetchDelegators();\r\n    }\r\n  }, [epnsReadProvider, epnsCommReadProvider]);\r\n\r\n  // handle user action at control center\r\n  const userClickedAt = (controlIndex) => {\r\n    setControlAt(controlIndex);\r\n  };\r\n\r\n  // fetch all the channels who have delegated to this account\r\n  const fetchDelegators = () => {\r\n    postReq(\"/channels/delegatee/get_channels\", {\r\n      delegateAddress: account,\r\n      op: \"read\",\r\n    })\r\n      .then(async ({ data: delegators }) => {\r\n        // if there are actual delegators\r\n        // fetch basic information abouot the channels and store it to state\r\n        if (delegators && delegators.channelOwners) {\r\n          const channelInformationPromise = [\r\n            ...new Set([account, ...delegators.channelOwners])//make the accounts unique\r\n          ].map((channelAddress) =>\r\n            ChannelsDataStore.instance\r\n              .getChannelJsonAsync(channelAddress)\r\n              .then((res) => ({ ...res, address: channelAddress }))\r\n              .catch(() => false)\r\n          );\r\n          const channelInformation = await Promise.all(\r\n            channelInformationPromise\r\n          );\r\n          dispatch(setDelegatees(channelInformation.filter(Boolean)));\r\n          // fetch the json information about this delegatee channel and add to global state\r\n        } else {\r\n          dispatch(setDelegatees([]));\r\n        }\r\n      })\r\n      .catch(async (err) => {\r\n        console.log({ err });\r\n      });\r\n  };\r\n\r\n  // Check if a user is a channel or not\r\n  const checkUserForChannelOwnership = async () => {\r\n    // Check if account is admin or not and handle accordingly\r\n    const ownerAccount = !onCoreNetwork ? aliasEthAccount : account;\r\n    EPNSCoreHelper.getChannelJsonFromUserAddress(ownerAccount, epnsReadProvider)\r\n      .then(async (response) => {\r\n        // if channel admin, then get if the channel is verified or not, then also fetch more details about the channel\r\n        const verificationStatus = await epnsWriteProvider.getChannelVerfication(\r\n          ownerAccount\r\n        );\r\n        const channelJson = await epnsWriteProvider.channels(ownerAccount);\r\n        const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(\r\n          ownerAccount\r\n        );\r\n        dispatch(\r\n          setUserChannelDetails({\r\n            ...response,\r\n            ...channelJson,\r\n            subscribers: channelSubscribers,\r\n          })\r\n        );\r\n        dispatch(setCanVerify(Boolean(verificationStatus)));\r\n        setChannelJson(response);\r\n        setChannelAdmin(true);\r\n        setAdminStatusLoaded(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\r\n          \"There was an error [checkUserForChannelOwnership]:\",\r\n          err.message\r\n        );\r\n        setChannelAdmin(false);\r\n        setAdminStatusLoaded(true);\r\n      })\r\n      .finally(() => {\r\n        setAdminStatusLoaded(true);\r\n      });\r\n  };\r\n\r\n  // Render\r\n  return (\r\n    <Container>\r\n      <Interface>\r\n        {controlAt == 0 && <Spambox />}\r\n        {controlAt == 1 && <ViewChannels />}\r\n        {controlAt == 2 && adminStatusLoaded && <ChannelOwnerDashboard />}\r\n        {controlAt == 3 && <Info />}\r\n        {toast && (\r\n          <NotificationToast notification={toast} clearToast={clearToast} />\r\n        )}\r\n        {modalOpen && (\r\n          <AliasVerificationodal\r\n            onClose={() => setModalOpen(false)}\r\n            onSuccess={() => setAliasVerified(true)}\r\n            verificationStatus={aliasVerified}\r\n          />\r\n        )}\r\n      </Interface>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css style\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: block;\r\n  flex-direction: column;\r\n  min-height: calc(100vh - 100px);\r\n`;\r\n\r\nconst Controls = styled.div`\r\n  flex: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ControlButton = styled.div`\r\n  flex: 1 1 21%;\r\n  height: 120px;\r\n  min-width: 200px;\r\n  background: #fff;\r\n\r\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\r\n  border-radius: 15px;\r\n  border: 1px solid rgb(225, 225, 225);\r\n\r\n  border-bottom: 10px solid rgb(180, 180, 180);\r\n  margin: 20px;\r\n  overflow: hidden;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  border-bottom: 10px solid\r\n    ${(props) => (props.active ? props.border : \"rgb(180,180,180)\")};\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`;\r\n\r\nconst ControlImage = styled.img`\r\n  height: 30%;\r\n  margin-right: 15px;\r\n  filter: ${(props) => (props.active ? \"brightness(1)\" : \"brightness(0)\")};\r\n  opacity: ${(props) => (props.active ? \"1\" : \"0.25\")};\r\n\r\n  transition: transform 0.2s ease-out;\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      transform: scale(3.5) translate(-20px, 0px);\r\n      opacity: 0.4;\r\n    `};\r\n`;\r\n\r\nconst ControlText = styled.label`\r\n  font-size: 16px;\r\n  font-weight: 200;\r\n  opacity: ${(props) => (props.active ? \"1\" : \"0.75\")};\r\n\r\n  transition: transform 0.2s ease-out;\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      transform: scale(1.3) translate(-10px, 0px);\r\n    `};\r\n`;\r\n\r\nconst ControlChannelContainer = styled.div`\r\n  margin: 0px 20px;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst ControlChannelImage = styled.img`\r\n  width: 20%;\r\n  margin-bottom: 10px;\r\n  transition: transform 0.2s ease-out;\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      transform: scale(3.5) translate(-40px, 5px);\r\n      opacity: 0.2;\r\n      z-index: 1;\r\n    `};\r\n`;\r\n\r\nconst ControlChannelText = styled.label`\r\n  font-size: 16px;\r\n  font-weight: 300;\r\n  opacity: ${(props) => (props.active ? \"1\" : \"0.75\")};\r\n  transition: transform 0.2s ease-out;\r\n  background: -webkit-linear-gradient(#db268a, #34c6f3);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  z-index: 2;\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      transform: scale(1.1) translate(0px, -20px);\r\n    `};\r\n`;\r\n\r\nconst Interface = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n\r\n  margin-bottom: 15px;\r\n  overflow: hidden;\r\n`;\r\n\r\n// Export Default\r\nexport default InboxPage;\r\n","import React, {useState} from \"react\";\r\nimport ReactGA from \"react-ga\";\r\nimport { ethers } from \"ethers\";\r\nimport styled, { css, useTheme } from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport hex2ascii from \"hex2ascii\";\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nimport config from \"config\";\r\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\r\nimport NotificationToast from \"components/NotificationToast\";\r\nimport AliasVerificationodal from \"components/AliasVerificationModal\";\r\nimport Info from \"segments/Info\";\r\nimport Feedbox from \"segments/Feedbox\";\r\nimport ViewChannels from \"segments/ViewChannels\";\r\nimport ChannelOwnerDashboard from \"segments/ChannelOwnerDashboard\";\r\nimport ChannelCreationDashboard from \"segments/ChannelCreationDashboard\";\r\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\r\nimport UsersDataStore from \"singletons/UsersDataStore\";\r\nimport { postReq } from \"api\";\r\nimport {\r\n  setCoreReadProvider,\r\n  setCoreWriteProvider,\r\n  setCommunicatorReadProvider,\r\n  setCommunicatorWriteProvider,\r\n  setPushAdmin,\r\n} from \"redux/slices/contractSlice\";\r\nimport {\r\n  setUserChannelDetails,\r\n  setCanVerify,\r\n  setDelegatees,\r\n} from \"redux/slices/adminSlice\";\r\nimport { addNewNotification } from \"redux/slices/notificationSlice\";\r\n\r\nimport GLOBALS from \"config/Globals\";\r\n\r\nexport const ALLOWED_CORE_NETWORK = 42; //chainId of network which we have deployed the core contract on\r\nconst CHANNEL_TAB = 1; //Default to 1 which is the channel tab\r\n\r\n// Create Header\r\nfunction InboxPage({ loadTeaser, playTeaser }) {\r\n  ReactGA.pageview(\"/channels\");\r\n\r\n  const dispatch = useDispatch();\r\n  const { account, library, chainId } = useWeb3React();\r\n  const {\r\n    epnsReadProvider,\r\n    epnsWriteProvider,\r\n    epnsCommReadProvider,\r\n  } = useSelector((state) => state.contracts);\r\n\r\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\r\n  const INITIAL_OPEN_TAB = CHANNEL_TAB; //if they are not on a core network.redirect then to the notifications page\r\n\r\n  const [controlAt, setControlAt] = React.useState(0);\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [adminStatusLoaded, setAdminStatusLoaded] = React.useState(false);\r\n  const [aliasEthAccount, setAliasEthAccount] = React.useState(null);\r\n  const [aliasVerified, setAliasVerified] = React.useState(null); // null means error, false means unverified and true means verified\r\n  const [channelAdmin, setChannelAdmin] = React.useState(false);\r\n  const [channelJson, setChannelJson] = React.useState([]);\r\n\r\n  // toast related section\r\n  const [toast, showToast] = React.useState(null);\r\n  const clearToast = () => showToast(null);\r\n  const showNetworkToast = () => {\r\n    showToast({\r\n      notificationTitle: (\r\n        <span style={{ color: \"#e20880\" }}> Invalid Network </span>\r\n      ),\r\n      notificationBody:\r\n        \"Please connect to the Ethereum network to access channels\",\r\n    });\r\n  };\r\n  /**\r\n   * Event listener for new notifications\r\n   */\r\n  const listenFornewNotifications = () => {\r\n    const event = \"SendNotification\";\r\n    //callback function for listener\r\n    const cb = async (eventChannelAddress, eventUserAddress, identityHex) => {\r\n      const userAddress = account;\r\n      const identity = hex2ascii(identityHex);\r\n      const notificationId = identity\r\n        .concat(\"+\")\r\n        .concat(eventChannelAddress)\r\n        .concat(\"+\")\r\n        .concat(eventUserAddress)\r\n        .toLocaleLowerCase();\r\n      const ipfsId = identity.split(\"+\")[1];\r\n      const channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(\r\n        eventChannelAddress\r\n      );\r\n\r\n      // Form Gateway URL\r\n      const url = \"https://ipfs.io/ipfs/\" + ipfsId;\r\n      fetch(url)\r\n        .then((result) => result.json())\r\n        .then(async (result) => {\r\n          const ipfsNotification = { ...result };\r\n          const notificationTitle =\r\n            ipfsNotification.notification.title !== \"\"\r\n              ? ipfsNotification.notification.title\r\n              : channelJson.name;\r\n          const toastMessage = {\r\n            notificationTitle,\r\n            notificationBody: ipfsNotification.notification.body,\r\n          };\r\n          const notificationObject = {\r\n            title: notificationTitle,\r\n            message: ipfsNotification.data.amsg,\r\n            cta: ipfsNotification.data.acta,\r\n            app: channelJson.name,\r\n            icon: channelJson.icon,\r\n            image: ipfsNotification.data.aimg,\r\n          };\r\n\r\n          if (ipfsNotification.data.type === \"1\") {\r\n            const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(\r\n              eventChannelAddress\r\n            );\r\n            const isSubscribed = channelSubscribers.find((sub) => {\r\n              return sub.toLowerCase() === account.toLowerCase();\r\n            });\r\n            if (isSubscribed) {\r\n              console.log(\"message recieved\", notificationObject);\r\n              showToast(toastMessage);\r\n              dispatch(addNewNotification(notificationObject));\r\n            }\r\n          } else if (userAddress === eventUserAddress) {\r\n            showToast(toastMessage);\r\n            dispatch(addNewNotification(notificationObject));\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\r\n            \"!!!Error, getting new notification data from ipfs --> %o\",\r\n            err\r\n          );\r\n        });\r\n    };\r\n    epnsCommReadProvider.on(event, cb);\r\n    return () => epnsCommReadProvider.off.bind(epnsCommReadProvider, event, cb); //when we unmount we remove the listener\r\n  };\r\n\r\n  //clear toast variable after it is shown\r\n  React.useEffect(() => {\r\n    if (toast) {\r\n      clearToast();\r\n    }\r\n  }, [toast]);\r\n  // toast related section\r\n\r\n  /**\r\n   * Logic to get channel alias and alias verification status as well as create instances of core and comunicator contract\r\n   */\r\n  React.useEffect(() => {\r\n    (async function init() {\r\n      const coreProvider = onCoreNetwork\r\n        ? library\r\n        : ethers.getDefaultProvider(ALLOWED_CORE_NETWORK, {\r\n            etherscan: config.etherscanToken,\r\n          });\r\n      // if we are not on the core network then check for if this account is an alias for another channel\r\n      if (!onCoreNetwork) {\r\n        // get the eth address of the alias address, in order to properly render information about the channel\r\n        const aliasEth = await postReq(\"/channels/get_eth_address\", {\r\n          aliasAddress: account,\r\n          op: \"read\",\r\n        }).then(({ data }) => {\r\n          console.log({ data });\r\n          const ethAccount = data;\r\n          if (ethAccount) {\r\n            setAliasEthAccount(ethAccount.ethAddress);\r\n          }\r\n          return data;\r\n        });\r\n        if (aliasEth) {\r\n          // if an alias exists, check if its verified.\r\n          await postReq(\"/channels/get_alias_verification_status\", {\r\n            aliasAddress: account,\r\n            op: \"read\",\r\n          }).then(({ data }) => {\r\n            // if it returns undefined then we need to let them know to verify their channel\r\n            if (!data) {\r\n              setAliasVerified(false);\r\n              return;\r\n            }\r\n            const { status } = data;\r\n            setAliasVerified(status || null);\r\n            return data;\r\n          });\r\n        }\r\n      }\r\n      // if we are not on the core network then fetch if there is an alias address from the api\r\n      // inititalise the read contract for the core network\r\n      const coreContractInstance = new ethers.Contract(\r\n        addresses.epnscore,\r\n        abis.epnscore,\r\n        coreProvider\r\n      );\r\n      // initialise the read contract for the communicator function\r\n      const commAddress = onCoreNetwork\r\n        ? addresses.epnsEthComm\r\n        : addresses.epnsPolyComm;\r\n      const commContractInstance = new ethers.Contract(\r\n        commAddress,\r\n        abis.epnsComm,\r\n        library\r\n      );\r\n      dispatch(setCommunicatorReadProvider(commContractInstance));\r\n      dispatch(setCoreReadProvider(coreContractInstance));\r\n      // initialise the read contract for the communicator function\r\n      if (!!(library && account)) {\r\n        let signer = library.getSigner(account);\r\n        const coreSignerInstance = new ethers.Contract(\r\n          addresses.epnscore,\r\n          abis.epnscore,\r\n          signer\r\n        );\r\n        const communicatorSignerInstance = new ethers.Contract(\r\n          commAddress,\r\n          abis.epnsComm,\r\n          signer\r\n        );\r\n        dispatch(setCoreWriteProvider(coreSignerInstance));\r\n        dispatch(setCommunicatorWriteProvider(communicatorSignerInstance));\r\n      }\r\n    })();\r\n  }, [account, chainId]);\r\n\r\n  /**\r\n   * When we instantiate the contract instances, fetch basic information about the user\r\n   * Corresponding channel owned.\r\n   */\r\n  React.useEffect(() => {\r\n    if (!epnsReadProvider || !epnsCommReadProvider) return;\r\n    // Reset when account refreshes\r\n    setChannelAdmin(false);\r\n    dispatch(setUserChannelDetails(null));\r\n    setAdminStatusLoaded(false);\r\n    userClickedAt(INITIAL_OPEN_TAB);\r\n    setChannelJson([]);\r\n    // save push admin to global state\r\n    epnsReadProvider.pushChannelAdmin()\r\n    .then((response) => {\r\n      dispatch(setPushAdmin(response));\r\n    })\r\n    .catch(err =>{\r\n      console.log({err})\r\n    });\r\n\r\n    // EPNS Read Provider Set\r\n    if (epnsReadProvider != null && epnsCommReadProvider != null) {\r\n      // Instantiate Data Stores\r\n      UsersDataStore.instance.init(\r\n        account,\r\n        epnsReadProvider,\r\n        epnsCommReadProvider\r\n      );\r\n      ChannelsDataStore.instance.init(\r\n        account,\r\n        epnsReadProvider,\r\n        epnsCommReadProvider\r\n      );\r\n      checkUserForChannelOwnership();\r\n      listenFornewNotifications();\r\n      fetchDelegators();\r\n    }\r\n  }, [epnsReadProvider, epnsCommReadProvider]);\r\n\r\n  // handle user action at control center\r\n  const userClickedAt = (controlIndex) => {\r\n    setControlAt(controlIndex);\r\n  };\r\n\r\n  // fetch all the channels who have delegated to this account\r\n  const fetchDelegators = () => {\r\n    postReq(\"/channels/delegatee/get_channels\", {\r\n      delegateAddress: account,\r\n      op: \"read\",\r\n    })\r\n      .then(async ({ data: delegators }) => {\r\n        // if there are actual delegators\r\n        // fetch basic information abouot the channels and store it to state\r\n        if (delegators && delegators.channelOwners) {\r\n          const channelInformationPromise = [\r\n            ...new Set([account, ...delegators.channelOwners])//make the accounts unique\r\n          ].map((channelAddress) =>\r\n            ChannelsDataStore.instance\r\n              .getChannelJsonAsync(channelAddress)\r\n              .then((res) => ({ ...res, address: channelAddress }))\r\n              .catch(() => false)\r\n          );\r\n          const channelInformation = await Promise.all(\r\n            channelInformationPromise\r\n          );\r\n          dispatch(setDelegatees(channelInformation.filter(Boolean)));\r\n          // fetch the json information about this delegatee channel and add to global state\r\n        } else {\r\n          dispatch(setDelegatees([]));\r\n        }\r\n      })\r\n      .catch(async (err) => {\r\n        console.log({ err });\r\n      });\r\n  };\r\n\r\n  // Check if a user is a channel or not\r\n  const checkUserForChannelOwnership = async () => {\r\n    // Check if account is admin or not and handle accordingly\r\n    const ownerAccount = !onCoreNetwork ? aliasEthAccount : account;\r\n    EPNSCoreHelper.getChannelJsonFromUserAddress(ownerAccount, epnsReadProvider)\r\n      .then(async (response) => {\r\n        // if channel admin, then get if the channel is verified or not, then also fetch more details about the channel\r\n        const verificationStatus = await epnsWriteProvider.getChannelVerfication(\r\n          ownerAccount\r\n        );\r\n        const channelJson = await epnsWriteProvider.channels(ownerAccount);\r\n        const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(\r\n          ownerAccount\r\n        );\r\n        dispatch(\r\n          setUserChannelDetails({\r\n            ...response,\r\n            ...channelJson,\r\n            subscribers: channelSubscribers,\r\n          })\r\n        );\r\n        dispatch(setCanVerify(Boolean(verificationStatus)));\r\n        setChannelJson(response);\r\n        setChannelAdmin(true);\r\n        setAdminStatusLoaded(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\r\n          \"There was an error [checkUserForChannelOwnership]:\",\r\n          err.message\r\n        );\r\n        setChannelAdmin(false);\r\n        setAdminStatusLoaded(true);\r\n      })\r\n      .finally(() => {\r\n        setAdminStatusLoaded(true);\r\n      });\r\n  };\r\n\r\n  // Render\r\n  return (\r\n    <>\r\n    <Container>\r\n      <Interface>\r\n        {controlAt == 0 && <Feedbox />}\r\n        {controlAt == 1 && <ViewChannels loadTeaser={loadTeaser} playTeaser={playTeaser} />}\r\n        {controlAt == 2 && adminStatusLoaded && <ChannelOwnerDashboard />}\r\n        {controlAt == 3 && <Info />}\r\n        {toast && (\r\n          <NotificationToast notification={toast} clearToast={clearToast} />\r\n        )}\r\n        {modalOpen && (\r\n          <AliasVerificationodal\r\n            onClose={() => setModalOpen(false)}\r\n            onSuccess={() => setAliasVerified(true)}\r\n            verificationStatus={aliasVerified}\r\n          />\r\n        )}\r\n      </Interface>\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n// css style\r\nconst Container = styled.div`\r\n  display: flex;\r\n  background: ${props => props.theme.mainBg};\r\n  height: calc(100vh - ${GLOBALS.CONSTANTS.HEADER_HEIGHT}px - 52px - ${props => props.theme.interfaceTopPadding});\r\n  align-self: stretch;\r\n`;\r\n\r\nconst Controls = styled.div`\r\n  flex: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ControlButton = styled.div`\r\n  flex: 1 1 21%;\r\n  height: 120px;\r\n  min-width: 200px;\r\n  background: #fff;\r\n\r\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\r\n  border-radius: 15px;\r\n  border: 1px solid rgb(225, 225, 225);\r\n\r\n  border-bottom: 10px solid rgb(180, 180, 180);\r\n  margin: 20px;\r\n  overflow: hidden;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  border-bottom: 10px solid\r\n    ${(props) => (props.active ? props.border : \"rgb(180,180,180)\")};\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`;\r\n\r\nconst ControlImage = styled.img`\r\n  height: 30%;\r\n  margin-right: 15px;\r\n  filter: ${(props) => (props.active ? \"brightness(1)\" : \"brightness(0)\")};\r\n  opacity: ${(props) => (props.active ? \"1\" : \"0.25\")};\r\n\r\n  transition: transform 0.2s ease-out;\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      transform: scale(3.5) translate(-20px, 0px);\r\n      opacity: 0.4;\r\n    `};\r\n`;\r\n\r\nconst ControlText = styled.label`\r\n  font-size: 16px;\r\n  font-weight: 200;\r\n  opacity: ${(props) => (props.active ? \"1\" : \"0.75\")};\r\n\r\n  transition: transform 0.2s ease-out;\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      transform: scale(1.3) translate(-10px, 0px);\r\n    `};\r\n`;\r\n\r\nconst ControlChannelContainer = styled.div`\r\n  margin: 0px 20px;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst ControlChannelImage = styled.img`\r\n  width: 20%;\r\n  margin-bottom: 10px;\r\n  transition: transform 0.2s ease-out;\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      transform: scale(3.5) translate(-40px, 5px);\r\n      opacity: 0.2;\r\n      z-index: 1;\r\n    `};\r\n`;\r\n\r\nconst ControlChannelText = styled.label`\r\n  font-size: 16px;\r\n  font-weight: 300;\r\n  opacity: ${(props) => (props.active ? \"1\" : \"0.75\")};\r\n  transition: transform 0.2s ease-out;\r\n  background: -webkit-linear-gradient(#db268a, #34c6f3);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  z-index: 2;\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      transform: scale(1.1) translate(0px, -20px);\r\n    `};\r\n`;\r\n\r\nconst Interface = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n\r\n  overflow: hidden;\r\n`;\r\n\r\n// Export Default\r\nexport default InboxPage;\r\n","import React, { useState } from \"react\";\r\nimport ReactGA from \"react-ga\";\r\nimport { ethers } from \"ethers\";\r\nimport styled, { css, useTheme } from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport hex2ascii from \"hex2ascii\";\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nimport config from \"config\";\r\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\r\nimport NotificationToast from \"components/NotificationToast\";\r\nimport AliasVerificationodal from \"components/AliasVerificationModal\";\r\nimport Info from \"segments/Info\";\r\nimport Feedbox from \"segments/Feedbox\";\r\nimport ViewChannels from \"segments/ViewChannels\";\r\nimport ChannelOwnerDashboard from \"segments/ChannelOwnerDashboard\";\r\nimport ChannelCreationDashboard from \"segments/ChannelCreationDashboard\";\r\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\r\nimport UsersDataStore from \"singletons/UsersDataStore\";\r\nimport { postReq } from \"api\";\r\nimport {\r\n  setCoreReadProvider,\r\n  setCoreWriteProvider,\r\n  setCommunicatorReadProvider,\r\n  setCommunicatorWriteProvider,\r\n  setPushAdmin,\r\n} from \"redux/slices/contractSlice\";\r\nimport {\r\n  setUserChannelDetails,\r\n  setCanVerify,\r\n  setDelegatees,\r\n} from \"redux/slices/adminSlice\";\r\nimport { addNewNotification } from \"redux/slices/notificationSlice\";\r\nexport const ALLOWED_CORE_NETWORK = 42; //chainId of network which we have deployed the core contract on\r\nconst CHANNEL_TAB = 2; //Default to 1 which is the channel tab\r\n\r\n// Create Header\r\nfunction ChannelDashboardPage() {\r\n  ReactGA.pageview(\"/channel_dashboard\");\r\n\r\n  const themes = useTheme();\r\n\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const { account, library, chainId } = useWeb3React();\r\n  const {\r\n    epnsReadProvider,\r\n    epnsWriteProvider,\r\n    epnsCommReadProvider,\r\n  } = useSelector((state) => state.contracts);\r\n\r\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\r\n  const INITIAL_OPEN_TAB = CHANNEL_TAB; //if they are not on a core network.redirect then to the notifications page\r\n\r\n  const [controlAt, setControlAt] = React.useState(0);\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [adminStatusLoaded, setAdminStatusLoaded] = React.useState(false);\r\n  const [aliasEthAccount, setAliasEthAccount] = React.useState(null);\r\n  const [aliasVerified, setAliasVerified] = React.useState(null); // null means error, false means unverified and true means verified\r\n  const [channelAdmin, setChannelAdmin] = React.useState(false);\r\n  const [channelJson, setChannelJson] = React.useState([]);\r\n\r\n  // toast related section\r\n  const [toast, showToast] = React.useState(null);\r\n  const clearToast = () => showToast(null);\r\n  const showNetworkToast = () => {\r\n    showToast({\r\n      notificationTitle: (\r\n        <span style={{ color: \"#e20880\" }}> Invalid Network </span>\r\n      ),\r\n      notificationBody:\r\n        \"Please connect to the Ethereum network to access channels\",\r\n    });\r\n  };\r\n  /**\r\n   * Event listener for new notifications\r\n   */\r\n  const listenFornewNotifications = () => {\r\n    const event = \"SendNotification\";\r\n    //callback function for listener\r\n    const cb = async (eventChannelAddress, eventUserAddress, identityHex) => {\r\n      const userAddress = account;\r\n      const identity = hex2ascii(identityHex);\r\n      const notificationId = identity\r\n        .concat(\"+\")\r\n        .concat(eventChannelAddress)\r\n        .concat(\"+\")\r\n        .concat(eventUserAddress)\r\n        .toLocaleLowerCase();\r\n      const ipfsId = identity.split(\"+\")[1];\r\n      const channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(\r\n        eventChannelAddress\r\n      );\r\n\r\n      // Form Gateway URL\r\n      const url = \"https://ipfs.io/ipfs/\" + ipfsId;\r\n      fetch(url)\r\n        .then((result) => result.json())\r\n        .then(async (result) => {\r\n          const ipfsNotification = { ...result };\r\n          const notificationTitle =\r\n            ipfsNotification.notification.title !== \"\"\r\n              ? ipfsNotification.notification.title\r\n              : channelJson.name;\r\n          const toastMessage = {\r\n            notificationTitle,\r\n            notificationBody: ipfsNotification.notification.body,\r\n          };\r\n          const notificationObject = {\r\n            title: notificationTitle,\r\n            message: ipfsNotification.data.amsg,\r\n            cta: ipfsNotification.data.acta,\r\n            app: channelJson.name,\r\n            icon: channelJson.icon,\r\n            image: ipfsNotification.data.aimg,\r\n          };\r\n\r\n          if (ipfsNotification.data.type === \"1\") {\r\n            const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(\r\n              eventChannelAddress\r\n            );\r\n            const isSubscribed = channelSubscribers.find((sub) => {\r\n              return sub.toLowerCase() === account.toLowerCase();\r\n            });\r\n            if (isSubscribed) {\r\n              console.log(\"message recieved\", notificationObject);\r\n              showToast(toastMessage);\r\n              dispatch(addNewNotification(notificationObject));\r\n            }\r\n          } else if (userAddress === eventUserAddress) {\r\n            showToast(toastMessage);\r\n            dispatch(addNewNotification(notificationObject));\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\r\n            \"!!!Error, getting new notification data from ipfs --> %o\",\r\n            err\r\n          );\r\n        });\r\n    };\r\n    epnsCommReadProvider.on(event, cb);\r\n    return () => epnsCommReadProvider.off.bind(epnsCommReadProvider, event, cb); //when we unmount we remove the listener\r\n  };\r\n\r\n  //clear toast variable after it is shown\r\n  React.useEffect(() => {\r\n    if (toast) {\r\n      clearToast();\r\n    }\r\n  }, [toast]);\r\n  // toast related section\r\n\r\n  /**\r\n   * Logic to get channel alias and alias verification status as well as create instances of core and comunicator contract\r\n   */\r\n  React.useEffect(() => {\r\n    (async function init() {\r\n      const coreProvider = onCoreNetwork\r\n        ? library\r\n        : ethers.getDefaultProvider(ALLOWED_CORE_NETWORK, {\r\n            etherscan: config.etherscanToken,\r\n          });\r\n      // if we are not on the core network then check for if this account is an alias for another channel\r\n      if (!onCoreNetwork) {\r\n        // get the eth address of the alias address, in order to properly render information about the channel\r\n        const aliasEth = await postReq(\"/channels/get_eth_address\", {\r\n          aliasAddress: account,\r\n          op: \"read\",\r\n        }).then(({ data }) => {\r\n          console.log({ data });\r\n          const ethAccount = data;\r\n          if (ethAccount) {\r\n            setAliasEthAccount(ethAccount.ethAddress);\r\n          }\r\n          return data;\r\n        });\r\n        if (aliasEth) {\r\n          // if an alias exists, check if its verified.\r\n          await postReq(\"/channels/get_alias_verification_status\", {\r\n            aliasAddress: account,\r\n            op: \"read\",\r\n          }).then(({ data }) => {\r\n            // if it returns undefined then we need to let them know to verify their channel\r\n            if (!data) {\r\n              setAliasVerified(false);\r\n              return;\r\n            }\r\n            const { status } = data;\r\n            setAliasVerified(status || null);\r\n            return data;\r\n          });\r\n        }\r\n      }\r\n      // if we are not on the core network then fetch if there is an alias address from the api\r\n      // inititalise the read contract for the core network\r\n      const coreContractInstance = new ethers.Contract(\r\n        addresses.epnscore,\r\n        abis.epnscore,\r\n        coreProvider\r\n      );\r\n      // initialise the read contract for the communicator function\r\n      const commAddress = onCoreNetwork\r\n        ? addresses.epnsEthComm\r\n        : addresses.epnsPolyComm;\r\n      const commContractInstance = new ethers.Contract(\r\n        commAddress,\r\n        abis.epnsComm,\r\n        library\r\n      );\r\n      dispatch(setCommunicatorReadProvider(commContractInstance));\r\n      dispatch(setCoreReadProvider(coreContractInstance));\r\n      // initialise the read contract for the communicator function\r\n      if (!!(library && account)) {\r\n        let signer = library.getSigner(account);\r\n        const coreSignerInstance = new ethers.Contract(\r\n          addresses.epnscore,\r\n          abis.epnscore,\r\n          signer\r\n        );\r\n        const communicatorSignerInstance = new ethers.Contract(\r\n          commAddress,\r\n          abis.epnsComm,\r\n          signer\r\n        );\r\n        dispatch(setCoreWriteProvider(coreSignerInstance));\r\n        dispatch(setCommunicatorWriteProvider(communicatorSignerInstance));\r\n      }\r\n    })();\r\n  }, [account, chainId]);\r\n\r\n  /**\r\n   * When we instantiate the contract instances, fetch basic information about the user\r\n   * Corresponding channel owned.\r\n   */\r\n  React.useEffect(() => {\r\n    if (!epnsReadProvider || !epnsCommReadProvider) return;\r\n    // Reset when account refreshes\r\n    setChannelAdmin(false);\r\n    dispatch(setUserChannelDetails(null));\r\n    setAdminStatusLoaded(false);\r\n    userClickedAt(INITIAL_OPEN_TAB);\r\n    setChannelJson([]);\r\n    // save push admin to global state\r\n    epnsReadProvider.pushChannelAdmin()\r\n    .then((response) => {\r\n      dispatch(setPushAdmin(response));\r\n    })\r\n    .catch(err =>{\r\n      console.log({err})\r\n    });\r\n\r\n    // EPNS Read Provider Set\r\n    if (epnsReadProvider != null && epnsCommReadProvider != null) {\r\n      // Instantiate Data Stores\r\n      UsersDataStore.instance.init(\r\n        account,\r\n        epnsReadProvider,\r\n        epnsCommReadProvider\r\n      );\r\n      ChannelsDataStore.instance.init(\r\n        account,\r\n        epnsReadProvider,\r\n        epnsCommReadProvider\r\n      );\r\n      checkUserForChannelOwnership();\r\n      listenFornewNotifications();\r\n      fetchDelegators();\r\n    }\r\n  }, [epnsReadProvider, epnsCommReadProvider]);\r\n\r\n  // handle user action at control center\r\n  const userClickedAt = (controlIndex) => {\r\n    setControlAt(controlIndex);\r\n  };\r\n\r\n  // fetch all the channels who have delegated to this account\r\n  const fetchDelegators = () => {\r\n    postReq(\"/channels/delegatee/get_channels\", {\r\n      delegateAddress: account,\r\n      op: \"read\",\r\n    })\r\n      .then(async ({ data: delegators }) => {\r\n        // if there are actual delegators\r\n        // fetch basic information abouot the channels and store it to state\r\n        if (delegators && delegators.channelOwners) {\r\n          const channelInformationPromise = [\r\n            ...new Set([account, ...delegators.channelOwners])//make the accounts unique\r\n          ].map((channelAddress) =>\r\n            ChannelsDataStore.instance\r\n              .getChannelJsonAsync(channelAddress)\r\n              .then((res) => ({ ...res, address: channelAddress }))\r\n              .catch(() => false)\r\n          );\r\n          const channelInformation = await Promise.all(\r\n            channelInformationPromise\r\n          );\r\n          dispatch(setDelegatees(channelInformation.filter(Boolean)));\r\n          // fetch the json information about this delegatee channel and add to global state\r\n        } else {\r\n          dispatch(setDelegatees([]));\r\n        }\r\n      })\r\n      .catch(async (err) => {\r\n        console.log({ err });\r\n      });\r\n  };\r\n\r\n  // Check if a user is a channel or not\r\n  const checkUserForChannelOwnership = async () => {\r\n    // Check if account is admin or not and handle accordingly\r\n    const ownerAccount = !onCoreNetwork ? aliasEthAccount : account;\r\n    EPNSCoreHelper.getChannelJsonFromUserAddress(ownerAccount, epnsReadProvider)\r\n      .then(async (response) => {\r\n        // if channel admin, then get if the channel is verified or not, then also fetch more details about the channel\r\n        const verificationStatus = await epnsWriteProvider.getChannelVerfication(\r\n          ownerAccount\r\n        );\r\n        const channelJson = await epnsWriteProvider.channels(ownerAccount);\r\n        const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(\r\n          ownerAccount\r\n        );\r\n        dispatch(\r\n          setUserChannelDetails({\r\n            ...response,\r\n            ...channelJson,\r\n            subscribers: channelSubscribers,\r\n          })\r\n        );\r\n        dispatch(setCanVerify(Boolean(verificationStatus)));\r\n        setChannelJson(response);\r\n        setChannelAdmin(true);\r\n        setAdminStatusLoaded(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\r\n          \"There was an error [checkUserForChannelOwnership]:\",\r\n          err.message\r\n        );\r\n        setChannelAdmin(false);\r\n        setAdminStatusLoaded(true);\r\n      })\r\n      .finally(() => {\r\n        setAdminStatusLoaded(true);\r\n      });\r\n  };\r\n\r\n  // Render\r\n  return (\r\n    <Container>\r\n      <Interface>\r\n        {controlAt == 0 && <Feedbox />}\r\n        {controlAt == 1 && <ViewChannels />}\r\n        {controlAt == 2 && adminStatusLoaded && <ChannelOwnerDashboard />}\r\n        {controlAt == 3 && <Info />}\r\n        {toast && (\r\n          <NotificationToast notification={toast} clearToast={clearToast} />\r\n        )}\r\n        {modalOpen && (\r\n          <AliasVerificationodal\r\n            onClose={() => setModalOpen(false)}\r\n            onSuccess={() => setAliasVerified(true)}\r\n            verificationStatus={aliasVerified}\r\n          />\r\n        )}\r\n      </Interface>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css style\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: block;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Controls = styled.div`\r\n  flex: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ControlButton = styled.div`\r\n  flex: 1 1 21%;\r\n  height: 120px;\r\n  min-width: 200px;\r\n  background: #fff;\r\n\r\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\r\n  border-radius: 15px;\r\n  border: 1px solid rgb(225, 225, 225);\r\n\r\n  border-bottom: 10px solid rgb(180, 180, 180);\r\n  margin: 20px;\r\n  overflow: hidden;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  border-bottom: 10px solid\r\n    ${(props) => (props.active ? props.border : \"rgb(180,180,180)\")};\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`;\r\n\r\nconst ControlImage = styled.img`\r\n  height: 30%;\r\n  margin-right: 15px;\r\n  filter: ${(props) => (props.active ? \"brightness(1)\" : \"brightness(0)\")};\r\n  opacity: ${(props) => (props.active ? \"1\" : \"0.25\")};\r\n\r\n  transition: transform 0.2s ease-out;\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      transform: scale(3.5) translate(-20px, 0px);\r\n      opacity: 0.4;\r\n    `};\r\n`;\r\n\r\nconst ControlText = styled.label`\r\n  font-size: 16px;\r\n  font-weight: 200;\r\n  opacity: ${(props) => (props.active ? \"1\" : \"0.75\")};\r\n\r\n  transition: transform 0.2s ease-out;\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      transform: scale(1.3) translate(-10px, 0px);\r\n    `};\r\n`;\r\n\r\nconst ControlChannelContainer = styled.div`\r\n  margin: 0px 20px;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst ControlChannelImage = styled.img`\r\n  width: 20%;\r\n  margin-bottom: 10px;\r\n  transition: transform 0.2s ease-out;\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      transform: scale(3.5) translate(-40px, 5px);\r\n      opacity: 0.2;\r\n      z-index: 1;\r\n    `};\r\n`;\r\n\r\nconst ControlChannelText = styled.label`\r\n  font-size: 16px;\r\n  font-weight: 300;\r\n  opacity: ${(props) => (props.active ? \"1\" : \"0.75\")};\r\n  transition: transform 0.2s ease-out;\r\n  background: -webkit-linear-gradient(#db268a, #34c6f3);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  z-index: 2;\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      transform: scale(1.1) translate(0px, -20px);\r\n    `};\r\n`;\r\n\r\nconst Interface = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n\r\n  margin-bottom: 15px;\r\n  overflow: hidden;\r\n`;\r\n\r\n// Export Default\r\nexport default ChannelDashboardPage;\r\n","import React from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport styled, {useTheme} from \"styled-components\";\r\nimport { Section, Content, Item, ItemH, Span, H2, B, A, H3 } from \"components/SharedStyling\";\r\n\r\nimport Info from \"segments/Info\";\r\n\r\nimport GLOBALS from \"config/Globals\";\r\n\r\n// Create Header\r\nfunction ReceiveNotifsPage() {\r\n  ReactGA.pageview(\"/receive\");\r\n\r\n  // get themes\r\n  const themes = useTheme();\r\n\r\n  // Render\r\n  return (\r\n    <Container>\r\n      <Content className=\"contentBox\" padding=\"20px 0px 0px 0px\">\r\n        <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 20px\">\r\n\r\n          <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 0px 0px 0px\">\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\" margin=\"10px 0px 20px 0px\">\r\n              <Span weight=\"200\" color={themes.fontColor}>Receive </Span><Span bg=\"#e20880\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Notifications</Span>\r\n            </H2>\r\n            <H3 maxWidth=\"768px\" color={themes.fontColorSecondary}>The following frontends enables receiving push alerts for your wallet. More coming soon!</H3>\r\n          </Item>\r\n\r\n          <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 0px 20px 0px\">\r\n            <Info />\r\n          </Item>\r\n\r\n        </Item>\r\n      </Content>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css style\r\nconst Container = styled(Section)`\r\n  flex: 1;\r\n  flex-direction: column;\r\n  height: calc(100vh - ${GLOBALS.CONSTANTS.HEADER_HEIGHT}px - 52px - ${props => props.theme.interfaceTopPadding});\r\n  background: ${props => props.theme.mainBg};\r\n  align-self: stretch;\r\n`;\r\n\r\n// Export Default\r\nexport default ReceiveNotifsPage;\r\n","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport Blockies from \"components/BlockiesIdenticon\";\r\nimport {Section, Content, Item, ItemH, ItemBreak, A, B, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\r\nimport { Device } from 'assets/Device';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport Skeleton from '@yisheng90/react-loading';\r\nimport { FiTwitter } from 'react-icons/fi';\r\nimport { GoVerified } from 'react-icons/go';\r\nimport { IoMdShareAlt } from 'react-icons/io';\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { ethers } from \"ethers\";\r\n// import { keccak256, arrayify, hashMessage, recoverPublicKey } from 'ethers/utils';\r\n\r\nfunction ViewDelegateeItem({ delegateeObject, epnsToken, pushBalance, theme }) {\r\n  const { account, library } = useWeb3React();\r\n  const [ loading, setLoading ] = React.useState(true);\r\n  const [ txInProgress, setTxInProgress ] = React.useState(false);\r\n  const [ isBalance, setIsBalance ] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setLoading(false);\r\n    if(pushBalance !== 0){\r\n      setIsBalance(true)\r\n    }\r\n  }, [account, delegateeObject]);\r\n\r\n  const delegateAction = async (delegateeAddress) => {\r\n    setTxInProgress(true);\r\n    if (!isBalance) {\r\n      toast.dark(\"No PUSH to Delegate!\", {\r\n        position: \"bottom-right\",\r\n        type: toast.TYPE.ERROR,\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n\r\n      setTxInProgress(false);\r\n      return;\r\n    }\r\n    let sendWithTxPromise;\r\n    sendWithTxPromise = epnsToken.delegate(delegateeAddress);\r\n    sendWithTxPromise\r\n      .then(async tx => {\r\n        let txToast = toast.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\r\n          position: \"bottom-right\",\r\n          autoClose: false,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n        try {\r\n          await library.waitForTransaction(tx.hash);\r\n          toast.update(txToast, {\r\n            render: \"Transaction Completed!\",\r\n            type: toast.TYPE.SUCCESS,\r\n            autoClose: 5000\r\n          });\r\n          setTxInProgress(false);\r\n        }\r\n        catch(e) {\r\n          toast.update(txToast, {\r\n            render: \"Transaction Failed! (\" + e.name + \")\",\r\n            type: toast.TYPE.ERROR,\r\n            autoClose: 5000\r\n          });\r\n          setTxInProgress(false);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        toast.dark('Transaction Cancelled!', {\r\n          position: \"bottom-right\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n        setTxInProgress(false);\r\n      })\r\n  }\r\n\r\n  // toast customize\r\n  const LoaderToast = ({ msg, color }) => (\r\n    <Toaster>\r\n      <Loader\r\n       type=\"Oval\"\r\n       color={color}\r\n       height={30}\r\n       width={30}\r\n      />\r\n      <ToasterMsg>{msg}</ToasterMsg>\r\n    </Toaster>\r\n  )\r\n\r\n  // render\r\n  return (\r\n    <Item\r\n      key={delegateeObject.wallet}\r\n    >\r\n      <DelegateeItem\r\n        theme={theme}\r\n      >\r\n        <DelegateeImageOuter>\r\n          <DelegateeImageInner>\r\n            {loading &&\r\n              <Skeleton color=\"#eee\" width=\"100%\" height=\"100%\" />\r\n            }\r\n            {!loading && delegateeObject.pic &&\r\n              <Image\r\n                src={`./delegatees/${delegateeObject.pic}.jpg`}\r\n                srcSet={`./delegatees/${delegateeObject.pic}@2x.jpg 2x, ./delegatees/${delegateeObject.pic}@3x.jpg 3x`}\r\n                alt= {delegateeObject.name}\r\n              />\r\n            }\r\n            {!loading && !delegateeObject.pic &&\r\n              <Blockies seed={delegateeObject.wallet.toLowerCase()} opts={{seed: delegateeObject.wallet.toLowerCase(), size: 30, scale: 10}}/>\r\n            }\r\n          </DelegateeImageInner>\r\n\r\n          <ItemH\r\n            position=\"absolute\"\r\n            top=\"10px\"\r\n            left=\"10px\"\r\n            bg=\"#00000088\"\r\n            padding=\"6px 10px\"\r\n            radius=\"22px\"\r\n          >\r\n            <GoVerified size={12} color=\"#fff\"/>\r\n            <Span size=\"12px\" color=\"#fff\" padding=\"0px 0px 0px 10px\" spacing=\"0.2em\" weight=\"600\" textAlign=\"center\">{delegateeObject.votingPower.toLocaleString()}</Span>\r\n          </ItemH>\r\n        </DelegateeImageOuter>\r\n\r\n        <DelegateeProfile>\r\n          <Item>\r\n            <ItemH>\r\n              <Span weight=\"400\" textAlign=\"center\">{delegateeObject.name}</Span>\r\n              <Anchor\r\n                href={delegateeObject.url}\r\n                target=\"_blank\"\r\n                title={\"Visit Twitter profile of \" + delegateeObject.name}\r\n                bg=\"transparent\"\r\n                radius=\"4px\"\r\n                padding=\"4px\"\r\n                margin=\"0px 6px\"\r\n              >\r\n                <FiTwitter size={12} color=\"#35c5f3\" />\r\n              </Anchor>\r\n            </ItemH>\r\n\r\n            <DelegateeWallet size=\"0.5em\" color=\"#aaa\" spacing=\"0.2em\" weight=\"600\" textAlign=\"center\">{delegateeObject.wallet}</DelegateeWallet>\r\n          </Item>\r\n          <ItemBreak></ItemBreak>\r\n          <UnsubscribeButton >\r\n            <ActionTitle onClick={() => {delegateAction(delegateeObject.wallet)\r\n            }}\r\n              >Delegate</ActionTitle>\r\n          </UnsubscribeButton>\r\n\r\n          <Item\r\n            position=\"absolute\"\r\n            bottom=\"2px\"\r\n            left=\"-2px\"\r\n            padding=\"4px\"\r\n          >\r\n            <Anchor\r\n              href={delegateeObject.forum}\r\n              target=\"_blank\"\r\n              title={\"Visit forum post of \" + delegateeObject.name}\r\n              bg=\"transparent\"\r\n              radius=\"4px\"\r\n              padding=\"2px\"\r\n            >\r\n              <IoMdShareAlt size={16} color=\"#fff\" />\r\n            </Anchor>\r\n          </Item>\r\n        </DelegateeProfile>\r\n      </DelegateeItem>\r\n    </Item>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  border: 1px solid rgb(237, 237, 237);\r\n\r\n  margin: 15px 0px;\r\n  justify-content: center;\r\n  padding: 0px;\r\n`\r\n\r\nconst DelegateeItem = styled.div`\r\n  max-width: 220px;\r\n  min-width: 220px;\r\n  flex: 1;\r\n  margin: 20px 20px;\r\n  padding: 4px;\r\n  border: 2px solid #fafafa;\r\n  overflow: hidden;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-self: flex-start;\r\n  position: relative;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${props => props.theme == \"nominee\" ? \"#35c5f3\" : \"linear-gradient( 283deg, #34c5f2 0%, #e20880 45%, #35c5f3 100%)\"};\r\n  }\r\n`\r\n\r\nconst DelegateeImageOuter = styled.div`\r\n  padding-top: 100%;\r\n  position: relative;\r\n`\r\n\r\nconst DelegateeImageInner = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  overflow: hidden;\r\n  border-top-right-radius: 16px;\r\n  border-top-left-radius: 16px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst DelegateeProfile = styled(ItemH)`\r\n  background: #fff;\r\n  border-bottom-right-radius: 16px;\r\n  border-bottom-left-radius: 90px;\r\n  padding: 20px;\r\n`\r\n\r\nconst DelegateeWallet = styled(Span)`\r\n  word-break: break-all;\r\n  padding-top: 4px;\r\n`\r\n\r\nconst LineBreak = styled.div`\r\n  display: none;\r\n  flex-basis: 100%;\r\n  height: 0;\r\n\r\n  @media ${Device.tablet} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ChannelActions = styled.div`\r\n  margin: 5px;\r\n  flex-grow: 1;\r\n  max-width: 120px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ChannelActionButton = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  ${ props => props.disabled && css`\r\n    &:hover {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n    &:active {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n  `}\r\n`\r\n\r\nconst ActionTitle = styled.span`\r\n  ${ props => props.hideit && css`\r\n    visibility: hidden;\r\n  `};\r\n`\r\n\r\nconst ActionLoader = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst SkeletonButton = styled.div`\r\n  border: 0;\r\n  outline: 0;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 10px;\r\n  border-radius: 5px;\r\n  flex: 1;\r\n`\r\n\r\nconst SubscribeButton = styled(ChannelActionButton)`\r\n  background: #e20880;\r\n`\r\n\r\nconst UnsubscribeButton = styled(ChannelActionButton)`\r\n  background: #000;\r\n`\r\n\r\nconst DisabledDelegate = styled(ChannelActionButton)`\r\n  background: #ccc;\r\n`\r\nconst OwnerButton = styled(ChannelActionButton)`\r\n  background: #35c5f3;\r\n`\r\n\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`\r\nconst NFTTextStyle = styled.label`\r\n  margin: 0px 5px;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  padding: 2px 8px;\r\n  border-radius: 10px;\r\n  font-size: 11px;\r\n`\r\nconst NFTStatus = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 10px;\r\n`\r\n\r\nconst NFTStatusTitle = styled(NFTTextStyle)`\r\n  background: #35c4f3;\r\n`\r\n\r\nconst NFTClaim = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  position: absolute;\r\n  bottom: 10px;\r\n  left: 10px;\r\n`\r\n\r\nconst NFTClaimTitle = styled(NFTTextStyle)`\r\n  background: #e20880;\r\n`\r\nconst Blocky = styled.div`\r\n  position: relative;\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 100%;\r\n  overflow: hidden;\r\n  transform: scale(0.85);\r\n  outline-width: 2px;\r\n  outline-color: rgba(225,225,225,1);\r\n`\r\n// Export Default\r\nexport default ViewDelegateeItem;\r\n","import React, { useState } from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport styled, { css, useTheme } from 'styled-components';\r\nimport {Section, Content, Item, ItemH, ItemBreak, A, B, H1, H2, H3,LI, Image, P, Span, Anchor, Button, FormSubmision, Input, TextField, UL} from 'components/SharedStyling';\r\nimport Loader from 'react-loader-spinner'\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport { BsChevronExpand } from 'react-icons/bs';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\nimport { ethers } from \"ethers\";\r\n\r\nimport Blockies from \"components/BlockiesIdenticon\";\r\n\r\n\r\nimport {ThemeProvider} from \"styled-components\";\r\n\r\nimport { themeLight, themeDark } from \"config/Themization\";\r\n\r\n\r\n\r\nimport DisplayNotice from \"components/DisplayNotice\";\r\nimport ViewDelegateeItem from \"components/ViewDelegateeItem\";\r\n\r\nimport ChannelsDataStore, { ChannelEvents } from \"singletons/ChannelsDataStore\";\r\nimport UsersDataStore, { UserEvents } from \"singletons/UsersDataStore\";\r\n\r\nconst delegateesJSON = require(\"config/delegatees.json\")\r\nconst VOTING_TRESHOLD = 75000; //the treshold for delegates\r\n\r\n// Create Header\r\nfunction GovernancePage({ epnsReadProvider, epnsWriteProvide }) {\r\n  // React GA Analytics\r\n  ReactGA.pageview(\"/governance\");\r\n\r\n  // setup themes (styled components)\r\n  const themes = useTheme();\r\n\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  const { account, library } = useWeb3React();\r\n\r\n  const [address, setAddress] = React.useState('');\r\n  const [ens, setENS] = React.useState('');\r\n  const [ensFetched, setENSFetched] = React.useState(false);\r\n\r\n  const [dashboardLoading, setDashboardLoading] = React.useState(true);\r\n  const [delegateesLoading, setDelegateesLoading] = React.useState(true);\r\n\r\n  const [txInProgress, setTxInProgress ] = React.useState(false);\r\n  const [controlAt, setControlAt] = React.useState(0);\r\n  const [user, setUser] = React.useState(null);\r\n  const [owner, setOwner] = React.useState(null);\r\n  const [delegateesObject, setDelegateesObject] = React.useState({});\r\n  const [pushDelegatees, setPushDelegatees] = React.useState([]);\r\n  const [pushNominees, setPushNominees] = React.useState([]);\r\n  const [epnsToken, setEpnsToken] = React.useState(null);\r\n  const [tokenBalance, setTokenBalance] = React.useState(null);\r\n  const [prettyTokenBalance, setPrettyTokenBalance] = React.useState(null);\r\n\r\n  const [showDelegateePrompt, setShowDelegateePrompt] = React.useState(false);\r\n  const [delegatee, setDelegatee] = React.useState(null);\r\n\r\n  const [showAnswers, setShowAnswers] = React.useState([]);\r\n  const [selfVotingPower, setSelfVotingPower ] = React.useState(null);\r\n  const [newDelegateeAddress, setNewDelegateeAddress ] = React.useState(\"0x\");\r\n  const [newDelegateeVotingPower, setNewDelegateeVotingPower ] = React.useState(null);\r\n\r\n  const toggleShowAnswer = (id) => {\r\n    let newShowAnswers = [...showAnswers];\r\n    newShowAnswers[id] = !newShowAnswers[id];\r\n    setShowAnswers(newShowAnswers);\r\n  }\r\n\r\n\r\n  React.useEffect(() => {\r\n    if (account && account != '') {\r\n      // Check if the address is the same\r\n      if (address !== account) {\r\n        setENS('');\r\n        setENSFetched(false);\r\n\r\n        // get ens\r\n        library\r\n          .lookupAddress(account).then(function(name) {\r\n            setENS(name);\r\n            setENSFetched(true);\r\n            setAddress(account);\r\n          })\r\n          .catch(() => {\r\n            setENSFetched(true);\r\n            setAddress(account);\r\n          })\r\n      }\r\n\r\n    }\r\n  }, [account]);\r\n\r\n  React.useEffect(() => {\r\n    console.log(account)\r\n    if (!!(library && account)) {\r\n      let signer = library.getSigner(account);\r\n      const epnsTokenContract = new ethers.Contract(addresses.epnsToken, abis.epnsToken, signer);\r\n      setEpnsToken(epnsTokenContract);\r\n    }\r\n  }, [account,library]);\r\n\r\n  React.useEffect(() => {\r\n    if(epnsToken){\r\n      getMyInfo()\r\n    }\r\n  }, [epnsToken,account,library, prettyTokenBalance, tokenBalance]);\r\n\r\n  React.useEffect(() => {\r\n    setDashboardLoading(false);\r\n  }, [account]);\r\n\r\n  React.useEffect(() => {\r\n    if(!epnsToken) return;\r\n    const delegateesList = Object.values(delegateesJSON);\r\n    // write helper function to sort by voting power\r\n    const votingPowerSorter = (a, b) => {\r\n      return  b.votingPower - a.votingPower\r\n    };\r\n\r\n\r\n    // go through all the delegates json and get their voting power\r\n    const allDelegateesPromise = delegateesList.map(async (oneDelegate:any) => {\r\n      const { wallet } = oneDelegate;\r\n      const votingPower = await EPNSCoreHelper.getVotingPower(wallet, epnsToken);\r\n      return {...oneDelegate, votingPower: Number(votingPower)};\r\n    });\r\n\r\n\r\n    Promise.all(allDelegateesPromise).then((allDelegatees) => {\r\n      // filter for delegates (i.e) Those who have above 75000 power,\r\n      // use the parameter votingPowerSimulate parameter to simulate voting power above the treshold\r\n      const delegateesAbove75k = allDelegatees.filter(({votingPower, votingPowerSimulate}) => {\r\n        return (votingPower >=  VOTING_TRESHOLD)\r\n      });\r\n\r\n      // sort by voting power\r\n      const sortedDelegatees = [...delegateesAbove75k].sort(votingPowerSorter);\r\n      setPushDelegatees(sortedDelegatees);\r\n\r\n      // calculate for  the nominees (i.e peoplw who have voting power less than 75k)\r\n      const delegateesBelow75k = allDelegatees.filter(({votingPower}) => {\r\n        return votingPower <  VOTING_TRESHOLD\r\n      });\r\n\r\n      const sortedNominees = [...delegateesBelow75k].sort(votingPowerSorter);\r\n\r\n      // sort by voting power\r\n      setPushNominees(sortedNominees);\r\n\r\n      setDelegateesLoading(false);\r\n    })\r\n    setDelegateesObject(delegateesJSON)\r\n    // in order to\r\n  }, [epnsToken])\r\n\r\n  const isValidAddress = (address) => {\r\n    if(ethers.utils.isAddress(address)){\r\n      return true\r\n    }\r\n    else{\r\n      toast.dark(\"Invalid address!\", {\r\n        position: \"bottom-right\",\r\n        type: toast.TYPE.ERROR,\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const getVotingPower = async (address) => {\r\n    try{\r\n      const votingPower = await EPNSCoreHelper.getVotingPower(address, epnsToken, true)\r\n      setNewDelegateeVotingPower(votingPower)\r\n    }\r\n    catch(err){\r\n    console.log(\"🚀 ~ file: Delegate.tsx ~ line 86 ~ getVotingPower ~ err\", err)\r\n    }\r\n  }\r\n\r\n  const getMyInfo = async () => {\r\n    let bal = await epnsToken.balanceOf(account)\r\n    let decimals =  await epnsToken.decimals()\r\n    let tokenBalance = await Number(bal/Math.pow(10, decimals))\r\n    let newBal = tokenBalance.toString();\r\n    let delegatee = await epnsToken.delegates(account)\r\n    let votes = await epnsToken.getCurrentVotes(account)\r\n    let votingPower = await Number(votes/Math.pow(10, decimals))\r\n    let prettyVotingPower = votingPower.toLocaleString();\r\n    setTokenBalance(tokenBalance)\r\n    setPrettyTokenBalance(newBal)\r\n    setDelegatee(delegatee)\r\n    setSelfVotingPower(prettyVotingPower)\r\n  }\r\n\r\n  const delegateAction = async (newDelegatee) => {\r\n    setTxInProgress(true);\r\n\r\n    const isAddress = await isValidAddress(newDelegatee)\r\n    console.log(isAddress)\r\n    if(!isAddress){\r\n      setTxInProgress(false);\r\n      return;\r\n    }\r\n    if (tokenBalance == 0) {\r\n      toast.dark(\"No PUSH to Delegate!\", {\r\n        position: \"bottom-right\",\r\n        type: toast.TYPE.ERROR,\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      setTxInProgress(false);\r\n      return;\r\n    }\r\n\r\n    let sendWithTxPromise;\r\n    sendWithTxPromise = epnsToken.delegate(newDelegatee);\r\n    sendWithTxPromise\r\n      .then(async tx => {\r\n\r\n        let txToast = toast.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\r\n          position: \"bottom-right\",\r\n          autoClose: false,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n        try {\r\n          await library.waitForTransaction(tx.hash);\r\n\r\n          toast.update(txToast, {\r\n            render: \"Transaction Completed!\",\r\n            type: toast.TYPE.SUCCESS,\r\n            autoClose: 5000\r\n          });\r\n\r\n          setTxInProgress(false);\r\n          setShowDelegateePrompt(false);\r\n        }\r\n        catch(e) {\r\n          toast.update(txToast, {\r\n            render: \"Transaction Failed! (\" + e.name + \")\",\r\n            type: toast.TYPE.ERROR,\r\n            autoClose: 5000\r\n          });\r\n\r\n          setTxInProgress(false);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        toast.dark('Transaction Cancelled!', {\r\n          position: \"bottom-right\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n        setTxInProgress(false);\r\n      })\r\n  }\r\n\r\n\r\n\r\n  // handle user action at control center\r\n  const userClickedAt = (controlIndex) => {\r\n    setControlAt(controlIndex);\r\n  }\r\n\r\n  // toast customize\r\n  const LoaderToast = ({ msg, color }) => (\r\n    <Toaster>\r\n      <Loader\r\n       type=\"Oval\"\r\n       color={color}\r\n       height={30}\r\n       width={30}\r\n      />\r\n      <ToasterMsg>{msg}</ToasterMsg>\r\n    </Toaster>\r\n  )\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n    <Section>\r\n      <Content themes={themes.mainBg} padding=\"20px 20px 30px 20px\">\r\n        <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 15px 15px 15px\">\r\n          {(dashboardLoading || !prettyTokenBalance || !selfVotingPower) &&\r\n            <Item padding=\"20px\">\r\n              <Loader type=\"Oval\" color=\"#e20880\" height={40} width={40} />\r\n            </Item>\r\n          }\r\n\r\n          {!dashboardLoading && prettyTokenBalance && selfVotingPower &&\r\n            <Item margin=\"10px 0px 0px 0px\" self=\"stretch\" items=\"stretch\">\r\n              <StatsCard\r\n                align=\"stretch\"\r\n                justify=\"flex-start\"\r\n                self=\"stretch\"\r\n                bg={themes.mainBg}\r\n                op=\"1\"\r\n                \r\n              >\r\n                <StatsHeading bg=\"#e20880\">Governance Dashboard</StatsHeading>\r\n                <StatsContent>\r\n                  <ItemH align=\"stretch\" self=\"stretch\">\r\n                    <Item align=\"center\" self=\"center\" flex=\"initial\" padding=\"10px\">\r\n                      <Blocky>\r\n                        <BlockyInner>\r\n                           <Blockies seed={account.toLowerCase()} opts={{seed: account.toLowerCase(), size: 10, scale: 10}}/>\r\n                        </BlockyInner>\r\n                      </Blocky>\r\n                      <Wallet>\r\n                      {!ensFetched &&\r\n                        <Loader\r\n                           type=\"Oval\"\r\n                           color=\"#FFF\"\r\n                           height={16}\r\n                           width={16}\r\n                        />\r\n                      }\r\n                      {ensFetched && ens &&\r\n                        <>{ens}</>\r\n                      }\r\n                      {ensFetched && !ens &&\r\n                        <>{account.substring(0, 6)}.....{account.substring(account.length - 6)}</>\r\n                      }\r\n                      </Wallet>\r\n                    </Item>\r\n\r\n                    <Item align=\"flex-start\" self=\"stretch\" padding=\"10px\" size=\"16px\">\r\n                      <ItemH flex=\"initial\" padding=\"5px\">\r\n                        <Span weight=\"500\" padding=\"0px 8px 0px 0px\" color={themes.color}>$PUSH Balance: </Span>\r\n                        <CurvedSpan bg=\"#e20880\" color=\"#fff\" weight=\"600\" padding=\"4px 8px\" textTransform=\"uppercase\">{prettyTokenBalance}</CurvedSpan>\r\n                      </ItemH>\r\n\r\n                      <ItemH flex=\"initial\" padding=\"5px\">\r\n                        <Span weight=\"500\"  padding=\"0px 8px 0px 0px\" color={themes.color}>Voting Power: </Span>\r\n                        <CurvedSpan bg=\"#35c5f3\" color=\"#fff\" weight=\"600\" padding=\"4px 8px\" textTransform=\"uppercase\">{selfVotingPower}</CurvedSpan>\r\n                      </ItemH>\r\n\r\n                      {delegatee !== \"0x0000000000000000000000000000000000000000\" &&\r\n                        <ItemH flex=\"initial\" padding=\"5px\">\r\n                          <Span padding=\"0px 8px 0px 0px\">Delegated To: </Span>\r\n                          <Span weight=\"600\">{delegatee}</Span>\r\n                        </ItemH>\r\n                      }\r\n                    </Item>\r\n                  </ItemH>\r\n\r\n                  {showDelegateePrompt &&\r\n                    <Item\r\n                      bg=\"#eeeeeeee\"\r\n                      position=\"absolute\"\r\n                      top=\"0\"\r\n                      bottom=\"0\"\r\n                      left=\"0\"\r\n                      right=\"0\"\r\n                    >\r\n                      <Item align=\"stretch\" self=\"stretch\" margin=\"0px 20px 40px 20px\">\r\n                        <Span color=\"#000\" weight=\"400\">Enter delegatee address</Span><br></br>\r\n                        <Input\r\n                          placeholder=\"Enter delegatee address\"\r\n                          radius=\"4px\"\r\n                          padding=\"12px\"\r\n                          self=\"stretch\"\r\n                          bg=\"#fff\"\r\n                          value={newDelegateeAddress}\r\n                          onChange={async(e) => {\r\n                            setNewDelegateeAddress(e.target.value)\r\n                            setNewDelegateeVotingPower(null)\r\n                          }}\r\n                        />\r\n                        {newDelegateeVotingPower && newDelegateeAddress &&\r\n                          <StatsInnerTitle>Voting Power: {newDelegateeVotingPower}</StatsInnerTitle>\r\n                        }\r\n                      </Item>\r\n\r\n                    </Item>\r\n                  }\r\n\r\n                  <Item self=\"stretch\" align=\"flex-end\">\r\n                    <ItemH>\r\n\r\n                      <ButtonAlt\r\n                        bg={txInProgress ? \"#999\" : \"#e20880\"}\r\n                        disabled={txInProgress ? true : false}\r\n                        onClick={() => {\r\n                          if (showDelegateePrompt) {\r\n                            delegateAction(newDelegateeAddress)\r\n                          }\r\n                          else {\r\n                            setShowDelegateePrompt(true)\r\n                          }\r\n                        }}\r\n                        >\r\n                          <Span color=\"#fff\" weight=\"400\">Delegate to Others</Span>\r\n                      </ButtonAlt>\r\n\r\n                      {!showDelegateePrompt &&\r\n                        <ButtonAlt\r\n                          bg={txInProgress ? \"#999\" : \"#51CAF3\"}\r\n                          disabled={txInProgress ? true : false}\r\n                          onClick={() => { delegateAction(account)}}\r\n                        >\r\n                            <Span color=\"#fff\" weight=\"400\">Delegate to Myself</Span>\r\n                        </ButtonAlt>\r\n                      }\r\n\r\n                      <ButtonAlt\r\n                        bg={\"#000\"}\r\n                        onClick={\r\n                          () => {\r\n                            if (showDelegateePrompt) {\r\n                              getVotingPower(newDelegateeAddress)\r\n                            }\r\n                            else {\r\n                              setShowDelegateePrompt(true)\r\n                            }\r\n                          }\r\n                        }\r\n                      >\r\n                        <Span color=\"#fff\" weight=\"400\">Query Voting Power</Span>\r\n                      </ButtonAlt>\r\n\r\n                      {showDelegateePrompt &&\r\n                        <ButtonAlt\r\n                          bg=\"#000\"\r\n                          onClick={() => { setShowDelegateePrompt(false) }}\r\n                        >\r\n                            <Span color=\"#fff\" weight=\"400\">Close</Span>\r\n                        </ButtonAlt>\r\n                      }\r\n                    </ItemH>\r\n\r\n                  </Item>\r\n                </StatsContent>\r\n                <StatsPreview color=\"#e20880\">MY INFO</StatsPreview>\r\n              </StatsCard>\r\n            </Item>\r\n          }\r\n        </Item>\r\n\r\n        <Item align=\"stretch\" justify=\"flex-start\" margin=\"15px 15px 0px 15px\">\r\n          <StatsCard\r\n            align=\"stretch\"\r\n            justify=\"flex-start\"\r\n            self=\"stretch\"\r\n            bg={themes.mainBg}\r\n          >\r\n            <StatsHeading bg=\"#35c5f3\">Meet the PUSH Nominees</StatsHeading>\r\n            <NomineeContainer>\r\n              {delegateesLoading ? (\r\n                  <ContainerInfo>\r\n                    <Loader\r\n                      type=\"Oval\"\r\n                      color=\"#35c5f3\"\r\n                      height={40}\r\n                      width={40}\r\n                    />\r\n                  </ContainerInfo>\r\n                ) : (\r\n                  <AbsoluteWrapper>\r\n                    {\r\n                      pushNominees.map((onePushNominee) => {\r\n                        return (\r\n                          <ViewDelegateeItem\r\n                            key={onePushNominee.wallet}\r\n                            delegateeObject={onePushNominee}\r\n                            epnsToken={epnsToken}\r\n                            pushBalance={tokenBalance}\r\n                            theme=\"nominee\"\r\n                          />\r\n                        )\r\n                      })\r\n                    }\r\n                  </AbsoluteWrapper>\r\n                )\r\n              }\r\n            </NomineeContainer>\r\n          </StatsCard>\r\n        </Item>\r\n      </Content>\r\n\r\n      <Content padding=\"20px 20px 0px\">\r\n        <Item align=\"flex-start\" margin=\"0px 15px 0px 15px\">\r\n          <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n            <Span weight=\"200\" color={themes.color}>PUSH </Span>\r\n            <Span bg=\"#35c5f3\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">DELEGATEES</Span>\r\n          </H2>\r\n          <H3 color={themes.color}>Let's start <B color={themes.color}>governing!!</B> </H3>\r\n        </Item>\r\n\r\n        <Item>\r\n          {dashboardLoading &&\r\n            <ContainerInfo>\r\n              <Loader\r\n                type=\"Oval\"\r\n                color=\"#35c5f3\"\r\n                height={40}\r\n                width={40}\r\n              />\r\n            </ContainerInfo>\r\n          }\r\n\r\n          {!dashboardLoading && controlAt == 0 &&\r\n            <ItemH\r\n              padding=\"0px 20px 20px 20px\"\r\n              self=\"stretch\"\r\n            >\r\n              {pushDelegatees.length == 0  &&\r\n                <Item align=\"flex-start\" self=\"stretch\">\r\n                  <Span padding=\"10px 10px\" margin=\"10px 0px\" bg=\"#666\" color=\"#fff\" weight=\"600\">🤷 Awkward!!</Span>\r\n                  <Span padding=\"10px 10px\" margin=\"10px 0px\" bg=\"#666\" color=\"#fff\" weight=\"600\">Show some 💕 to Nominees to kickstart Governance!</Span>\r\n                </Item>\r\n              }\r\n              {pushDelegatees.length > 0  &&\r\n                pushDelegatees.map((oneDelegatee) => {\r\n                  return (\r\n                    <>\r\n                    <ViewDelegateeItem\r\n                      key={oneDelegatee.wallet}\r\n                      delegateeObject={oneDelegatee}\r\n                      epnsToken={epnsToken}\r\n                      pushBalance={tokenBalance}\r\n                      theme=\"delegate\"\r\n                    />\r\n                    </>\r\n                  );\r\n                })\r\n              }\r\n            </ItemH>\r\n          }\r\n        </Item>\r\n      </Content>\r\n\r\n      {/* FAQs */}\r\n      <Content padding=\"20px 20px 35px\" themes={darkMode? themeLight : themeDark}>\r\n        <Item align=\"stretch\" justify=\"flex-start\" margin=\"-10px 20px 0px 20px\">\r\n\r\n          {/* Question */}\r\n          <Item align=\"stretch\" margin=\"0px 0px 0px 0px\">\r\n            <QnAItem>\r\n              <Question\r\n                onClick={() => {toggleShowAnswer(0)}}\r\n                hover=\"#e20880\"\r\n                \r\n              >\r\n                <Span color={themes.color}>\r\n                  What are PUSH Delegatees?\r\n                </Span>\r\n                <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n              </Question>\r\n\r\n              {showAnswers[0] &&\r\n                <Answer>\r\n                  <Span>\r\n                    Active community members who have at least <b>75,000 $PUSH</b> delegated to them.\r\n                    They will be able to create proposals on Snapshot that are approved on the <AMod href=\"https://gov.epns.io/\"> forum </AMod>\r\n                  </Span>\r\n                </Answer>\r\n              }\r\n            </QnAItem>\r\n\r\n            <QnAItem>\r\n              <Question\r\n                onClick={() => {toggleShowAnswer(1)}}\r\n                hover=\"#e20880\"\r\n              >\r\n                <Span color={themes.color}>\r\n                  What are PUSH Nominees\r\n                </Span>\r\n                <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n              </Question>\r\n\r\n              {showAnswers[1] &&\r\n                <Answer>\r\n                  <Span>\r\n                  Active community members who can be delegated $PUSH to vote for proposals Snapshot. If you wish to be PUSH Nominee, submit your nomination\r\n                  <AMod href=\"https://gov.epns.io/t/epns-push-delegatee-nominations/21\"> here. </AMod>\r\n                   Once they get at least <b>75,000 $PUSH </b> delegated to them, they become a PUSH Delegatee.\r\n                  </Span>\r\n                </Answer>\r\n              }\r\n            </QnAItem>\r\n\r\n            <QnAItem>\r\n              <Question\r\n                onClick={() => {toggleShowAnswer(2)}}\r\n                hover=\"#e20880\"\r\n              >\r\n                <Span color={themes.color}>\r\n                  How can I become a PUSH Nominee?\r\n                </Span>\r\n                <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n              </Question>\r\n\r\n              {showAnswers[2] &&\r\n                <Answer>\r\n                  <Span>Step-by-step process:</Span>\r\n                  <UL>\r\n                    <LI>\r\n                      <Span>Sign up on:- <AMod href=\"https://gov.epns.io/\" target=\"_blank\" title=\"Join our EPNS's Telegram channel\">EPNS Governance Portal</AMod></Span>\r\n                    </LI>\r\n                    <LI>\r\n                      <Span>Go to:- <AMod href=\"https://gov.epns.io/t/epns-push-delegatee-nominations/21\" target=\"_blank\" title=\"Join our EPNS's Telegram channel\">https://gov.epns.io/t/epns-push-delegatee-nominations/21</AMod></Span>\r\n                    </LI>\r\n                    <LI>\r\n                      <Span>Submit your nomination by replying to the above post in the PROPOSED TEMPLATE.</Span>\r\n                    </LI>\r\n                  </UL>\r\n                  <Span>\r\n                    Now, once your nomination receives minimum of 10 likes,\r\n                    We will be adding your wallet address on our Governance Front end within 5-7 days.\r\n                    And later community members can start delegating votes to you.\r\n                  </Span>\r\n                </Answer>\r\n              }\r\n            </QnAItem>\r\n\r\n            <QnAItem>\r\n              <Question\r\n                onClick={() => {toggleShowAnswer(3)}}\r\n                hover=\"#e20880\"\r\n              >\r\n                <Span color={themes.color}>\r\n                  What if I don't wish to be a PUSH Nominee?\r\n                </Span>\r\n                <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n              </Question>\r\n\r\n              {showAnswers[3] &&\r\n                <Answer>\r\n                  <Span>\r\n                    No problem! You can show support to your favourite PUSH Nominees by liking their nominations <AMod href=\"https://gov.epns.io/t/epns-push-delegatee-nominations/21\">here</AMod>.\r\n                  </Span>\r\n                </Answer>\r\n              }\r\n            </QnAItem>\r\n\r\n            <QnAItem>\r\n              <Question\r\n                onClick={() => {toggleShowAnswer(4)}}\r\n                hover=\"#e20880\"\r\n              >\r\n                <Span color={themes.color}>\r\n                  Where should I start?\r\n                </Span>\r\n                <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n              </Question>\r\n\r\n              {showAnswers[4] &&\r\n                <Answer>\r\n                  <Span>Visit <AMod href=\"https://gov.epns.io/\" target=\"_blank\" title=\"Join our EPNS's Telegram channel\">EPNS Governance Portal</AMod> and introduce yoursef on the platform in the suggested format.</Span>\r\n\r\n                </Answer>\r\n              }\r\n            </QnAItem>\r\n\r\n            <QnAItem>\r\n              <Question\r\n                onClick={() => {toggleShowAnswer(5)}}\r\n                hover=\"#e20880\"\r\n              >\r\n                <Span color={themes.color}>\r\n                  What happens to the delegated voting power when I sell my PUSH tokens?\r\n                </Span>\r\n                <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n              </Question>\r\n\r\n              {showAnswers[5] &&\r\n                <Answer>\r\n                  <Span>If you delegate your voting power to someone/yourself and later you sell your\r\n                    PUSH tokens, then the voting power of those tokens gets revoked. Now the new owner gets to decide whom to delegate to. </Span>\r\n\r\n                </Answer>\r\n              }\r\n            </QnAItem>\r\n\r\n            <QnAItem>\r\n              <Question\r\n                onClick={() => {toggleShowAnswer(6)}}\r\n                hover=\"#e20880\"\r\n              >\r\n                <Span color={themes.color}>\r\n                  How can I cast my vote?\r\n                </Span>\r\n                <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n              </Question>\r\n\r\n              {showAnswers[6] &&\r\n                <Answer>\r\n                  <Span>Please visit <AMod href=\"https://snapshot.org/#/epns.eth\" target=\"_blank\" title=\"EPNS Governance - Snapshot Portal\">EPNS Governance - Snapshot Portal</AMod> to view the ongoing on-chain proposals and cast your vote.</Span>\r\n                </Answer>\r\n              }\r\n            </QnAItem>\r\n\r\n            <QnAItem>\r\n              <Question\r\n                onClick={() => {toggleShowAnswer(7)}}\r\n                hover=\"#e20880\"\r\n              >\r\n                <Span color={themes.color}>\r\n                  How can I keep up with EPNS Governance?\r\n                </Span>\r\n                <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n              </Question>\r\n\r\n              {showAnswers[7] &&\r\n                <Answer>\r\n                  <Span>Join our <AMod href=\"https://t.me/epnsproject\" target=\"_blank\" title=\"Join our EPNS's Telegram channel\">Telegram</AMod>, follow us on <AMod href=\"https://twitter.com/epnsproject\" target=\"_blank\" title=\"Join our EPNS's Twitter channel\">Twitter</AMod>, and sign up for our 5 minute <AMod href=\"https://epns.substack.com/\" target=\"_blank\" title=\"Join our EPNS's Twitter channel\">weekly product updates</AMod>.</Span>\r\n                </Answer>\r\n              }\r\n            </QnAItem>\r\n          </Item>\r\n        </Item>\r\n      </Content>\r\n    </Section>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  max-height: 80vh;\r\n`\r\n\r\nconst ContainerInfo = styled.div`\r\n  padding: 20px;\r\n`\r\n\r\nconst Items = styled.div`\r\n  display: block;\r\n  align-self: stretch;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n  background: #fafafa;\r\n`\r\nconst Question = styled(Button)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n  background: #fff;\r\n`\r\nconst Answer = styled(Item)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n`\r\n\r\nconst QnAItem = styled(Item)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n  flex: auto;\r\n  margin: 15px 0px;\r\n  border: 1px solid ${props => props.theme.qnaBgBorder};\r\n  border-radius: 10px;\r\n  box-shadow: 0px 5px 20px -10px rgb(0 0 0 / 0.20);\r\n  overflow: hidden;\r\n\r\n  & ${Question} {\r\n    background: ${props => props.theme.qnaBg};\r\n    justify-content: flex-start;\r\n    text-transform: uppercase;\r\n\r\n    & ${Span} {\r\n      font-weight: 400;\r\n      letter-spacing: 0.2em;\r\n      margin-left: 10px;\r\n      flex: 1;\r\n    }\r\n\r\n    &:hover {\r\n      & ${Span} {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n\r\n  & ${Answer} {\r\n    border: 1px solid #e6e6e6;\r\n    border-top: 1px solid #e6e6e6;\r\n    border-bottom-left-radius: 10px;\r\n    border-bottom-right-radius: 10px;\r\n    padding: 10px 15px;\r\n    align-items: flex-start;\r\n    background: #fff;\r\n\r\n    & ${Span} {\r\n      line-height: 1.5em;\r\n      margin: 10px;\r\n      color: #000 ;\r\n      font-size: 1.05em;\r\n    }\r\n  }\r\n`\r\n\r\nconst AMod = styled(A)`\r\n  color: #e20880;\r\n  font-weight: 500;\r\n`\r\n\r\nconst EpicButton = styled(A)`\r\n  padding: 15px 15px;\r\n  margin-left: 25px;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  border-radius: 8px;\r\n  background: linear-gradient(273deg, #674c9f 0%, rgba(226,8,128,1) 100%);\r\n  `\r\n  const ChannelActionButton = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 800;\r\n  // font-weight: 400;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  ${ props => props.disabled && css`\r\n    &:hover {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n    &:active {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n  `}\r\n`\r\n  const GradientButton = styled(ChannelActionButton)`\r\n  // background: #674c9f;\r\n  background: linear-gradient(273deg, #674c9f 0%, rgba(226,8,128,1) 100%);\r\n  `\r\n  const ActionTitle = styled.span`\r\n  ${ props => props.hideit && css`\r\n    visibility: hidden;\r\n  `};\r\n`\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`\r\nconst StatsCard = styled(Item)`\r\n  overflow: hidden;\r\n  min-width: 180px;\r\n\r\n  border-radius: 12px;\r\n  border: 1px solid rgb(225, 225, 225);\r\n\r\n  &:hover {\r\n    opacity: ${props => props.op ? \"0.9\" : props.op}\r\n  }\r\n`;\r\n\r\nconst CenterHeading = styled.h2`\r\n  text-align: center;\r\n`;\r\n\r\nconst PoolContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst StatsHeading = styled(Item)`\r\n  flex: 0;\r\n  align-self: stretch;\r\n  color: #fff;\r\n  top: 0px;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.1em;\r\n  font-size: 15px;\r\n  text-align: center;\r\n  padding: 10px 5px;\r\n  right: 0;\r\n  left: 0;\r\n`\r\n\r\nconst NomineeContainer = styled.div`\r\n  padding: 0px 20px 0px 20px;\r\n  position: relative;\r\n  height: 420px;\r\n  overflow-y: hidden;\r\n  overflow-x: auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  /* width */\r\n\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    border-radius: 10px;\r\n  }\r\n`;\r\n\r\nconst StatsContent = styled(Item)`\r\n  padding: 20px 20px;\r\n`\r\n\r\nconst AbsoluteWrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: max-content;\r\n  overflow: scroll;\r\n  display: flex;\r\n`\r\n\r\nconst StatsPreview = styled(Span)`\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 10px;\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  opacity: 0.25;\r\n  letter-spacing:0.1em;\r\n  text-transform: uppercase;\r\n  color: ${props => props.color || '#000'};\r\n  z-index: -1;\r\n`\r\n\r\nconst StatsInnerTitle = styled.span`\r\n  // font-weight: bold;\r\n  font-size: 15px;\r\n  letter-spacing: 0.1em;\r\n  align-items: left;\r\n  margin-top: 10px;\r\n`;\r\n\r\n\r\nconst StatsInnerSub = styled.span`\r\n  font-size: 12px;\r\n  color: #999;\r\n  font-weight: 600;\r\n  align-self: flex-end;\r\n`;\r\n\r\nconst ButtonAlt = styled(Button)`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  ${(props) =>\r\n    props.disabled &&\r\n    css`\r\n      &:hover {\r\n        opacity: 1;\r\n        cursor: default;\r\n        pointer: default;\r\n      }\r\n      &:active {\r\n        opacity: 1;\r\n        cursor: default;\r\n        pointer: default;\r\n      }\r\n    `}\r\n`;\r\n\r\nconst CurvedSpan = styled(Span)`\r\n  font-size: 14px;\r\n`;\r\n\r\n// css styles\r\nconst Blocky = styled.div`\r\n  position: relative;\r\n  width: 96px;\r\n  height: 96px;\r\n  border-radius: 100%;\r\n  overflow: hidden;\r\n  transform: scale(0.85);\r\n  outline-width: 2px;\r\n  outline-color: rgba(225,225,225,1);\r\n`\r\n\r\nconst BlockyInner = styled.div`\r\n`\r\n\r\nconst Wallet = styled.span`\r\n  margin: 10px 10px;\r\n  padding: 8px 15px;\r\n  height: 16px;\r\n  display: none;\r\n  align-items: baseline;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  color: #fff;\r\n  border-radius: 15px;\r\n  background: #333;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\n\r\n// Export Default\r\nexport default GovernancePage;\r\n","import EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\r\nimport { ethers } from \"ethers\";\r\n// import { bigNumber } from \"ethers/utils\";\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\n\r\nconst ONE_PUSH = ethers.BigNumber.from(1).mul(\r\n  ethers.BigNumber.from(10).pow(ethers.BigNumber.from(18))\r\n);\r\nconst GENESIS_EPOCH_AMOUNT_PUSH = 30000\r\nconst GENESIS_EPOCH_AMOUNT_LP = 35000\r\n\r\nconst bn = function(number, defaultValue = null) { if (number == null) { if (defaultValue == null) { return null } number = defaultValue } return ethers.BigNumber.from(number) }\r\n\r\nconst tokenToBn = (token) => {\r\n  return token.mul(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(18)))\r\n}\r\n\r\nconst tokenBNtoNumber = (tokenBn) => {\r\n  return tokenBn.div(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(10))).toNumber() / 100000000\r\n}\r\n\r\nconst bnToInt = function (bnAmount) { return parseInt(bnAmount.div(bn(10).pow(18))) }\r\n\r\nexport default class YieldFarmingDataStore {\r\n  static instance =\r\n    YieldFarmingDataStore.instance || new YieldFarmingDataStore();\r\n\r\n  state = {\r\n    account: null,\r\n    signer: null,\r\n    staking: null,\r\n    yieldFarmingPUSH: null,\r\n    yieldFarmingLP: null,\r\n    rewardForCurrentEpochPush: null,\r\n    rewardForCurrentEpochLP: null,\r\n\r\n    genesisEpochAmountPUSH: GENESIS_EPOCH_AMOUNT_PUSH,\r\n    deprecationPerEpochPUSH: 100,\r\n    genesisEpochAmountLP: GENESIS_EPOCH_AMOUNT_LP,\r\n    deprecationPerEpochLP: 100,\r\n  };\r\n\r\n  // init\r\n  init = (account, epnsToken, staking, yieldFarmingPUSH, yieldFarmingLP, uniswapV2Router02) => {\r\n    // set account\r\n    this.state.account = account;\r\n    this.state.epnsToken = epnsToken;\r\n    this.state.staking = staking;\r\n    this.state.yieldFarmingPUSH = yieldFarmingPUSH;\r\n    this.state.yieldFarmingLP = yieldFarmingLP;\r\n    this.state.uniswapV2Router02 = uniswapV2Router02;\r\n  };\r\n\r\n  // 1. Listen for Subscribe Async\r\n  getPoolStats = () => {\r\n    return new Promise(async (resolve, reject) => {\r\n      const yieldFarmingPUSH = this.state.yieldFarmingPUSH;\r\n      const yieldFarmingLP = this.state.yieldFarmingLP;\r\n\r\n      const currentEpochPUSH = await yieldFarmingPUSH.getCurrentEpoch();\r\n\r\n      const pushPriceAmounts = await this.state.uniswapV2Router02.getAmountsOut(ONE_PUSH.toString(), [addresses.epnsToken, addresses.WETHAddress, addresses.USDTAddress]);\r\n      const pushPrice = pushPriceAmounts[pushPriceAmounts.length -1].toNumber()/1000000;\r\n\r\n      const pushAmountReserve = tokenBNtoNumber(await this.state.epnsToken.balanceOf(addresses.epnsLPToken))\r\n      const wethAmountReserve = tokenBNtoNumber(await this.state.epnsToken.attach(addresses.WETHAddress).balanceOf(addresses.epnsLPToken)) // Using epnsToken instance for WETH instance\r\n\r\n      const ethPriceAmounts = await this.state.uniswapV2Router02.getAmountsOut(ONE_PUSH.toString(), [addresses.WETHAddress, addresses.USDTAddress]);\r\n      const ethPrice = ethPriceAmounts[ethPriceAmounts.length -1].toNumber()/1000000;\r\n\r\n      const uniTotalSupply = tokenBNtoNumber(await this.state.epnsToken.attach(addresses.epnsLPToken).totalSupply()) // Using epnsToken instance for Uni-V2 instance\r\n\r\n      const uniLpPrice = ((pushAmountReserve * pushPrice) + (wethAmountReserve * ethPrice)) / uniTotalSupply\r\n      const lpToPushRatio = uniLpPrice / pushPrice\r\n\r\n      const pushNextPoolSize = tokenBNtoNumber(await yieldFarmingPUSH.getPoolSize(currentEpochPUSH.add(1)));\r\n      const lpNextPoolSize = tokenBNtoNumber(await yieldFarmingLP.getPoolSize(currentEpochPUSH.add(1)));\r\n\r\n      const totalValueLocked = (pushNextPoolSize * pushPrice) + (lpNextPoolSize * uniLpPrice)\r\n\r\n      const epochDuration = await yieldFarmingPUSH.epochDuration();\r\n\r\n      const epochStart = await yieldFarmingPUSH.epochStart();\r\n\r\n      const start = epochStart.add(currentEpochPUSH.sub(1).mul(epochDuration));\r\n      const epochEndTimestamp = start.add(epochDuration);\r\n\r\n      const pushTotalDistributedAmount = await yieldFarmingPUSH.TOTAL_DISTRIBUTED_AMOUNT();\r\n      const lpTotalDistributedAmount = await yieldFarmingLP.TOTAL_DISTRIBUTED_AMOUNT();\r\n\r\n      const totalDistributedAmount = pushTotalDistributedAmount.add(\r\n        lpTotalDistributedAmount\r\n      );\r\n\r\n      const pushRewardsDistributed = await this.getPushRewardsDistributed();\r\n\r\n      resolve({\r\n        totalValueLocked,\r\n        pushPrice,\r\n        epochEndTimestamp,\r\n        totalDistributedAmount,\r\n        pushRewardsDistributed,\r\n        currentEpoch: currentEpochPUSH,\r\n        lpToPushRatio\r\n      });\r\n    });\r\n  };\r\n\r\n  // 1. Listen for Subscribe Async\r\n  getPUSHPoolStats = async () => {\r\n    return new Promise(async (resolve, reject) => {\r\n      const epnsToken = this.state.epnsToken;\r\n      const staking = this.state.staking;\r\n      const yieldFarmingPUSH = this.state.yieldFarmingPUSH;\r\n\r\n      const currentEpochPUSH = await yieldFarmingPUSH.getCurrentEpoch();\r\n      const totalEpochPUSH = (await yieldFarmingPUSH.NR_OF_EPOCHS()).toString();\r\n\r\n      const genesisEpochAmount = tokenToBn(ethers.BigNumber.from(this.state.genesisEpochAmountPUSH));\r\n      const deprecationPerEpoch = tokenToBn(ethers.BigNumber.from(this.state.deprecationPerEpochPUSH));\r\n\r\n      const rewardForCurrentEpoch = this.calcTotalAmountPerEpoch(\r\n        genesisEpochAmount,\r\n        currentEpochPUSH,\r\n        deprecationPerEpoch\r\n      );\r\n\r\n      this.state.rewardForCurrentEpochPush = rewardForCurrentEpoch;\r\n\r\n      const poolBalance = await yieldFarmingPUSH.getPoolSize(\r\n        currentEpochPUSH.add(1)\r\n      );\r\n\r\n      const stakingAPR = this.calcStakingAPR(\r\n        genesisEpochAmount,\r\n        currentEpochPUSH,\r\n        deprecationPerEpoch,\r\n        poolBalance,\r\n      );\r\n\r\n      resolve({\r\n        currentEpochPUSH,\r\n        totalEpochPUSH,\r\n        rewardForCurrentEpoch,\r\n        poolBalance,\r\n        stakingAPR\r\n      });\r\n    });\r\n  };\r\n\r\n  getLPPoolStats = async (poolStats) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      const epnsToken = this.state.epnsToken;\r\n      const staking = this.state.staking;\r\n      const yieldFarmingLP = this.state.yieldFarmingLP;\r\n\r\n      const currentEpochPUSH = await yieldFarmingLP.getCurrentEpoch();\r\n      const totalEpochPUSH = (await yieldFarmingLP.NR_OF_EPOCHS()).toString();\r\n      const genesisEpochAmount = tokenToBn(ethers.BigNumber.from(this.state.genesisEpochAmountLP));\r\n      const deprecationPerEpoch = tokenToBn(ethers.BigNumber.from(this.state.deprecationPerEpochLP));\r\n\r\n      const rewardForCurrentEpoch = this.calcTotalAmountPerEpoch(\r\n        genesisEpochAmount,\r\n        currentEpochPUSH,\r\n        deprecationPerEpoch\r\n      );\r\n\r\n      this.state.rewardForCurrentEpochLP = rewardForCurrentEpoch;\r\n\r\n      const poolBalance = await yieldFarmingLP.getPoolSize(\r\n        currentEpochPUSH.add(1)\r\n      );\r\n\r\n      const stakingAPR = await this.calcLPPoolAPR(\r\n        genesisEpochAmount,\r\n        currentEpochPUSH,\r\n        deprecationPerEpoch,\r\n        poolBalance,\r\n        poolStats\r\n      );\r\n\r\n      resolve({\r\n        currentEpochPUSH,\r\n        totalEpochPUSH,\r\n        rewardForCurrentEpoch,\r\n        poolBalance,\r\n        stakingAPR\r\n      });\r\n    });\r\n  };\r\n\r\n  // 1. Listen for Subscribe Async\r\n  getUserData = async (contract) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (this.state.account) {\r\n        const currentEpochPUSH = await contract.getCurrentEpoch();\r\n\r\n        const potentialUserReward = (await this.calculateUserEpochReward(currentEpochPUSH, contract)).toFixed(2)\r\n\r\n        const epochStakeNext = await contract.getEpochStake(\r\n          this.state.account,\r\n          currentEpochPUSH.add(1)\r\n        );\r\n\r\n        let totalAccumulatedReward = 0\r\n\r\n        for(var i=0; i<=currentEpochPUSH.sub(1).toNumber(); i++){\r\n          const epochReward = await this.calculateUserEpochReward(i, contract)\r\n          totalAccumulatedReward = totalAccumulatedReward + epochReward\r\n        }\r\n\r\n        totalAccumulatedReward = totalAccumulatedReward.toFixed(2)\r\n        const lastEpochIdHarvested = (await contract.lastEpochIdHarvested(this.state.account)).toNumber()\r\n\r\n        let totalAvailableReward = 0\r\n\r\n        for(var i = lastEpochIdHarvested + 1; i<=currentEpochPUSH.sub(1).toNumber(); i++){\r\n          const epochReward = await this.calculateUserEpochReward(i, contract)\r\n          totalAvailableReward = totalAvailableReward + epochReward\r\n        }\r\n        totalAvailableReward = totalAvailableReward.toFixed(2)\r\n\r\n        resolve({\r\n          potentialUserReward,\r\n          epochStakeNext,\r\n          totalAccumulatedReward,\r\n          totalAvailableReward\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  getPushRewardsDistributed = async () => {\r\n    const yieldFarmingPUSH = this.state.yieldFarmingPUSH;\r\n    const yieldFarmingLP = this.state.yieldFarmingLP;\r\n\r\n    const currentEpochPUSH = await yieldFarmingPUSH.getCurrentEpoch();\r\n    const genesisEpochAmountPUSH = tokenToBn(ethers.BigNumber.from(this.state.genesisEpochAmountPUSH))\r\n    const deprecationPerEpochPUSH = tokenToBn(ethers.BigNumber.from(this.state.deprecationPerEpochPUSH))\r\n    const currentEpochLP = await yieldFarmingLP.getCurrentEpoch();\r\n    const genesisEpochAmountLP = tokenToBn(ethers.BigNumber.from(this.state.genesisEpochAmountLP))\r\n    const deprecationPerEpochLP = tokenToBn(ethers.BigNumber.from(this.state.deprecationPerEpochLP))\r\n\r\n    let pushPoolRewardsDistributed = ethers.BigNumber.from(0);\r\n    let lpPoolRewardsDistributed = ethers.BigNumber.from(0);\r\n\r\n    for(var i=0; i<currentEpochLP.toNumber(); i++){\r\n      const rewardForCurrentEpochLP = this.calcTotalAmountPerEpoch(\r\n        genesisEpochAmountLP,\r\n        ethers.BigNumber.from(i),\r\n        deprecationPerEpochLP\r\n      );\r\n\r\n      lpPoolRewardsDistributed = lpPoolRewardsDistributed.add(rewardForCurrentEpochLP);\r\n\r\n      const rewardForCurrentEpochPUSH = this.calcTotalAmountPerEpoch(\r\n        genesisEpochAmountPUSH,\r\n        ethers.BigNumber.from(i),\r\n        deprecationPerEpochPUSH\r\n      );\r\n\r\n      pushPoolRewardsDistributed = pushPoolRewardsDistributed.add(rewardForCurrentEpochPUSH);\r\n    }\r\n\r\n    return pushPoolRewardsDistributed.add(lpPoolRewardsDistributed)\r\n  }\r\n\r\n  calcTotalAmountPerEpoch = (\r\n    genesisEpochAmount,\r\n    epochId,\r\n    deprecationPerEpoch\r\n  ) => {\r\n    return genesisEpochAmount.sub(epochId.mul(deprecationPerEpoch));\r\n  };\r\n\r\n  calcAnnualEpochReward = (\r\n    genesisEpochAmount,\r\n    epochId,\r\n    deprecationPerEpoch\r\n  ) => {\r\n    // get current epoch reward\r\n    const currentEpochReward = this.calcTotalAmountPerEpoch(genesisEpochAmount, epochId, deprecationPerEpoch)\r\n\r\n    const weeks = 52\r\n    const depreciate = deprecationPerEpoch.mul(weeks * (weeks - 1)).div(2)\r\n\r\n    const annualEpochReward = (currentEpochReward.mul(weeks)).sub(depreciate)\r\n\r\n    return annualEpochReward\r\n  }\r\n\r\n  calcStakingAPR = (\r\n    genesisEpochAmount,\r\n    epochId,\r\n    deprecationPerEpoch,\r\n    totalStaked\r\n  ) => {\r\n    // get annual rewards\r\n    const annualRewards = this.calcAnnualEpochReward(genesisEpochAmount, epochId, deprecationPerEpoch)\r\n\r\n    const apr = annualRewards.mul(1000000).div(Math.max(totalStaked, 1))\r\n    const aprFormatted = (parseInt(apr.toString())/10000).toFixed(2)\r\n\r\n    return aprFormatted\r\n  }\r\n\r\n  calcLPPoolAPR = async (\r\n    genesisEpochAmount,\r\n    epochId,\r\n    deprecationPerEpoch,\r\n    totalStaked,\r\n    poolStats\r\n  ) => {\r\n    // get annual rewards\r\n    const annualRewards = this.calcAnnualEpochReward(genesisEpochAmount, epochId, deprecationPerEpoch)\r\n\r\n    const apr = annualRewards.mul(1000000).div(Math.max(totalStaked, 1))\r\n    const aprFormatted = (parseInt(apr.toString())/(10000 * poolStats.lpToPushRatio)).toFixed(2)\r\n\r\n    // console.log(annualRewards.toString(), genesisEpochAmount.toString())\r\n    // if (poolStats) {\r\n    //   console.log(poolStats.totalValueLocked)\r\n    //   console.log(poolStats[\"lpToPushRatio\"])\r\n    // }\r\n\r\n    return aprFormatted\r\n\r\n  }\r\n\r\n  calculateUserEpochReward = async (\r\n    epochId,\r\n    contract\r\n  ) => {\r\n      const epochStake = tokenBNtoNumber(await contract.getEpochStake(\r\n        this.state.account,\r\n        epochId\r\n      ));\r\n\r\n      const poolSize = tokenBNtoNumber(await contract.getPoolSize(epochId));\r\n\r\n      let potentialUserReward = 0;\r\n      if (poolSize > 0) {\r\n        if (contract.address == addresses.yieldFarmLP) {\r\n          const rewardForCurrentEpoch = tokenBNtoNumber(this.state.rewardForCurrentEpochLP)\r\n          potentialUserReward = epochStake / poolSize * rewardForCurrentEpoch\r\n        }\r\n        else {\r\n          const rewardForCurrentEpoch = tokenBNtoNumber(this.state.rewardForCurrentEpochPush)\r\n          potentialUserReward = epochStake / poolSize * rewardForCurrentEpoch\r\n        }\r\n\r\n      }\r\n\r\n      return potentialUserReward\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport {Section, Content, Item, ItemH, Span, Anchor} from 'components/SharedStyling';\r\n\r\nimport { AiFillInfoCircle } from 'react-icons/ai';\r\nimport { Tooltip } from \"@material-ui/core\";\r\n\r\n// Faucet URLs\r\nfunction InfoTooltip({title}) {\r\n  // render\r\n  return (\r\n    <Tooltip style={{marginLeft: \"5px\"}} title={title}>\r\n        <span>\r\n            <AiFillInfoCircle style={{color: \"white\"}} />\r\n        </span>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\n// Export Default\r\nexport default InfoTooltip;\r\n","import React from \"react\";\r\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\r\n\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport {Section, Content, Item, ItemH, ItemBreak, A, B, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\r\nimport InfoTooltip from \"components/InfoTooltip\";\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nimport { AnimateOnChange } from \"react-animation\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Blockies from \"components/BlockiesIdenticon\";\r\n\r\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\r\nconst ethers = require(\"ethers\");\r\n\r\nconst bn = function(number, defaultValue = null) { if (number == null) { if (defaultValue == null) { return null } number = defaultValue } return ethers.BigNumber.from(number) }\r\n\r\nconst tokens = function (amount) { return (bn(amount).mul(bn(10).pow(18))).toString() }\r\nconst tokensBN = function (amount) { return (bn(amount).mul(bn(10).pow(18))) }\r\nconst bnToInt = function (bnAmount) { return bnAmount.div(bn(10).pow(18)) }\r\n\r\n// Create Header\r\nexport default function PoolCard({\r\n  poolName,\r\n  poolAddress,\r\n  tokenAddress,\r\n  getPoolStats,\r\n  getPUSHPoolStats,\r\n  getUserData,\r\n  pushPoolStats,\r\n  userData,\r\n}) {\r\n  const { active, error, account, library, chainId } = useWeb3React();\r\n  const [depositAmountToken, setDepositAmountToken] = React.useState(0);\r\n  const [withdrawAmountToken, setWithdrawAmountToken] = React.useState(0);\r\n  const [harvestEpochValue, setHarvestEpochValue] = React.useState(0);\r\n  const [txInProgress, setTxInProgress] = React.useState(false);\r\n\r\n  const [showDepositItem, setShowDepositItem] = React.useState(false);\r\n\r\n  const [depositApproved, setDepositApprove] = React.useState(false);\r\n  const [txInProgressApprDep, setTxInProgressApprDep] = React.useState(false);\r\n\r\n  const [txInProgressDep, setTxInProgressDep] = React.useState(false);\r\n  const [showDepSlip, setShowDepSlip] = React.useState(null);\r\n\r\n  const [txInProgressWithdraw, setTxInProgressWithdraw] = React.useState(false);\r\n\r\n  const [txInProgressMassHarvest, setTxInProgressMassHarvest] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    // Check if the account has approved deposit\r\n    checkApprDeposit();\r\n\r\n  }, [depositAmountToken]);\r\n\r\n  const checkApprDeposit = async () => {\r\n    if (depositAmountToken <= 0) {\r\n      setDepositApprove(false);\r\n      return;\r\n    }\r\n    setTxInProgressApprDep(true);\r\n\r\n    var signer = library.getSigner(account);\r\n    const tokenAddr = poolName == \"Uniswap LP Pool (UNI-V2)\" ? addresses.epnsLPToken : addresses.epnsToken;\r\n    let token = new ethers.Contract(tokenAddr, abis.epnsToken, signer);\r\n\r\n    const allowance = await token.allowance(account, addresses.staking);\r\n    if (allowance.gte(bn(depositAmountToken))) {\r\n      setDepositApprove(true);\r\n    }\r\n    else {\r\n      setDepositApprove(false);\r\n    }\r\n\r\n    setTxInProgressApprDep(false);\r\n  }\r\n\r\n  const fillMax = async() => {\r\n    var signer = library.getSigner(account);\r\n    const tokenAddr = poolName == \"Uniswap LP Pool (UNI-V2)\" ? addresses.epnsLPToken : addresses.epnsToken;\r\n    let token = new ethers.Contract(tokenAddr, abis.epnsToken, signer);\r\n\r\n    let balance = bnToInt(await token.balanceOf(account));\r\n    setDepositAmountToken(parseInt(balance.toString().replace(/\\D/,'')) || 0)\r\n  }\r\n\r\n  const approveDeposit = async () => {\r\n    if (depositApproved || txInProgressApprDep) {\r\n      return\r\n    }\r\n\r\n    setTxInProgressApprDep(true);\r\n\r\n    var signer = library.getSigner(account);\r\n    let epnsToken = new ethers.Contract(tokenAddress, abis.epnsToken, signer);\r\n    let staking = new ethers.Contract(addresses.staking, abis.staking, signer);\r\n\r\n    const uintMax = bn(2).pow(bn(256)).sub(1)\r\n\r\n    const tx = epnsToken.approve(\r\n      staking.address,\r\n      uintMax\r\n    );\r\n\r\n    tx.then(async (tx) => {\r\n      let txToast = toast.dark(\r\n        <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\r\n        {\r\n          position: \"bottom-right\",\r\n          autoClose: false,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        }\r\n      );\r\n\r\n      try {\r\n        await library.waitForTransaction(tx.hash);\r\n\r\n        toast.update(txToast, {\r\n          render: \"Transaction Completed!\",\r\n          type: toast.TYPE.SUCCESS,\r\n          autoClose: 5000,\r\n        });\r\n        setTxInProgressApprDep(false);\r\n        setDepositApprove(true);\r\n\r\n      } catch (e) {\r\n        toast.update(txToast, {\r\n          render: \"Transaction Failed! (\" + e.name + \")\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        setTxInProgressApprDep(false);\r\n      }\r\n    }).catch((err) => {\r\n      toast.dark(\"Transaction Cancelled!\", {\r\n        position: \"bottom-right\",\r\n        type: toast.TYPE.ERROR,\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n\r\n      setTxInProgressApprDep(false);\r\n    });\r\n  }\r\n\r\n  const depositAmountTokenFarmSingleTx = async () => {\r\n    if (txInProgressDep || !approveDeposit) {\r\n      return\r\n    }\r\n\r\n    setTxInProgressDep(true)\r\n\r\n    var signer = library.getSigner(account);\r\n    let epnsToken = new ethers.Contract(tokenAddress, abis.epnsToken, signer);\r\n    let staking = new ethers.Contract(addresses.staking, abis.staking, signer);\r\n    console.log(depositAmountToken);\r\n\r\n    const tx2 = staking.deposit(\r\n      tokenAddress,\r\n      ethers.BigNumber.from(depositAmountToken).mul(\r\n        ethers.BigNumber.from(10).pow(18)\r\n      )\r\n    );\r\n\r\n    tx2\r\n      .then(async (tx) => {\r\n        let txToast = toast.dark(\r\n          <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\r\n          {\r\n            position: \"bottom-right\",\r\n            autoClose: false,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          }\r\n        );\r\n\r\n        try {\r\n          await library.waitForTransaction(tx.hash);\r\n\r\n          toast.update(txToast, {\r\n            render: \"Transaction Completed!\",\r\n            type: toast.TYPE.SUCCESS,\r\n            autoClose: 5000,\r\n          });\r\n\r\n          getPoolStats();\r\n          getPUSHPoolStats(pushPoolStats);\r\n          getUserData();\r\n\r\n          setTxInProgressDep(false);\r\n          setShowDepSlip(true);\r\n          // window.location.reload();\r\n        } catch (e) {\r\n          toast.update(txToast, {\r\n            render: \"Transaction Failed! (\" + e.name + \")\",\r\n            type: toast.TYPE.ERROR,\r\n            autoClose: 5000,\r\n          });\r\n\r\n          setTxInProgressDep(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.dark(\"Transaction Cancelled!\", {\r\n          position: \"bottom-right\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n        setTxInProgressDep(false);\r\n      });\r\n  };\r\n\r\n  const withdrawAmountTokenFarmAutomatic = async () => {\r\n    if (txInProgressWithdraw) {\r\n      return;\r\n    }\r\n\r\n    setTxInProgressWithdraw(true);\r\n    const withdrawAmount = formatTokens(userData.epochStakeNext);\r\n\r\n    if (withdrawAmount == 0) {\r\n      toast.dark(\"Nothing to Withdraw!\", {\r\n        position: \"bottom-right\",\r\n        type: toast.TYPE.ERROR,\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n\r\n      setTxInProgressWithdraw(false);\r\n      return;\r\n    }\r\n\r\n    var signer = library.getSigner(account);\r\n    let staking = new ethers.Contract(addresses.staking, abis.staking, signer);\r\n\r\n    const tx = staking.withdraw(\r\n      tokenAddress,\r\n      ethers.BigNumber.from(withdrawAmount).mul(\r\n        ethers.BigNumber.from(10).pow(18)\r\n      )\r\n    );\r\n\r\n    tx.then(async (tx) => {\r\n      let txToast = toast.dark(\r\n        <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\r\n        {\r\n          position: \"bottom-right\",\r\n          autoClose: false,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        }\r\n      );\r\n\r\n      try {\r\n        await library.waitForTransaction(tx.hash);\r\n\r\n        toast.update(txToast, {\r\n          render: \"Transaction Completed!\",\r\n          type: toast.TYPE.SUCCESS,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        setTxInProgressWithdraw(false);\r\n\r\n        getPoolStats();\r\n        getPUSHPoolStats(pushPoolStats);\r\n        getUserData();\r\n      } catch (e) {\r\n        toast.update(txToast, {\r\n          render: \"Transaction Failed! (\" + e.name + \")\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        setTxInProgressWithdraw(false);\r\n      }\r\n    }).catch((err) => {\r\n      toast.dark(\"Transaction Cancelled!\", {\r\n        position: \"bottom-right\",\r\n        type: toast.TYPE.ERROR,\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n\r\n      setTxInProgressWithdraw(false);\r\n    });\r\n  };\r\n\r\n  const harvestTokens = async () => {\r\n    var signer = library.getSigner(account);\r\n    let yieldFarmingPUSH = new ethers.Contract(\r\n      poolAddress,\r\n      abis.yieldFarming,\r\n      signer\r\n    );\r\n\r\n    if (harvestEpochValue) {\r\n      const tx = yieldFarmingPUSH.harvest(harvestEpochValue);\r\n      tx.then(async (tx) => {\r\n        let txToast = toast.dark(\r\n          <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\r\n          {\r\n            position: \"bottom-right\",\r\n            autoClose: false,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          }\r\n        );\r\n\r\n        try {\r\n          await library.waitForTransaction(tx.hash);\r\n\r\n          toast.update(txToast, {\r\n            render: \"Transaction Completed!\",\r\n            type: toast.TYPE.SUCCESS,\r\n            autoClose: 5000,\r\n          });\r\n\r\n          setTxInProgress(false);\r\n        } catch (e) {\r\n          toast.update(txToast, {\r\n            render: \"Transaction Failed! (\" + e.name + \")\",\r\n            type: toast.TYPE.ERROR,\r\n            autoClose: 5000,\r\n          });\r\n\r\n          setTxInProgress(false);\r\n        }\r\n      }).catch((err) => {\r\n        toast.dark(\"Transaction Cancelled!\", {\r\n          position: \"bottom-right\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n        setTxInProgress(false);\r\n      });\r\n    }\r\n  };\r\n\r\n  const massHarvestTokensAll = async () => {\r\n    if (txInProgressMassHarvest) {\r\n      return;\r\n    }\r\n\r\n    if (!pushPoolStats.currentEpochPUSH || pushPoolStats.currentEpochPUSH == 1) {\r\n      toast.dark(\"Harvest unlocks from Epoch 2!\", {\r\n        position: \"bottom-right\",\r\n        type: toast.TYPE.ERROR,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n\r\n      return;\r\n    }\r\n    setTxInProgressMassHarvest(true);\r\n\r\n    console.log(poolAddress);\r\n\r\n    var signer = library.getSigner(account);\r\n    let yieldFarmingPUSH = new ethers.Contract(\r\n      poolAddress,\r\n      abis.yieldFarming,\r\n      signer\r\n    );\r\n    const tx = yieldFarmingPUSH.massHarvest();\r\n\r\n\r\n    tx.then(async (tx) => {\r\n      let txToast = toast.dark(\r\n        <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\r\n        {\r\n          position: \"bottom-right\",\r\n          autoClose: false,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        }\r\n      );\r\n\r\n      try {\r\n        await library.waitForTransaction(tx.hash);\r\n\r\n        toast.update(txToast, {\r\n          render: \"Transaction Completed!\",\r\n          type: toast.TYPE.SUCCESS,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        setTxInProgressMassHarvest(false);\r\n      } catch (e) {\r\n        toast.update(txToast, {\r\n          render: \"Transaction Failed! (\" + e.name + \")\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        setTxInProgressMassHarvest(false);\r\n      }\r\n    }).catch((err) => {\r\n      toast.dark(\"Transaction Cancelled!\", {\r\n        position: \"bottom-right\",\r\n        type: toast.TYPE.ERROR,\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n\r\n      setTxInProgressMassHarvest(false);\r\n    });\r\n  };\r\n\r\n  const formatTokens = (tokens) => {\r\n    if (tokens) {\r\n      return tokens.div(ethers.BigNumber.from(10).pow(18)).toString();\r\n    }\r\n  };\r\n\r\n  function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Item margin=\"20px\" align=\"stretch\" self=\"stretch\" border=\"1px solid #e1e1e1\" radius=\"12px\">\r\n      <Item>\r\n        <Item>\r\n          <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n            <Span bg={poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"#35c5f3\" : \"#e20880\"} size=\"0.8em\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">{poolName}</Span>\r\n          </H2>\r\n          <Item\r\n            align=\"flex-end\"\r\n            self=\"stretch\"\r\n          >\r\n            <H3>\r\n              <Span>Current APR </Span><Span bg={poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"#35c5f3\" : \"#e20880\"} padding=\"2px 8px\" weight=\"600\" color=\"#fff\"><b>{pushPoolStats.stakingAPR}%</b></Span>\r\n            </H3>\r\n          </Item>\r\n        </Item>\r\n\r\n        <ItemH margin=\"10px 0px 0px 0px\" self=\"stretch\" items=\"stretch\" bg=\"#f1f1f1\">\r\n          <PoolContainer bg=\"#fff\" margin=\"5px 15px\" radius=\"12px\" border=\"1px solid #ddd\" borderBottom=\"8px solid #e1e1e1\">\r\n            <PoolBoxTitle margin=\"15px 10px\" fg=\"#999\" textTransform=\"uppercase\" size=\"10px\" spacing=\"0.2em\">Current Reward</PoolBoxTitle>\r\n            <PoolBoxMsg\r\n              bg=\"transparent\"\r\n              fg={poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"#35c5f3\" : \"#e20880\"}\r\n              size=\"16px\"\r\n              margin=\"-15px 5px 10px 5px\"\r\n            >\r\n              {numberWithCommas(formatTokens(pushPoolStats.rewardForCurrentEpoch))} PUSH\r\n            </PoolBoxMsg>\r\n          </PoolContainer>\r\n\r\n          <PoolContainer bg=\"#fff\" margin=\"5px 15px\" radius=\"12px\" border=\"1px solid #ddd\" borderBottom=\"8px solid #e1e1e1\">\r\n            <PoolBoxTitle margin=\"15px 10px\" fg=\"#999\" textTransform=\"uppercase\" size=\"10px\" spacing=\"0.2em\">Total Staked</PoolBoxTitle>\r\n            <PoolBoxMsg\r\n              bg=\"transparent\"\r\n              fg={poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"#35c5f3\" : \"#e20880\"}\r\n              size=\"16px\"\r\n              margin=\"-15px 5px 10px 5px\"\r\n            >\r\n              {numberWithCommas(formatTokens(pushPoolStats.poolBalance))} {poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"UNI-V2\" : \"PUSH\"}\r\n            </PoolBoxMsg>\r\n          </PoolContainer>\r\n        </ItemH>\r\n\r\n        <Item\r\n          self=\"stretch\"\r\n          align=\"flex-end\"\r\n          margin=\"0px 0px 10px 0px\"\r\n        >\r\n          <EpochDisplayer>\r\n            <Span padding=\"0px 5px 0px 0px\">Current Epoch</Span><B>{pushPoolStats.currentEpochPUSH.toString()}/{pushPoolStats.totalEpochPUSH}</B>\r\n          </EpochDisplayer>\r\n        </Item>\r\n      </Item>\r\n\r\n      <Item padding=\"10px 20px 0px 20px\" align=\"stretch\" self=\"stretch\">\r\n        <ItemH margin=\"0px\">\r\n          <Item bg=\"#000\" margin=\"5px 10px\" radius=\"12px\">\r\n            <PoolBoxTitle>User Deposit</PoolBoxTitle>\r\n            <PoolBoxMsg>{formatTokens(userData.epochStakeNext)} {poolName == \"Uniswap LP Pool (UNI-V2)\" ? \"UNI-V2\" : \"PUSH\"}</PoolBoxMsg>\r\n          </Item>\r\n\r\n          <Item bg=\"#000\" margin=\"5px 10px\" radius=\"12px\">\r\n              <PoolBoxTitle>Rewards Claimed <InfoTooltip title={\"The total rewards you have already claimed from the pool. This includes all the rewards including the ones already harvested.\"} /></PoolBoxTitle>\r\n              <PoolBoxMsg>{(userData.totalAccumulatedReward - userData.totalAvailableReward).toFixed(2)} PUSH</PoolBoxMsg>\r\n          </Item>\r\n        </ItemH>\r\n\r\n        <ItemH margin=\"0px\">\r\n          <Item bg=\"#000\" margin=\"5px 10px\" radius=\"12px\">\r\n            <PoolBoxTitle>Current Epoch Reward <InfoTooltip title={\"This is only an estimation for the user's reward that they might get after the epoch. This might change depending upon deposits from other users.\"} /></PoolBoxTitle>\r\n            <PoolBoxMsg>{userData.potentialUserReward} PUSH</PoolBoxMsg>\r\n          </Item>\r\n\r\n          <Item bg=\"#000\" margin=\"5px 10px\" radius=\"12px\">\r\n            <PoolBoxTitle>Available for Harvest <InfoTooltip title={\"The rewards that are currently available for harvesting and can be immediately transferred to your address.\"} /></PoolBoxTitle>\r\n            <PoolBoxMsg>{userData.totalAvailableReward} PUSH</PoolBoxMsg>\r\n          </Item>\r\n        </ItemH>\r\n      </Item>\r\n\r\n      {showDepositItem &&\r\n        <Item bg=\"#ddd\" radius=\"12px\" margin=\"20px 0px -10px 0px\" padding=\"10px 20px\" align=\"stretch\" self=\"stretch\">\r\n\r\n          {!showDepSlip &&\r\n            <>\r\n              <Item>\r\n                <MaxButton\r\n                  bg=\"#000\"\r\n                  onClick={fillMax}\r\n                  position=\"absolute\"\r\n                >\r\n                  Max\r\n                </MaxButton>\r\n\r\n                <Input\r\n                  placeholder=\"Number of Tokens\"\r\n                  radius=\"4px\"\r\n                  padding=\"12px\"\r\n                  self=\"stretch\"\r\n                  bg=\"#fff\"\r\n                  value={depositAmountToken}\r\n                  onChange={(e) => {\r\n                    setDepositAmountToken(parseInt(e.target.value.replace(/\\D/,'')) || 0)\r\n                  }}\r\n                />\r\n              </Item>\r\n\r\n              <ItemH>\r\n                <ButtonAlt\r\n                  bg={depositApproved ? \"#999\" : \"#e20880\"}\r\n                  onClick={approveDeposit}\r\n                  disabled={depositApproved ? true : false}\r\n                >\r\n                  {!depositApproved && !txInProgressApprDep &&\r\n                    <Span color=\"#fff\" weight=\"400\">Approve</Span>\r\n                  }\r\n                  {txInProgressApprDep && !depositApproved &&\r\n                    <Loader\r\n                      type=\"Oval\"\r\n                      color=\"#fff\"\r\n                      height={12}\r\n                      width={12}\r\n                    />\r\n                  }\r\n                  {!txInProgress && depositApproved &&\r\n                    <Span color=\"#fff\" weight=\"600\">Approved</Span>\r\n                  }\r\n                </ButtonAlt>\r\n                <ButtonAlt\r\n                  bg={!depositApproved ? \"#999\" : \"#e20880\"}\r\n                  disabled={!depositApproved ? true : false}\r\n                  onClick={depositAmountTokenFarmSingleTx}\r\n                >\r\n                  {!txInProgressDep &&\r\n                    <Span color=\"#fff\" weight=\"400\">Deposit</Span>\r\n                  }\r\n                  {txInProgressDep &&\r\n                    <Loader\r\n                      type=\"Oval\"\r\n                      color=\"#fff\"\r\n                      height={12}\r\n                      width={12}\r\n                    />\r\n                  }\r\n                </ButtonAlt>\r\n              </ItemH>\r\n            </>\r\n          }\r\n\r\n          {showDepSlip &&\r\n            <Span\r\n              bg=\"#e20880\"\r\n              color=\"#fff\"\r\n              align=\"center\"\r\n              textTransform=\"uppercase\"\r\n              spacing=\"0.1em\"\r\n              size=\"14px\"\r\n              weight=\"600\"\r\n              padding=\"10px\"\r\n              self=\"stretch\"\r\n            >\r\n              Deposit Successful!\r\n            </Span>\r\n          }\r\n\r\n        </Item>\r\n      }\r\n\r\n      <ItemH padding=\"0px 20px 0px 20px\" margin=\"20px 0px 20px 0px\" align=\"center\" self=\"stretch\">\r\n        {!showDepositItem &&\r\n          <ButtonAlt\r\n            bg=\"#e20880\"\r\n            onClick={() => setShowDepositItem(!showDepositItem)}\r\n          >\r\n            {!txInProgressDep &&\r\n              <Span color=\"#fff\" weight=\"400\">Deposit</Span>\r\n            }\r\n            {txInProgressApprDep &&\r\n              <Loader\r\n                type=\"Oval\"\r\n                color=\"#fff\"\r\n                height={12}\r\n                width={12}\r\n              />\r\n            }\r\n          </ButtonAlt>\r\n        }\r\n\r\n        <ButtonAlt\r\n          bg=\"#000\"\r\n          onClick={() => withdrawAmountTokenFarmAutomatic()}\r\n        >\r\n          {!txInProgressWithdraw &&\r\n            <Span color=\"#fff\" weight=\"400\">Withdraw</Span>\r\n          }\r\n          {txInProgressWithdraw &&\r\n            <Loader\r\n              type=\"Oval\"\r\n              color=\"#fff\"\r\n              height={12}\r\n              width={12}\r\n            />\r\n          }\r\n        </ButtonAlt>\r\n\r\n        <ButtonAlt\r\n          bg=\"#000\"\r\n          onClick={() => massHarvestTokensAll()}\r\n        >\r\n          {!txInProgressMassHarvest &&\r\n            <Span color=\"#fff\" weight=\"400\">Harvest</Span>\r\n          }\r\n          {txInProgressMassHarvest &&\r\n            <Loader\r\n              type=\"Oval\"\r\n              color=\"#fff\"\r\n              height={12}\r\n              width={12}\r\n            />\r\n          }\r\n        </ButtonAlt>\r\n      </ItemH>\r\n    </Item>\r\n    </>\r\n  );\r\n}\r\n\r\n// toast customize\r\nconst LoaderToast = ({ msg, color }) => (\r\n  <Toaster>\r\n    <Loader type=\"Oval\" color={color} height={30} width={30} />\r\n    <ToasterMsg>{msg}</ToasterMsg>\r\n  </Toaster>\r\n);\r\n\r\n\r\nconst MaxButton = styled(Button)`\r\n  position: absolute;\r\n  right: 0;\r\n  padding: 4px 8px;\r\n  margin: 5px;\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  letter-spacing: 0.1em;\r\n`\r\n\r\nconst PoolContainer = styled(Item)`\r\n  border-bottom: ${props => props.borderBottom || \"none\"};\r\n`\r\n\r\nconst PoolBoxTitle = styled(Span)`\r\n  background: ${props => props.bg || 'transparent'};\r\n  color: ${props => props.fg || '#fff'};\r\n  font-weight: 600;\r\n  font-size: ${props => props.size || '12px'};\r\n  margin: ${props => props.margin || '10px 5px'};\r\n  letter-spacing: 0.1em;\r\n`\r\n\r\nconst PoolBoxMsg = styled(Span)`\r\n  background: ${props => props.bg || '#fff'};\r\n  color: ${props => props.fg || '#000'};\r\n  font-weight: 600;\r\n  font-size: ${props => props.size || '12px'};\r\n  margin: ${props => props.margin || '5px 5px 10px 5px'};\r\n  letter-spacing: 0.1em;\r\n  padding: 4px 15px;\r\n  border-radius: 10px;\r\n`\r\n\r\nconst Container = styled.div`\r\n  padding: 18px;\r\n  background: #fff;\r\n  flex: 1;\r\n\r\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\r\n  border-radius: 15px;\r\n  border: 1px solid rgb(225, 225, 225);\r\n\r\n  margin: 10px;\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n`;\r\n\r\nconst MainTitle = styled.h2`\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst Heading = styled.h5`\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst EpochDisplayer = styled(Span)`\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.1em;\r\n  font-size: 12px;\r\n  background: #f1f1f1;\r\n  padding: 0px 10px 0px 10px;\r\n  position: relative;\r\n  height: 23px;\r\n  align-items: center;\r\n  text-align: center;\r\n  display: flex;\r\n\r\n  &:after {\r\n    width: 0;\r\n    height: 0;\r\n    border-top: 0px solid transparent;\r\n    border-bottom: 25px solid transparent;\r\n    border-right: 10px solid #f1f1f1;\r\n    left: -10px;\r\n    content: '';\r\n    position: absolute;\r\n  }\r\n`\r\n\r\nconst ButtonAlt = styled(Button)`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  ${(props) =>\r\n    props.disabled &&\r\n    css`\r\n      &:hover {\r\n        opacity: 1;\r\n        cursor: default;\r\n        pointer: default;\r\n      }\r\n      &:active {\r\n        opacity: 1;\r\n        cursor: default;\r\n        pointer: default;\r\n      }\r\n    `}\r\n`;\r\n\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`;\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled, { css, keyframes, useTheme } from \"styled-components\";\r\nimport {Section, Content, Item, ItemH, ItemBreak, A, B, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\r\n\r\nimport { BsChevronExpand } from 'react-icons/bs';\r\n\r\nimport { AnimateOnChange } from \"react-animation\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport YieldFarmingDataStore from \"singletons/YieldFarmingDataStore\";\r\nimport PoolCard from \"components/PoolCard\";\r\n\r\nimport {ThemeProvider} from \"styled-components\";\r\n\r\nimport { themeLight, themeDark } from \"config/Themization\";\r\n\r\n\r\nconst ethers = require(\"ethers\");\r\n\r\n// Create Header\r\nfunction YieldFarmingPage() {\r\n  const { active, error, account, library, chainId } = useWeb3React();\r\n\r\n  const themes = useTheme();\r\n\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n\r\n  const [poolStats, setPoolStats] = React.useState(null);\r\n  const [pushPoolStats, setPushPoolStats] = React.useState(null);\r\n  const [lpPoolStats, setLpPoolStats] = React.useState(null);\r\n  const [userDataPUSH, setUserDataPUSH] = React.useState(null);\r\n  const [userDataLP, setUserDataLP] = React.useState(null);\r\n\r\n  const [formattedDuration, setFormattedDuration] = React.useState(\"\");\r\n\r\n  const [epnsToken, setEpnsToken] = React.useState(null);\r\n  const [staking, setStaking] = React.useState(null);\r\n  const [yieldFarmingPUSH, setYieldFarmingPUSH] = React.useState(null);\r\n  const [yieldFarmingLP, setYieldFarmingLP] = React.useState(null);\r\n  const [uniswapV2Router02, setUniswapV2Router02] = React.useState(null);\r\n\r\n  const [showAnswers, setShowAnswers] = React.useState([]);\r\n\r\n  const [loadingUserData, setLoadingUserData] = React.useState(false);\r\n\r\n  const toggleShowAnswer = (id) => {\r\n    let newShowAnswers = [...showAnswers];\r\n    newShowAnswers[id] = !newShowAnswers[id];\r\n\r\n    setShowAnswers(newShowAnswers);\r\n  }\r\n\r\n  const getPoolStats = React.useCallback(async () => {\r\n    const poolStats = await YieldFarmingDataStore.instance.getPoolStats();\r\n\r\n    setPoolStats({ ...poolStats });\r\n  }, [epnsToken, staking, yieldFarmingPUSH, yieldFarmingLP, uniswapV2Router02]);\r\n\r\n  const getPUSHPoolStats = React.useCallback(async () => {\r\n    const pushPoolStats = await YieldFarmingDataStore.instance.getPUSHPoolStats();\r\n\r\n    setPushPoolStats({ ...pushPoolStats });\r\n  }, [epnsToken, staking, yieldFarmingPUSH, yieldFarmingLP, uniswapV2Router02]);\r\n\r\n  const getLPPoolStats = React.useCallback(async (poolStats) => {\r\n    const lpPoolStats = await YieldFarmingDataStore.instance.getLPPoolStats(poolStats);\r\n\r\n    setLpPoolStats({ ...lpPoolStats });\r\n  }, [epnsToken, staking, yieldFarmingPUSH, yieldFarmingLP, uniswapV2Router02]);\r\n\r\n  const getUserDataPUSH = React.useCallback(async () => {\r\n    const userDataPUSH = await YieldFarmingDataStore.instance.getUserData(yieldFarmingPUSH);\r\n\r\n    setUserDataPUSH({ ...userDataPUSH });\r\n  }, [yieldFarmingPUSH]);\r\n\r\n  const getUserDataLP = React.useCallback(async () => {\r\n    const userDataLP = await YieldFarmingDataStore.instance.getUserData(yieldFarmingLP);\r\n\r\n    setUserDataLP({ ...userDataLP });\r\n  }, [yieldFarmingLP]);\r\n\r\n  const formatTokens = (tokens) => {\r\n    if (tokens) {\r\n      return tokens.div(ethers.BigNumber.from(10).pow(18)).toString();\r\n    }\r\n  };\r\n\r\n  const getFormattedDuration = () => {\r\n    if (poolStats?.epochEndTimestamp) {\r\n      const epochEndTimestamp = poolStats.epochEndTimestamp.toNumber();\r\n\r\n      const duration = epochEndTimestamp - Math.floor(new Date() / 1000);\r\n\r\n      if(duration < 0) {\r\n        getPoolStats()\r\n      }\r\n\r\n      const day = parseInt(duration / 86400);\r\n      const hour = parseInt((duration - day * 86400) / 3600);\r\n\r\n      const minutes = parseInt((duration - (day * 86400 + hour * 3600)) / 60);\r\n      const seconds = duration - (day * 86400 + hour * 3600 + minutes * 60);\r\n\r\n      setFormattedDuration(`${day}D ${hour}H ${minutes}M ${seconds}S`);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setTimeout(() => {\r\n      getFormattedDuration();\r\n    }, 1000);\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    let epnsToken = new ethers.Contract(\r\n      addresses.epnsToken,\r\n      abis.epnsToken,\r\n      library\r\n    );\r\n\r\n    let staking = new ethers.Contract(addresses.staking, abis.staking, library);\r\n    let yieldFarmingPUSH = new ethers.Contract(\r\n      addresses.yieldFarmPUSH,\r\n      abis.yieldFarming,\r\n      library\r\n    );\r\n\r\n    let yieldFarmingLP = new ethers.Contract(\r\n      addresses.yieldFarmLP,\r\n      abis.yieldFarming,\r\n      library\r\n    );\r\n\r\n    let uniswapV2Router02Instance = new ethers.Contract(\r\n      addresses.uniswapV2Router02,\r\n      abis.uniswapV2Router02,\r\n      library\r\n    );\r\n\r\n    setEpnsToken(epnsToken);\r\n    setStaking(staking);\r\n    setYieldFarmingPUSH(yieldFarmingPUSH);\r\n    setYieldFarmingLP(yieldFarmingLP);\r\n    setUniswapV2Router02(uniswapV2Router02Instance)\r\n\r\n    if (!!(library && account)) {\r\n      var signer = library.getSigner(account);\r\n\r\n      let epnsToken = new ethers.Contract(\r\n        addresses.epnsToken,\r\n        abis.epnsToken,\r\n        signer\r\n      );\r\n      let staking = new ethers.Contract(\r\n        addresses.staking,\r\n        abis.staking,\r\n        signer\r\n      );\r\n      let yieldFarmingPUSH = new ethers.Contract(\r\n        addresses.yieldFarmPUSH,\r\n        abis.yieldFarming,\r\n        signer\r\n      );\r\n      let yieldFarmingLP = new ethers.Contract(\r\n        addresses.yieldFarmLP,\r\n        abis.yieldFarming,\r\n        signer\r\n      );\r\n\r\n      let uniswapV2Router02Instance = new ethers.Contract(\r\n        addresses.uniswapV2Router02,\r\n        abis.uniswapV2Router02,\r\n        signer\r\n      );\r\n\r\n      setEpnsToken(epnsToken);\r\n      setStaking(staking);\r\n      setYieldFarmingPUSH(yieldFarmingPUSH);\r\n      setYieldFarmingLP(yieldFarmingLP);\r\n      setUniswapV2Router02(uniswapV2Router02Instance);\r\n  }\r\n  }, [account]);\r\n\r\n  React.useEffect(() => {\r\n    if (epnsToken != null && staking != null && yieldFarmingPUSH != null) {\r\n      // Instantiate Data Stores\r\n      YieldFarmingDataStore.instance.init(\r\n        account,\r\n        epnsToken,\r\n        staking,\r\n        yieldFarmingPUSH,\r\n        yieldFarmingLP,\r\n        uniswapV2Router02\r\n      );\r\n\r\n      getPoolStats();\r\n\r\n      // setpoolStats(YieldFarmingDataStore.instance.state);\r\n    }\r\n  }, [getPoolStats]);\r\n\r\n  React.useEffect(() => {\r\n    if (poolStats) {\r\n      syncData(poolStats);\r\n    }\r\n\r\n  }, [poolStats]);\r\n\r\n  const syncData = async (poolStats) => {\r\n    getPUSHPoolStats();\r\n    getLPPoolStats(poolStats);\r\n\r\n    getUserDataPUSH();\r\n    getUserDataLP();\r\n  }\r\n\r\n  function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n    <Section>\r\n      {poolStats ? (\r\n        <>\r\n          <Content themes={themes.yieldBg}>\r\n            <ItemH margin=\"0px 15px 0px 15px\" align=\"stretch\">\r\n              <StatsCard\r\n                bg={themes.mainBg} \r\n              >\r\n                <StatsHeading bg=\"#e20880\">Total Value Locked</StatsHeading>\r\n                <StatsContent>\r\n                  <StatsInnerTitle>{`$ ${numberWithCommas(poolStats.totalValueLocked.toFixed(2))}`}</StatsInnerTitle>\r\n                </StatsContent>\r\n                <StatsPreview color=\"#e20880\">TVL</StatsPreview>\r\n              </StatsCard>\r\n\r\n              <StatsCard\r\n                bg={themes.mainBg}\r\n              >\r\n                <StatsHeading bg=\"#35c5f3\">PUSH Rewards Given</StatsHeading>\r\n                <StatsContent>\r\n                  <StatsInnerTitle>{numberWithCommas(formatTokens(poolStats.pushRewardsDistributed))}</StatsInnerTitle>\r\n                  <StatsInnerSub>out of {numberWithCommas(formatTokens(poolStats.totalDistributedAmount))}</StatsInnerSub>\r\n                </StatsContent>\r\n                <StatsPreview color=\"#35c5f3\">Rewarded</StatsPreview>\r\n              </StatsCard>\r\n\r\n              <StatsCard\r\n                bg={themes.mainBg}\r\n              >\r\n                <StatsHeading bg=\"#674c9f\">Time Left</StatsHeading>\r\n                <StatsContent>\r\n                  <StatsInnerTitle>{formattedDuration}</StatsInnerTitle>\r\n                  <StatsInnerSub>until next epoch</StatsInnerSub>\r\n                </StatsContent>\r\n                <StatsPreview color=\"#674c9f\">time left</StatsPreview>\r\n              </StatsCard>\r\n\r\n              <StatsCard\r\n                bg={themes.mainBg}\r\n              >\r\n                <StatsHeading bg={themes.pushPriceBg}>PUSH Price</StatsHeading>\r\n                <StatsContent>\r\n                  <StatsInnerTitle>{`$ ${poolStats.pushPrice.toFixed(2)}`}</StatsInnerTitle>\r\n                  <StatsInnerSub>\r\n                    <a target=\"_blank\" href={`https://app.uniswap.org/#/swap?inputCurrency=${addresses.epnsToken}`}>Uniswap</a>\r\n                  </StatsInnerSub>\r\n                </StatsContent>\r\n                <StatsPreview color=\"#000\">UNISWAP</StatsPreview>\r\n              </StatsCard>\r\n            </ItemH>\r\n          </Content>\r\n\r\n          {!(lpPoolStats && userDataLP) && !(pushPoolStats && userDataPUSH)\r\n            ? <Item padding=\"20px\">\r\n                <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\r\n              </Item>\r\n            : <Content padding=\"25px 0px\">\r\n              <ItemH margin=\"0px 10px 0px 10px\" align=\"stretch\">\r\n                {\r\n                  lpPoolStats && userDataLP ? (\r\n                    <PoolCard\r\n                      poolName={'Uniswap LP Pool (UNI-V2)'}\r\n                      poolAddress={addresses.yieldFarmLP}\r\n                      tokenAddress={addresses.epnsLPToken}\r\n                      getPoolStats={getPoolStats}\r\n                      getPUSHPoolStats={getLPPoolStats}\r\n                      getUserData={getUserDataLP}\r\n                      pushPoolStats={lpPoolStats}\r\n                      userData={userDataLP}\r\n                    />\r\n                  ) : null\r\n                }\r\n                {\r\n                  pushPoolStats && userDataPUSH ? (\r\n                    <PoolCard\r\n                      poolName={'Staking Pool (PUSH)'}\r\n                      poolAddress={addresses.yieldFarmPUSH}\r\n                      tokenAddress={addresses.epnsToken}\r\n                      getPoolStats={getPoolStats}\r\n                      getPUSHPoolStats={getPUSHPoolStats}\r\n                      getUserData={getUserDataPUSH}\r\n                      pushPoolStats={pushPoolStats}\r\n                      userData={userDataPUSH}\r\n                    />\r\n                  ) : null\r\n                }\r\n              </ItemH>\r\n            </Content>\r\n          }\r\n        </>\r\n      ) : (\r\n        <Item padding=\"20px\">\r\n          <Loader type=\"Oval\" color=\"#e20880\" height={40} width={40} />\r\n        </Item>\r\n      )}\r\n    </Section>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: block;\r\n  flex-direction: column;\r\n  min-height: calc(100vh - 100px);\r\n`\r\n\r\nconst StatsCard = styled(Item)`\r\n  overflow: hidden;\r\n  min-width: 180px;\r\n\r\n  border-radius: 12px;\r\n  border: 1px solid rgb(225, 225, 225);\r\n\r\n  margin: 0px 15px;\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n`;\r\n\r\nconst CenterHeading = styled.h2`\r\n  text-align: center;\r\n`;\r\n\r\nconst PoolContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst StatsHeading = styled(Item)`\r\n  flex: 0;\r\n  align-self: stretch;\r\n  color: #fff;\r\n  top: 0px;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.1em;\r\n  font-size: 15px;\r\n  text-align: center;\r\n  padding: 10px 5px;\r\n  right: 0;\r\n  left: 0;\r\n`\r\n\r\nconst StatsContent = styled(Item)`\r\n  padding: 20px 20px;\r\n`\r\n\r\nconst StatsPreview = styled(Span)`\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 10px;\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  opacity: 0.25;\r\n  letter-spacing:0.1em;\r\n  text-transform: uppercase;\r\n  color: ${props => props.color || '#000'};\r\n  z-index: -1;\r\n`\r\n\r\nconst StatsInnerTitle = styled.span`\r\n  font-weight: bold;\r\n  font-size: 22px;\r\n  letter-spacing: 0.1em;\r\n`;\r\n\r\nconst StatsInnerSub = styled.span`\r\n  font-size: 12px;\r\n  color: #999;\r\n  font-weight: 600;\r\n  align-self: flex-end;\r\n`;\r\n\r\n// Export Default\r\nexport default YieldFarmingPage;\r\n","import React from \"react\";\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { ethers } from \"ethers\";\r\n// import { parseEther, bigNumber } from 'ethers/utils'\r\n\r\n// FeedDB Helper Function\r\nconst NFTHelper = {\r\n  getNFTBalance: async (user, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      if(contract){\r\n        contract.balanceOf(user)\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getNFTBalance() --> %o\", response);\r\n          resolve(response.toNumber());\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getNFTBalance() --> %o\", err);\r\n          reject(err);\r\n        });\r\n\r\n      }\r\n      \r\n    })\r\n  },\r\n\r\n  getTotalSupply: async (contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      contract.totalSupply()\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getNFTBalance() --> %o\", response);\r\n          resolve(response.toNumber());\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getNFTBalance() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n\r\n  getOwnerOfTokenId: async (tokenId, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      contract.ownerOf(tokenId)\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getOwnerOfTokenId() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getOwnerOfTokenId() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n\r\n  getTokenOfOwnerByIndex: async (user, index, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      contract.tokenOfOwnerByIndex(user, index)\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getTokenOfOwnerByIndex() --> %o\", response);\r\n          resolve(response.toNumber());\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getTokenOfOwnerByIndex() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n\r\n  getTokenByIndex: async (index, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      contract.tokenByIndex(index)\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getTokenByIndex() --> %o\", response);\r\n          resolve(response.toNumber());\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getTokenByIndex() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n\r\n  getTokenMetadata: async (tokenId, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      contract.tokenURI(tokenId)\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getTokenMetadata() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getTokenMetadata() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n\r\n  getTokenMetadatasOfOwner: async (owner, nftContract, rewardsContract) => {\r\n    const enableLogs = 1;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      NFTHelper.getNFTBalance(owner, nftContract)\r\n      .then(async (balance) => {\r\n        // const balance = await res\r\n        let NFTDetails = []\r\n        let promises = []\r\n      \r\n      for(let i=0; i<balance; i++){\r\n        promises.push(NFTHelper.getTokenOfOwnerByIndex(owner, i, nftContract)\r\n        .then(async tokenId => {\r\n            await NFTHelper.getClaimable(tokenId, rewardsContract)\r\n            .then(async claimable => {\r\n              console.log(\"🚀 ~ file: NFTHelper.js ~ line 102 ~ .then ~ claimable\", claimable)\r\n\r\n              await NFTHelper.getTokenMetadata(tokenId, nftContract)\r\n              .then(async metadata => {\r\n                if(tokenId != null && metadata != null && claimable != null )\r\n                NFTDetails.push({id: tokenId, metadata, claimable})\r\n\r\n              })\r\n            })\r\n            .catch(err => {\r\n              console.log(\"!!!Error, getClaimable() --> %o\", err);\r\n              reject(err);\r\n            });\r\n        }))\r\n      }\r\n      // // wait until all promises are resolved\r\n      await Promise.all(promises);\r\n      console.log(\"🚀 ~ file: NFTHelper.js ~ line 83 ~ .then ~ NFTDetails\", NFTDetails)\r\n      resolve(NFTDetails);\r\n\r\n      })\r\n      .catch(err => {\r\n        console.log(\"!!!Error, getTokenMetadatasOfOwner() --> %o\", err);\r\n        reject(err);\r\n      });\r\n        \r\n    })\r\n  },\r\n\r\n  getAllTokenDatas: async (nftContract, rewardsContract) => {\r\n    const enableLogs = 1;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      NFTHelper.getNFTBalance(nftContract)\r\n      .then(async (totalSupply) => {\r\n        let NFTDetails = []\r\n        let promises = []\r\n      \r\n      for(let i=0; i<totalSupply; i++){\r\n        promises.push(NFTHelper.getTokenByIndex(i, nftContract)\r\n        .then(async tokenId => {\r\n            await NFTHelper.getClaimable(tokenId, rewardsContract)\r\n            .then(async claimable => {\r\n              await NFTHelper.getTokenMetadata(tokenId, nftContract)\r\n              .then(async metadata => {\r\n                await NFTHelper.getOwnerOfTokenId(tokenId, nftContract)\r\n                .then(async owner => {\r\n                  if(tokenId != null && metadata != null && claimable != null && owner != null )\r\n                  NFTDetails.push({id: tokenId, metadata, owner, claimable})\r\n                })\r\n                .catch(err => {\r\n                  console.log(\"!!!Error, getAllTokenDatas::getOwnerOfTokenId() --> %o\", err);\r\n                  reject(err);\r\n                })\r\n              })\r\n              .catch(err => {\r\n                console.log(\"!!!Error, getAllTokenDatas::getTokenMetadata() --> %o\", err);\r\n                reject(err);\r\n              })\r\n            })\r\n            .catch(err => {\r\n              console.log(\"!!!Error, getAllTokenDatas::getClaimable() --> %o\", err);\r\n              reject(err);\r\n            });\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getAllTokenDatas::getTokenByIndex() --> %o\", err);\r\n          reject(err);\r\n        })\r\n        )\r\n      }\r\n      // // wait until all promises are resolved\r\n      await Promise.all(promises);\r\n      console.log(\"🚀 ~ file: NFTHelper.js ~ line 83 ~ .then ~ NFTDetails\", NFTDetails)\r\n      resolve(NFTDetails);\r\n\r\n      })\r\n      .catch(err => {\r\n        console.log(\"!!!Error, getAllTokenDatas() --> %o\", err);\r\n        reject(err);\r\n      });\r\n        \r\n    })\r\n  },\r\n\r\n  getTokenData: async (tokenId, nftContract, rewardsContract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n             NFTHelper.getClaimable(tokenId, rewardsContract)\r\n            .then(async claimable => {\r\n              await NFTHelper.getTokenMetadata(tokenId, nftContract)\r\n              .then(async metadata => {\r\n                await NFTHelper.getOwnerOfTokenId(tokenId, nftContract)\r\n                .then(async owner => {\r\n                  if(tokenId != null && metadata != null && claimable != null && owner != null )\r\n                  resolve({id: tokenId, metadata, owner, claimable});\r\n                })\r\n              })\r\n            })\r\n            .catch(err => {\r\n              console.log(\"!!!Error, getTokenData() --> %o\", err);\r\n              reject(err);\r\n            });\r\n    })\r\n  },\r\n\r\n  transferNFT: async (from, to, tokenId, contract) => {\r\n    const enableLogs = 1;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      contract.safeTransferFrom(from, to, tokenId)\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"transferNFT() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, transferNFT() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n\r\n  getClaimable: async (tokenId, contract) => {\r\n    \r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      if(contract){\r\n        contract.getClaimRewardStatus(tokenId)\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getClaimable() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getClaimable() --> %o\", err);\r\n          reject(err);\r\n        });\r\n\r\n      }\r\n      \r\n    })\r\n  },\r\n\r\n}\r\n\r\nexport default NFTHelper;\r\n","import React from \"react\";\r\n\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport {Section, Content, Item, ItemH, ItemBreak, A, B, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\r\n\r\nimport { Device } from 'assets/Device';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport Skeleton from '@yisheng90/react-loading';\r\nimport { IoIosGift } from 'react-icons/io';\r\nimport { GiTwoCoins } from 'react-icons/gi';\r\n\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { ethers } from \"ethers\";\r\n// import { keccak256, arrayify, hashMessage, recoverPublicKey } from 'ethers/utils';\r\n\r\nimport ReactPlayer from 'react-player';\r\n\r\nimport NFTHelper from 'helpers/NFTHelper';\r\n\r\n// Create Header\r\nfunction ViewNFTItem({ NFTObject, nftReadProvider, nftWriteProvider, controlAt, setControlAt, setTokenId}) {\r\n  const { account, library } = useWeb3React();\r\n\r\n  const [NFTRewardsContract, setNFTRewardsContract] = React.useState(null);\r\n  const [ loading, setLoading ] = React.useState(true);\r\n  const [ txInProgress, setTxInProgress ] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (!!(library && account)) {\r\n      let signer = library.getSigner(account);\r\n      const NFTRewardsInstance = new ethers.Contract(addresses.NFTRewards, abis.NFTRewards, signer);\r\n      setNFTRewardsContract(NFTRewardsInstance);\r\n    }\r\n  }, [account,library]);\r\n\r\n  React.useEffect(() => {\r\n    if(NFTObject){\r\n      setLoading(false);\r\n    }\r\n  }, [account, NFTObject]);\r\n\r\n  // to claim\r\n  const handleClaim = async (tokenId) => {\r\n    if(NFTRewardsContract){\r\n      setTxInProgress(true)\r\n      let sendWithTxPromise\r\n      sendWithTxPromise = await NFTRewardsContract.claimReward(tokenId)\r\n      const tx = await sendWithTxPromise;\r\n\r\n      console.log(tx);\r\n      console.log(\"waiting for tx to finish\");\r\n      let txToast = toast.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\r\n        position: \"bottom-right\",\r\n        autoClose: false,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      try {\r\n        await library.waitForTransaction(tx.hash);\r\n\r\n        toast.update(txToast, {\r\n          render: \"Transaction Completed!\",\r\n          type: toast.TYPE.SUCCESS,\r\n          autoClose: 5000\r\n        });\r\n\r\n        setTxInProgress(false);\r\n      }\r\n      catch(e) {\r\n        toast.update(txToast, {\r\n          render: \"Transaction Failed! (\" + e.name + \")\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000\r\n        });\r\n\r\n        setTxInProgress(false);\r\n      }\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  // toast customize\r\n  const LoaderToast = ({ msg, color }) => (\r\n    <Toaster>\r\n      <Loader\r\n       type=\"Oval\"\r\n       color={color}\r\n       height={30}\r\n       width={30}\r\n      />\r\n      <ToasterMsg>{msg}</ToasterMsg>\r\n    </Toaster>\r\n  )\r\n\r\n  // render\r\n  return (\r\n    <Item\r\n      key={NFTObject.id}\r\n    >\r\n      <ChannelLogo\r\n        theme={\r\n          !!account && !!library && account == NFTObject.owner ?\r\n            \"#e20880\" :\r\n            !!account && !!library && NFTObject.owner != 0xFbA7Df351ADD4E79099f63E33b2679EDFDD5e2aB ?\r\n              \"#eee\" :\r\n              \"#fff\"\r\n        }\r\n      >\r\n        <ChannelLogoOuter>\r\n          <ChannelLogoInner>\r\n            {loading &&\r\n              <Skeleton color=\"#eee\" width=\"100%\" height=\"100%\" />\r\n            }\r\n            {!loading &&\r\n              <ReactPlayer url={`https://ipfs.io/ipfs/${NFTObject.metadata}`} controls={true} playing={false} loop={true}/>\r\n            }\r\n            {!!account && !!library && NFTObject.owner != 0xFbA7Df351ADD4E79099f63E33b2679EDFDD5e2aB &&\r\n              <NFTStatus>\r\n                <IoIosGift size={20} color=\"#fff\"/>\r\n                <NFTStatusTitle>\r\n                  Gifted\r\n                </NFTStatusTitle>\r\n              </NFTStatus>\r\n            }\r\n\r\n            {!!account && !!library && NFTObject.claimable &&\r\n              <NFTClaim>\r\n                <NFTClaimTitle>\r\n                  2400 $PUSH\r\n                </NFTClaimTitle>\r\n              </NFTClaim>\r\n            }\r\n          </ChannelLogoInner>\r\n        </ChannelLogoOuter>\r\n\r\n      {!!account && !!library &&\r\n        <ItemH>\r\n\r\n          <ChannelActions>\r\n            {loading &&\r\n              <SkeletonButton>\r\n                <Skeleton />\r\n              </SkeletonButton>\r\n            }\r\n            {!!account && !!library && account == NFTObject.owner && !loading &&\r\n              <UnsubscribeButton >\r\n                <ActionTitle onClick={() => {\r\n                  setTokenId(NFTObject.id)\r\n                  setControlAt(2)\r\n                }}\r\n                  >Transfer</ActionTitle>\r\n              </UnsubscribeButton>\r\n            }\r\n            {!!account && !!library && account == NFTObject.owner && !loading &&\r\n                <UnsubscribeButton disabled = {!NFTObject.claimable}>\r\n                  {txInProgress &&\r\n                    <ActionLoader>\r\n                      <Loader\r\n                       type=\"Oval\"\r\n                       color=\"#FFF\"\r\n                       height={16}\r\n                       width={16}\r\n                      />\r\n                    </ActionLoader>\r\n                  }\r\n                  {NFTObject.claimable &&\r\n                    <ActionTitle hideit={txInProgress} onClick={() => {handleClaim(NFTObject.id)}}>Claim $PUSH</ActionTitle>\r\n                  }\r\n                  {!NFTObject.claimable &&\r\n                    <ActionTitle hideit={txInProgress} >Rewards Claimed</ActionTitle>\r\n                  }\r\n                </UnsubscribeButton>\r\n            }\r\n          </ChannelActions>\r\n        </ItemH>\r\n      }\r\n      </ChannelLogo>\r\n    </Item>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst NFTTextStyle = styled.label`\r\n  margin: 0px 5px;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  padding: 2px 8px;\r\n  border-radius: 10px;\r\n  font-size: 11px;\r\n`\r\n\r\nconst NFTStatus = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 10px;\r\n`\r\n\r\nconst NFTStatusTitle = styled(NFTTextStyle)`\r\n  background: #35c4f3;\r\n`\r\n\r\nconst NFTClaim = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  position: absolute;\r\n  bottom: 10px;\r\n  left: 10px;\r\n`\r\n\r\nconst NFTClaimTitle = styled(NFTTextStyle)`\r\n  background: #e20880;\r\n`\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  // display: inline;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  border: 1px solid rgb(237, 237, 237);\r\n\r\n  margin: 15px 0px;\r\n  justify-content: center;\r\n  padding: 10px;\r\n`\r\n\r\nconst SkeletonWrapper = styled.div`\r\n  overflow: hidden;\r\n  width: ${props => props.atW + '%' || '100%'};\r\n  height: ${props => props.atH}px;\r\n  border-radius: ${props => props.borderRadius || 10}px;\r\n  margin-bottom: ${props => props.marginBottom || 5}px;\r\n  margin-right: ${props => props.marginRight || 0}px;\r\n`\r\n\r\nconst ChannelLogo = styled.div`\r\n  background: ${props => props.theme || '#fff'};\r\n  max-width: 25%;\r\n  min-width: 200px;\r\n  flex: 1;\r\n  margin: 5px;\r\n  padding: 10px;\r\n  border: 2px solid #fafafa;\r\n  overflow: hidden;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-self: center;\r\n`\r\n\r\nconst ChannelLogoOuter = styled.div`\r\n  padding-top: 100%;\r\n  position: relative;\r\n`\r\n\r\nconst ChannelLogoInner = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  overflow: hidden;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ChannelLogoImg = styled.img`\r\n  object-fit: contain;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  overflow: hidden;\r\n`\r\n\r\nconst ChannelInfo = styled.div`\r\n  flex: 1;\r\n  margin: 5px 10px;\r\n  min-width: 120px;\r\n  flex-grow: 4;\r\n  flex-direction: column;\r\n  display: flex;\r\n`\r\n\r\nconst ChannelTitle = styled.div`\r\n  margin-bottom: 5px;\r\n`\r\n\r\nconst ChannelTitleLink = styled.div`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\n\r\nconst ChannelDesc = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  font-size: 14px;\r\n  color: rgba(0, 0, 0, 0.75);\r\n  font-weight: 400;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ChannelDescLabel = styled.label`\r\n  flex: 1;\r\n`\r\n\r\nconst ChannelMeta = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: 13px;\r\n`\r\n\r\nconst ChannelMetaBox = styled.label`\r\n  margin: 0px 5px;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  padding: 2px 8px;\r\n  border-radius: 10px;\r\n  font-size: 11px;\r\n`\r\n\r\nconst Subscribers = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`\r\n\r\nconst SubscribersCount = styled(ChannelMetaBox)`\r\n  background: #35c4f3;\r\n`\r\n\r\nconst Pool = styled.div`\r\n  margin: 0px 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`\r\n\r\nconst PoolShare = styled(ChannelMetaBox)`\r\n  background: #674c9f;\r\n`\r\n\r\nconst LineBreak = styled.div`\r\n  display: none;\r\n  flex-basis: 100%;\r\n  height: 0;\r\n\r\n  @media ${Device.tablet} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ChannelActions = styled.div`\r\n  margin: 5px;\r\n  flex-grow: 1;\r\n  max-width: 120px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ChannelActionButton = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  ${ props => props.disabled && css`\r\n    background: #e20880;\r\n    &:hover {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n    &:active {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n  `}\r\n`\r\n\r\nconst ActionTitle = styled.span`\r\n  font-size: 12px;\r\n  ${ props => props.hideit && css`\r\n    visibility: hidden;\r\n  `};\r\n`\r\n\r\nconst ActionLoader = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst SkeletonButton = styled.div`\r\n  border: 0;\r\n  outline: 0;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 10px;\r\n  border-radius: 5px;\r\n  flex: 1;\r\n`\r\n\r\nconst SubscribeButton = styled(ChannelActionButton)`\r\n  background: #e20880;\r\n`\r\n\r\nconst UnsubscribeButton = styled(ChannelActionButton)`\r\n  background: #000;\r\n`\r\n\r\nconst OwnerButton = styled(ChannelActionButton)`\r\n  background: #35c5f3;\r\n`\r\n\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`\r\n\r\n// Export Default\r\nexport default ViewNFTItem;\r\n","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport Loader from 'react-loader-spinner'\r\nimport { Waypoint } from \"react-waypoint\";\r\n\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport NFTHelper from 'helpers/NFTHelper';\r\nimport { ethers } from \"ethers\";\r\n\r\nimport DisplayNotice from \"components/DisplayNotice\";\r\nimport ViewNFTItem from \"components/ViewNFTItem\";\r\n\r\n\r\n// Create Header\r\nfunction MyNFTs({controlAt, setControlAt, setTokenId}) {\r\n  const { account, library } = useWeb3React();\r\n\r\n  const [nftReadProvider, setNftReadProvider] = React.useState(null);\r\n  const [nftWriteProvider, setNftWriteProvider] = React.useState(null);\r\n  const [NFTRewardsContract, setNFTRewardsContract] = React.useState(null);\r\n  const [NFTObjects, setNFTObjects] = React.useState([]);\r\n\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n\r\n    if (!!(library && account)) {\r\n      const contractInstance = new ethers.Contract(addresses.rockstar, abis.rockstar, library);\r\n      setNftReadProvider(contractInstance);\r\n      let signer = library.getSigner(account);\r\n      const signerInstance = new ethers.Contract(addresses.rockstar, abis.rockstar, signer);\r\n      setNftWriteProvider(signerInstance);\r\n      const NFTRewardsInstance = new ethers.Contract(addresses.NFTRewards, abis.NFTRewards, signer);\r\n      setNFTRewardsContract(NFTRewardsInstance);\r\n    }\r\n  }, [account,library]);\r\n\r\n  React.useEffect(() => {\r\n    if(nftReadProvider && NFTRewardsContract){\r\n      fetchNFTDetails();\r\n    }\r\n  }, [account, nftReadProvider, nftWriteProvider, NFTRewardsContract]);\r\n\r\n  // to fetch NFT Details\r\n  const fetchNFTDetails = async () => {\r\n    let balance = await NFTHelper.getNFTBalance(account, nftReadProvider);\r\n    setLoading(false);\r\n    for(let i=0; i<balance; i++){\r\n      let tokenId = await NFTHelper.getTokenOfOwnerByIndex(account, i, nftReadProvider)\r\n      let NFTObject = await NFTHelper.getTokenData(tokenId, nftReadProvider, NFTRewardsContract)\r\n      await setNFTObjects(prev => [...prev, NFTObject])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading &&\r\n        <ContainerInfo>\r\n          <Loader\r\n           type=\"Oval\"\r\n           color=\"#35c5f3\"\r\n           height={40}\r\n           width={40}\r\n          />\r\n        </ContainerInfo>\r\n      }\r\n\r\n      {!loading && NFTObjects.length == 0 &&\r\n        <ContainerInfo>\r\n          <DisplayNotice\r\n            title=\"No ROCKSTAR tokens are available in your account\"\r\n            theme=\"primary\"\r\n          />\r\n        </ContainerInfo>\r\n      }\r\n\r\n\r\n      {!loading && NFTObjects.length != 0 &&\r\n        <Items id=\"scrollstyle-secondary\">\r\n\r\n          {Object.keys(NFTObjects).map(index => {\r\n            if (NFTObjects[index].id) {\r\n              return (\r\n                <ViewNFTItem\r\n                  key={NFTObjects[index].id}\r\n                  NFTObject={NFTObjects[index]}\r\n                  nftReadProvider={nftReadProvider}\r\n                  nftWriteProvider={nftWriteProvider}\r\n                  controlAt={controlAt}\r\n                  setControlAt={setControlAt}\r\n                  setTokenId={setTokenId}\r\n                />\r\n              );\r\n            }\r\n\r\n          })}\r\n        </Items>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  max-height: 80vh;\r\n`\r\nconst ContainerInfo = styled.div`\r\n  padding: 20px;\r\n`\r\n\r\nconst Items = styled.div`\r\n  display: block;\r\n  align-self: stretch;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n  background: #fafafa;\r\n`\r\n\r\n// Export Default\r\nexport default MyNFTs;\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport {Section, Content, Item, ItemH, ItemBreak, A, B, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\r\n\r\nimport StackGrid, { transitions } from \"react-stack-grid\";\r\n\r\nimport Loader from 'react-loader-spinner'\r\nimport { Waypoint } from \"react-waypoint\";\r\n\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport NFTHelper from 'helpers/NFTHelper';\r\nimport { ethers } from \"ethers\";\r\n\r\nimport DisplayNotice from \"components/DisplayNotice\";\r\nimport ViewNFTItem from \"components/ViewNFTItem\";\r\n\r\n\r\nconst { scaleDown } = transitions;\r\n\r\n// Create Header\r\nfunction AllNFTs({controlAt, setControlAt, setTokenId}) {\r\n  const { account, library } = useWeb3React();\r\n\r\n  const [nftReadProvider, setNftReadProvider] = React.useState(null);\r\n  const [nftWriteProvider, setNftWriteProvider] = React.useState(null);\r\n  const [NFTRewardsContract, setNFTRewardsContract] = React.useState(null);\r\n  const [NFTObjects, setNFTObjects] = React.useState([]);\r\n\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    if (!!(library && account)) {\r\n      const contractInstance = new ethers.Contract(addresses.rockstar, abis.rockstar, library);\r\n      setNftReadProvider(contractInstance);\r\n      let signer = library.getSigner(account);\r\n      const signerInstance = new ethers.Contract(addresses.rockstar, abis.rockstar, signer);\r\n      setNftWriteProvider(signerInstance);\r\n      const NFTRewardsInstance = new ethers.Contract(addresses.NFTRewards, abis.NFTRewards, signer);\r\n      setNFTRewardsContract(NFTRewardsInstance);\r\n    }\r\n  }, [account, library]);\r\n\r\n  React.useEffect(() => {\r\n    if(nftReadProvider && NFTRewardsContract){\r\n      fetchNFTDetails();\r\n    }\r\n  }, [account, nftReadProvider, nftWriteProvider, NFTRewardsContract]);\r\n\r\n  // to fetch all minted NFT Details\r\n  const fetchNFTDetails = async () => {\r\n    let totalSupply = await NFTHelper.getTotalSupply(nftReadProvider);\r\n    setLoading(false);\r\n    for(let i=0; i<totalSupply; i++){\r\n      let tokenId = await NFTHelper.getTokenByIndex(i, nftReadProvider)\r\n      let NFTObject = await NFTHelper.getTokenData(tokenId, nftReadProvider, NFTRewardsContract)\r\n      await setNFTObjects(prev => [...prev, NFTObject])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Section align=\"center\">\r\n      {loading &&\r\n        <ContainerInfo>\r\n          <Loader\r\n           type=\"Oval\"\r\n           color=\"#674c9f\"\r\n           height={40}\r\n           width={40}\r\n          />\r\n        </ContainerInfo>\r\n      }\r\n\r\n      {/* {!loading && NFTObjects.length == 0 &&\r\n        <ContainerInfo>\r\n          <Loader\r\n           type=\"Oval\"\r\n           color=\"#674c9f\"\r\n           height={40}\r\n           width={40}\r\n          />\r\n        </ContainerInfo>\r\n      } */}\r\n\r\n      {!loading && NFTObjects.length != 0 &&\r\n        <ItemH id=\"scrollstyle-secondary\">\r\n          {Object.keys(NFTObjects).map(index => {\r\n            if (NFTObjects) {\r\n              return (\r\n                <>\r\n                <ViewNFTItem\r\n                  key={NFTObjects[index].id}\r\n                  NFTObject={NFTObjects[index]}\r\n                  nftReadProvider={nftReadProvider}\r\n                  nftWriteProvider={nftWriteProvider}\r\n                  controlAt={controlAt}\r\n                  setControlAt={setControlAt}\r\n                  setTokenId={setTokenId}\r\n                />\r\n                </>\r\n              );\r\n            }\r\n          })}\r\n        </ItemH>\r\n      }\r\n    </Section>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  max-height: 80vh;\r\n`\r\n\r\nconst ContainerInfo = styled.div`\r\n  padding: 20px;\r\n`\r\n\r\nconst Items = styled.div`\r\n  display: block;\r\n  align-self: stretch;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n  background: #fafafa;\r\n`\r\n\r\n// Export Default\r\nexport default AllNFTs;\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport {Section, Content, Item, ItemH, ItemBreak, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\r\n\r\nimport { FiLink } from 'react-icons/fi';\r\n\r\nimport 'react-dropzone-uploader/dist/styles.css'\r\nimport Dropzone from 'react-dropzone-uploader'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nimport Loader from 'react-loader-spinner';\r\n// import { bigNumberify, parseUnits } from 'ethers/utils'\r\n\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport NFTHelper from 'helpers/NFTHelper';\r\nconst ethers = require('ethers');\r\n\r\nconst ipfs = require('ipfs-api')()\r\n\r\nconst minStakeFees = 50;\r\n\r\n// Create Header\r\nfunction TransferNFT({tokenId}) {\r\n  const { active, error, account, library, chainId } = useWeb3React();\r\n\r\n  const [nftWriteProvider, setNftWriteProvider] = React.useState(null);\r\n  const [toAddress, setToAddress] = React.useState('');\r\n\r\n  const [processing, setProcessing] = React.useState(0);\r\n  const [processingInfo, setProcessingInfo] = React.useState('');\r\n\r\n\r\n  React.useEffect(() => {\r\n    if (!!(library && account)) {\r\n      let signer = library.getSigner(account);\r\n      const signerInstance = new ethers.Contract(addresses.rockstar, abis.rockstar, signer);\r\n      setNftWriteProvider(signerInstance);\r\n    }\r\n  }, [account]);\r\n\r\n  const handleTransferNFT = async(e) => {\r\n    if(nftWriteProvider){\r\n    console.log(\"🚀 ~ file: TransferNFT.js ~ line 64 ~ handleTransferNFT ~ nftWriteProvider\", nftWriteProvider)\r\n    e.preventDefault();\r\n\r\n    if (isEmpty(toAddress)) {\r\n      setProcessing(3);\r\n      setProcessingInfo(\"Recipient address field is empty! Please retry!\");\r\n\r\n      return false;\r\n    }\r\n    setProcessing(1);\r\n    setProcessingInfo(\"Transferring NFT...\")\r\n    let signer = library.getSigner(account);\r\n    const signerInstance = new ethers.Contract(addresses.rockstar, abis.rockstar, signer)\r\n    var txPromise = nftWriteProvider['safeTransferFrom(address,address,uint256)'](account, toAddress, tokenId);\r\n    const tx = await txPromise;\r\n    console.log(tx);\r\n    console.log(\"waiting for tx to finish\");\r\n    setProcessingInfo(\"Waiting for Transfer tx to finish...\");\r\n    await library.waitForTransaction(tx.hash);\r\n    setProcessingInfo(\"Transfer successfull! \");\r\n    setProcessing(3);\r\n    }\r\n  }\r\n\r\n  const isEmpty = (field) => {\r\n    if (field.trim().length == 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Content padding=\"10px 20px 20px\">\r\n          <Item align=\"flex-start\">\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n              <Span weight=\"200\">Transfer Your NFT!</Span>\r\n            </H2>\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Token #{tokenId}</Span>\r\n            </H2>\r\n          </Item>\r\n        </Content>\r\n      </Section>\r\n\r\n      <Section>\r\n        <Content padding=\"50px 0px 0px 0px\">\r\n          <FormSubmision\r\n            flex=\"1\"\r\n            direction=\"column\"\r\n            margin=\"0px\"\r\n            justify=\"center\"\r\n            size=\"1.1rem\"\r\n            onSubmit={handleTransferNFT}\r\n          >\r\n\r\n          <Item margin=\"-10px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n            <Input\r\n              required\r\n              placeholder=\"Recipient Address\"\r\n              maxlength = \"40\"\r\n              padding=\"12px\"\r\n              borderBottom=\"1px solid #000\"\r\n              weight=\"400\"\r\n              size=\"1.2em\"\r\n              bg=\"#fff\"\r\n              value={toAddress}\r\n              onChange={(e) => {setToAddress(e.target.value)}}\r\n            />\r\n            {toAddress.trim().length == 0 &&\r\n                <Span\r\n                  padding=\"4px 10px\"\r\n                  right=\"0px\"\r\n                  top=\"0px\"\r\n                  pos=\"absolute\"\r\n                  color=\"#fff\"\r\n                  bg=\"#000\"\r\n                  size=\"0.7rem\"\r\n                  z=\"1\"\r\n                >\r\n                  Recipient Address\r\n                </Span>\r\n              }\r\n          </Item>\r\n          <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n            <Button\r\n              bg='#674c9f'\r\n              color='#fff'\r\n              flex=\"1\"\r\n              radius=\"0px\"\r\n              padding=\"20px 10px\"\r\n              disabled={processing == 1 ? true : false}\r\n            >\r\n              {processing == 1 &&\r\n                <Loader\r\n                    type=\"Oval\"\r\n                    color=\"#fff\"\r\n                    height={24}\r\n                    width={24}\r\n                  />\r\n              }\r\n              {processing != 1 &&\r\n                <Input cursor=\"hand\" textTransform=\"uppercase\" color=\"#fff\" weight=\"400\" size=\"0.8em\" spacing=\"0.2em\" type=\"submit\" value=\"Transfer\" />\r\n              }\r\n            </Button>\r\n          </Item>\r\n          </FormSubmision>\r\n        </Content>\r\n      </Section>\r\n\r\n      {(processing == 1 || processing == 3) &&\r\n        <Section>\r\n          <Content padding=\"0px 0px 0px 0px\">\r\n            <Item\r\n              color=\"#fff\"\r\n              bg={processing == 1 ? \"#e1087f\" : \"#000\"}\r\n              padding=\"10px 15px\"\r\n              margin = \"15px 0px\"\r\n            >\r\n              <Span\r\n                color=\"#fff\"\r\n                textTransform=\"uppercase\"\r\n                spacing=\"0.1em\"\r\n                weight=\"400\"\r\n                size=\"1em\"\r\n              >\r\n                {processingInfo}\r\n              </Span>\r\n            </Item>\r\n\r\n          </Content>\r\n        </Section>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Step = styled.div`\r\n  height: 12px;\r\n  width: 12px;\r\n  background: ${props => props.bg || \"#fff\"};\r\n  border: 4px solid ${props => props.activeBG || \"#000\"};\r\n  border-radius: 100%;\r\n\r\n  ${({ type }) => type == \"active\" && css`\r\n    background: ${props => props.activeBG || \"#ddd\"};\r\n    border: 4px solid #00000022;\r\n  `};\r\n`\r\nconst Info = styled.label`\r\n  padding-bottom: 20px;\r\n  font-size: 14px;\r\n  color: #000;\r\n`\r\n\r\nconst ChannelMetaBox = styled.label`\r\n  margin: 0px 5px;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n  font-size: 15px;\r\n  // font-size: 11px;\r\n`\r\nconst Pool = styled.div`\r\n  margin: 0px 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`\r\n\r\nconst PoolShare = styled(ChannelMetaBox)`\r\n  background: #e20880;\r\n  // background: #674c9f;\r\n`\r\n\r\n\r\n// Export Default\r\nexport default TransferNFT;\r\n","import React, { useState } from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport styled, { css, useTheme } from 'styled-components';\r\nimport {Section, Content, Item, ItemH, ItemBreak, A, B, H1, H2, H3, Para, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\r\n\r\nimport { BsChevronExpand } from 'react-icons/bs';\r\n\r\nimport Loader from 'react-loader-spinner'\r\nimport { Waypoint } from \"react-waypoint\";\r\n\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport NFTHelper from 'helpers/NFTHelper';\r\nimport { ethers } from \"ethers\";\r\n\r\nimport DisplayNotice from \"components/DisplayNotice\";\r\nimport ViewNFTItem from \"components/ViewNFTItem\";\r\nimport MyNFTs from \"components/MyNFTs\";\r\nimport AllNFTs from \"components/AllNFTs\";\r\nimport TransferNFT from \"components/TransferNFT\";\r\n\r\nimport {ThemeProvider} from \"styled-components\";\r\n\r\nimport { themeLight, themeDark } from \"config/Themization\";\r\n\r\n\r\n// Create Header\r\nfunction NFTPage({ epnsReadProvider, epnsWriteProvide }) {\r\n  // React GA Analytics\r\n  ReactGA.pageview(\"/rockstars\");\r\n\r\n  const { account, library } = useWeb3React();\r\n\r\n  const themes = useTheme();\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  const [tokenId, setTokenId] = React.useState(null);\r\n  const [controlAt, setControlAt] = React.useState(0);\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  const [showAnswers, setShowAnswers] = React.useState([]);\r\n\r\n  const toggleShowAnswer = (id) => {\r\n    let newShowAnswers = [...showAnswers];\r\n    newShowAnswers[id] = !newShowAnswers[id];\r\n\r\n    setShowAnswers(newShowAnswers);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    userClickedAt(1);\r\n  }, [account]);\r\n\r\n  // handle user action at control center\r\n  const userClickedAt = (controlIndex) => {\r\n    setControlAt(controlIndex);\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n      <Section>\r\n        <Content padding=\"20px 20px 0px\">\r\n          <Item align=\"flex-start\" margin=\"0px 20px 0px 20px\">\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">$ROCKSTAR</Span><Span weight=\"200\" color={themes.color}> of </Span><Span bg=\"#e20880\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">EPNS</Span>\r\n            </H2>\r\n            <H3 color={themes.greyText}>Thank you <B color={themes.color}>community</B> for all your support. Over the next year, we are excited to continue returning our gratitude!</H3>\r\n          </Item>\r\n\r\n          <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 20px 0px 20px\">\r\n\r\n            {/* Question */}\r\n            <Item align=\"stretch\" margin=\"0px 0px 20px 0px\">\r\n              <QnAItem>\r\n                <Question\r\n                  onClick={() => {toggleShowAnswer(1)}}\r\n                  hover=\"#e20880\"\r\n                >\r\n                  <Span color={themes.color}>\r\n                    Does $ROCKSTAR of EPNS NFTs carry something along with NFTs?\r\n                  </Span>\r\n                  <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n                </Question>\r\n\r\n                {showAnswers[1] &&\r\n                  <Answer>\r\n                    <Span>\r\n                      Yes, Each <B>$ROCKSTAR</B> contains <B>2400 $PUSH</B> tokens that can be claimed instantly!!! <AMod href=\"https://medium.com/ethereum-push-notification-service/push-token-economics-d7f566c29b1a\" target=\"_blank\" title=\"Read more about $PUSH tokeneconomics\">Learn about $PUSH Token Economics.</AMod>\r\n                    </Span>\r\n                  </Answer>\r\n                }\r\n              </QnAItem>\r\n\r\n              <QnAItem>\r\n                <Question\r\n                  onClick={() => {toggleShowAnswer(2)}}\r\n                  hover=\"#e20880\"\r\n                >\r\n                  <Span color={themes.color}>\r\n                    How to get $ROCKSTAR of EPNS?\r\n                  </Span>\r\n                  <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n                </Question>\r\n\r\n                {showAnswers[2] &&\r\n                  <Answer>\r\n                    <Span>\r\n                      We’ll be distributing one NFT a week (every Monday) to one community member who does something to help us push the envelope forward. <AMod href=\"https://medium.com/ethereum-push-notification-service/kicking-off-the-epns-nft-community-drops-6a5c49808cf\" target=\"_blank\" title=\"Read how to get $ROCKSTAR of EPNS\">Here are some ways by which you can get one!</AMod>\r\n                    </Span>\r\n                  </Answer>\r\n                }\r\n              </QnAItem>\r\n\r\n            </Item>\r\n          </Item>\r\n        </Content>\r\n\r\n        <Content padding=\"0px 20px 20px\" bg=\"#eee\">\r\n          <Item align=\"flex-start\" margin=\"0px 20px 0px 20px\">\r\n            \r\n            <Controls>\r\n              <SubscribeButton index={0} active={controlAt == 0 ? 1 : 0} onClick={() => {userClickedAt(0)}} >\r\n                <ActionTitle >My NFTs</ActionTitle>\r\n              </SubscribeButton>\r\n              <SubscribeButton index={1} active={controlAt == 1 ? 1 : 0} onClick={() => {userClickedAt(1)}}>\r\n                <ActionTitle >All NFTs</ActionTitle>\r\n              </SubscribeButton>\r\n            </Controls>\r\n           \r\n\r\n            {controlAt === 0 &&\r\n              <MyNFTs\r\n                controlAt={controlAt}\r\n                setControlAt={setControlAt}\r\n                setTokenId={setTokenId}\r\n              />\r\n            }\r\n            {controlAt === 1 &&\r\n              <AllNFTs\r\n                controlAt={controlAt}\r\n                setControlAt={setControlAt}\r\n                setTokenId={setTokenId}\r\n              />\r\n            }\r\n            {controlAt === 2 && tokenId &&\r\n              <TransferNFT tokenId={tokenId}/>\r\n            }\r\n          </Item>\r\n        </Content>\r\n      </Section>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  max-height: 80vh;\r\n`\r\n\r\nconst Controls = styled.div`\r\n  flex: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n`\r\nconst ContainerInfo = styled.div`\r\n  padding: 20px;\r\n`\r\n\r\nconst Items = styled.div`\r\n  display: block;\r\n  align-self: stretch;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n  background: #fafafa;\r\n`\r\n\r\nconst ChannelActionButton = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: left;\r\n  // align-items: center;\r\n  justify-content: flex-end;\r\n  // justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  ${ props => props.disabled && css`\r\n    &:hover {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n    &:active {\r\n      opacity: 1;\r\n      cursor: default;\r\n      pointer: default;\r\n    }\r\n  `}\r\n`\r\n\r\nconst SubscribeButton = styled(ChannelActionButton)`\r\n  background: #e20880;\r\n`\r\n\r\nconst ActionTitle = styled.span`\r\n  ${ props => props.hideit && css`\r\n    visibility: hidden;\r\n  `};\r\n`\r\n\r\nconst Question = styled(Button)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n`\r\n\r\nconst Answer = styled(Item)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n\r\n`\r\n\r\nconst QnAItem = styled(Item)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n  flex: auto;\r\n  margin: 15px 0px;\r\n  border: 1px solid ${props => props.theme.qnaBgBorder};\r\n  border-radius: 10px;\r\n  box-shadow: 0px 5px 20px -10px rgb(0 0 0 / 0.20);\r\n  overflow: hidden;\r\n\r\n  & ${Question} {\r\n    background: ${props => props.theme.qnaBg};\r\n    justify-content: flex-start;\r\n    text-transform: uppercase;\r\n\r\n    & ${Span} {\r\n      font-weight: 400;\r\n      letter-spacing: 0.2em;\r\n      margin-left: 10px;\r\n      flex: 1;\r\n    }\r\n\r\n    &:hover {\r\n      & ${Span} {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n\r\n  & ${Answer} {\r\n    border: 1px solid #e6e6e6;\r\n    border-top: 1px solid #e6e6e6;\r\n    border-bottom-left-radius: 10px;\r\n    border-bottom-right-radius: 10px;\r\n    padding: 10px 15px;\r\n    align-items: flex-start;\r\n    background: #fff;\r\n\r\n    & ${Span} {\r\n      line-height: 1.5em;\r\n      margin: 10px;\r\n      color: #000 ;\r\n      font-size: 1.05em;\r\n    }\r\n  }\r\n`\r\n\r\nconst AMod = styled(A)`\r\n  color: #e20880;\r\n  font-weight: 500;\r\n`\r\n\r\n// Export Default\r\nexport default NFTPage;\r\n","import React, { useState } from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport styled, { css, useTheme } from 'styled-components';\r\nimport {Section, Content, Item, ItemH, ItemBreak, Para, A, B, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\r\n\r\nimport { AiFillHeart } from 'react-icons/ai';\r\nimport { BsChevronExpand } from 'react-icons/bs';\r\n\r\nimport Loader from 'react-loader-spinner'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport AirdropHelper from 'helpers/AirdropHelper';\r\n\r\nimport ViewInfoItem from \"components/ViewInfoItem\";\r\n\r\nimport {ThemeProvider} from \"styled-components\";\r\n\r\nimport { themeLight, themeDark } from \"config/Themization\";\r\n\r\n\r\nimport * as dotenv from \"dotenv\";\r\nimport UsersDataStore from \"singletons/UsersDataStore\";\r\ndotenv.config();\r\n\r\n// Other Information section\r\nfunction AirdropPage() {\r\n  // React GA Analytics\r\n  ReactGA.pageview(\"/airdrop\");\r\n\r\n  const themes = useTheme();\r\n\r\n  const { account, library } = useWeb3React();\r\n\r\n  const [controlAt, setControlAt] = React.useState(0);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [ txInProgress, setTxInProgress ] = React.useState(false);\r\n  const [distributorContract, setDistributorContract] = React.useState(null);\r\n  const [user, setUser] = React.useState(null);\r\n\r\n  const [showAnswers, setShowAnswers] = React.useState([]);\r\n\r\n  const toggleShowAnswer = (id) => {\r\n    let newShowAnswers = [...showAnswers];\r\n    newShowAnswers[id] = !newShowAnswers[id];\r\n\r\n    setShowAnswers(newShowAnswers);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (!!(library && account)) {\r\n      let signer = library.getSigner(account);\r\n      console.log(abis.distributor)\r\n      const signerInstance = new ethers.Contract(addresses.distributor, abis.distributor, signer);\r\n      setDistributorContract(signerInstance);\r\n      // const NFTRewardsInstance = new ethers.Contract(addresses.NFTRewards, abis.NFTRewards, signer);\r\n      // setNFTRewardsContract(NFTRewardsInstance);\r\n    }\r\n  }, [account,library]);\r\n\r\n  React.useEffect(() => {\r\n    if(distributorContract){\r\n      checkClaim();\r\n    }\r\n  }, [account, distributorContract]);\r\n\r\n  // to check wh\r\n  const checkClaim = async () => {\r\n    let user = await AirdropHelper.verifyAddress(account, distributorContract);\r\n    setUser(user)\r\n    if(user)\r\n    setLoading(false)\r\n  }\r\n\r\n  // to claim\r\n  const handleClaim = async (user) => {\r\n    if(distributorContract){\r\n      setTxInProgress(true)\r\n      let sendWithTxPromise\r\n      sendWithTxPromise = await distributorContract.claim(user.index, user.account, user.amount, user.proof)\r\n      const tx = await sendWithTxPromise;\r\n      console.log(tx);\r\n      console.log(\"waiting for tx to finish\");\r\n      let txToast = toast.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\r\n        position: \"bottom-right\",\r\n        autoClose: false,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      try {\r\n        await library.waitForTransaction(tx.hash);\r\n\r\n        toast.update(txToast, {\r\n          render: \"Transaction Completed!\",\r\n          type: toast.TYPE.SUCCESS,\r\n          autoClose: 5000\r\n        });\r\n\r\n        setTxInProgress(false);\r\n      }\r\n      catch(e) {\r\n        toast.update(txToast, {\r\n          render: \"Transaction Failed! (\" + e.name + \")\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000\r\n        });\r\n\r\n        setTxInProgress(false);\r\n      }\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  // toast customize\r\n  const LoaderToast = ({ msg, color }) => (\r\n    <Toaster>\r\n      <Loader\r\n       type=\"Oval\"\r\n       color={color}\r\n       height={30}\r\n       width={30}\r\n      />\r\n      <ToasterMsg>{msg}</ToasterMsg>\r\n    </Toaster>\r\n  )\r\n\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n      <Section margin=\"20px\">\r\n        <Content padding=\"0px 20px 0px\">\r\n          <Item align=\"flex-start\">\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n              <Span bg=\"#35c5f3\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Gratitude</Span><Span weight=\"200\" color={themes.color}> Drop!</Span>\r\n            </H2>\r\n            <H3 color={themes.color}>We would never be here without you! Thanks for the <b color={themes.color}>#PUSH</b>!!!</H3>\r\n          </Item>\r\n        </Content>\r\n\r\n        <Content padding=\"0px 20px 0px 20px\">\r\n          <Item align=\"flex-start\">\r\n            <Para margin=\"10px 0px 0px 0px\" color={themes.color}>Thanks for the ton of support, feedback, encouragement and helping us out in every step! As a small token of our gratitude, we are dropping <B color={themes.color}>1200 $PUSH</B> to anyone who:</Para>\r\n\r\n            <Para margin=\"20px 0px 0px 20px\" color={themes.color}>- Donated to us on <B color={themes.color}>Gitcoin grants round 6 or 7</B></Para>\r\n            <Para margin=\"10px 0px 0px 20px\" color={themes.color}>- Used our dApp on or before <B color={themes.color}>20th March, 2021</B>: <AMod href=\"https://app.epns.io\" target=\"_blank\" title=\"Visit our dApp\">EPNS dApp</AMod></Para>\r\n          </Item>\r\n\r\n          <Item padding=\"40px 0px 20px 0px\">\r\n            {loading &&\r\n              <Loader\r\n               type=\"Oval\"\r\n               color=\"#35c5f3\"\r\n               height={40}\r\n               width={40}\r\n              />\r\n            }\r\n\r\n            {!loading && controlAt == 0 &&\r\n              <>\r\n              {user.verified && user.claimable &&\r\n                <EpicButton\r\n                  onClick={() => {handleClaim(user)}}\r\n                >\r\n                  Claim $PUSH Tokens\r\n                </EpicButton>\r\n              }\r\n              {user.verified && !user.claimable &&\r\n\r\n                <EpicButton\r\n                  theme=\"claimed\"\r\n                  disabled={true}\r\n                >\r\n                  $PUSH Tokens Claimed\r\n                </EpicButton>\r\n              }\r\n              {!user.verified &&\r\n                  <EpicButton\r\n                    theme=\"noteligible\"\r\n                    disabled={true}\r\n                  >\r\n                    Not eligible for Gratitude Drop\r\n                  </EpicButton>\r\n              }\r\n              </>\r\n            }\r\n          </Item>\r\n\r\n        </Content>\r\n      </Section>\r\n\r\n      {/* FAQs */}\r\n      <Section themes={themes.mainBg} padding=\"0px 0px 0px 0px\">\r\n        <Content className=\"contentBox\">\r\n          <Item align=\"stretch\" justify=\"flex-start\" margin=\"-10px 20px 0px 20px\">\r\n\r\n            {/* Question */}\r\n            <Item align=\"stretch\" margin=\"0px 0px 0px 0px\">\r\n              <QnAItem>\r\n                <Question\r\n                  onClick={() => {toggleShowAnswer(1)}}\r\n                  hover=\"#e20880\"\r\n                >\r\n                  <Span color={themes.color}>\r\n                    What is $PUSH contract address?\r\n                  </Span>\r\n                  <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n                </Question>\r\n\r\n                {showAnswers[1] &&\r\n                  <Answer>\r\n                    <Span>$PUSH token contract address is <B>0xf418588522d5dd018b425E472991E52EBBeEEEEE</B></Span>\r\n                  </Answer>\r\n                }\r\n              </QnAItem>\r\n\r\n              <QnAItem>\r\n                <Question\r\n                  onClick={() => {toggleShowAnswer(2)}}\r\n                  hover=\"#e20880\"\r\n                >\r\n                  <Span color={themes.color}>\r\n                    What is EPNS?\r\n                  </Span>\r\n                  <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n                </Question>\r\n\r\n                {showAnswers[2] &&\r\n                  <Answer>\r\n                    <Span>Ethereum Push Notification Service (EPNS) is a decentralized protocol allowing Ethereum users to receive notifications for on-chain or off-chain activity.</Span>\r\n\r\n                    <Span>EPNS allows Web3 actors (users, dapps, service providers) to create notifications that are triggered if and when a smart contract reaches certain conditions. Other Web3 participants can search, browse, and subscribe to specific notifications and more confidently interact with dapps.</Span>\r\n                  </Answer>\r\n                }\r\n              </QnAItem>\r\n\r\n              <QnAItem>\r\n                <Question\r\n                  onClick={() => {toggleShowAnswer(3)}}\r\n                  hover=\"#e20880\"\r\n                >\r\n                  <Span color={themes.color}>\r\n                    Why are push notifications important for Web3?\r\n                  </Span>\r\n                  <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n                </Question>\r\n\r\n                {showAnswers[3] &&\r\n                  <Answer>\r\n                    <Span>Push notifications have transformed the Web2 ecosystem. They have enabled applications to have more direct relationships with users and have yielded fundamental strategies about marketing, product fit, user behavior, and more. </Span>\r\n\r\n                    <Span>The problem with Web2 notifications, however, is that they are entirely created and prescribed by the applications themselves, and are not always net-useful to the end user. Users rarely have a choice about what kinds of notifications they wish to receive, and more often than not, notifications are purely marketing vehicles to drive revenue for the applications.</Span>\r\n\r\n                    <Span><i><B>Decentralized notifications</B></i>, on the other hand, provide the emerging Web3 ecosystem with the benefits of a robust notification ecosystem without the exploitative or centralized drawbacks of Web2 notifications.</Span>\r\n\r\n                    <Span>Applications need ways to communicate with users in more immediate and event-initiated ways than through Twitter, Discord, or email. Users deserve to control what notifications they receive, and should benefit from the open source nature of Web3 by requesting notifications about protocol behavior.</Span>\r\n                  </Answer>\r\n                }\r\n              </QnAItem>\r\n\r\n              <QnAItem>\r\n                <Question\r\n                  onClick={() => {toggleShowAnswer(4)}}\r\n                  hover=\"#e20880\"\r\n                >\r\n                  <Span color={themes.color}>\r\n                    How can I keep up with EPNS?\r\n                  </Span>\r\n                  <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n                </Question>\r\n\r\n                {showAnswers[4] &&\r\n                  <Answer>\r\n                    <Span>Join our <AMod href=\"https://t.me/epnsproject\" target=\"_blank\" title=\"Join our EPNS's Telegram channel\">Telegram</AMod>, follow us on <AMod href=\"https://twitter.com/epnsproject\" target=\"_blank\" title=\"Join our EPNS's Twitter channel\">Twitter</AMod>, and sign up for our 5 minute <AMod href=\"https://epns.substack.com/\" target=\"_blank\" title=\"Join our EPNS's Twitter channel\">weekly product updates</AMod>.</Span>\r\n                  </Answer>\r\n                }\r\n              </QnAItem>\r\n\r\n\r\n            </Item>\r\n          </Item>\r\n        </Content>\r\n      </Section>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  max-height: 80vh;\r\n  background: ${props => props.theme.mainBg};\r\n`\r\n\r\nconst ContainerInfo = styled.div`\r\n  padding: 20px;\r\n`\r\nconst InfoBox = styled.div`\r\n  padding: 10px 20px;\r\n  display: block;\r\n  align-self: stretch;\r\n  background: #fafafa;\r\n`\r\nconst Continue = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  background: ${props => props.theme || '#674c9f'};\r\n  margin: 30px 0px 0px 0px;\r\n  border-radius: 8px;\r\n  padding: 16px;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n`\r\n\r\nconst ChannelTitleLink = styled.a`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\nconst AppLink = styled.a`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\nconst AppLinkText = styled.div`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n`\r\nconst ChannelInfo = styled.div`\r\n  flex: 1;\r\n  margin: 5px 10px;\r\n  min-width: 120px;\r\n  flex-grow: 4;\r\n  flex-direction: column;\r\n  display: flex;\r\n`\r\n\r\nconst ChannelTitle = styled.div`\r\n  margin-bottom: 5px;\r\n`\r\n\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`\r\nconst Question = styled(Button)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n`\r\n\r\nconst Answer = styled(Item)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n\r\n`\r\n\r\nconst QnAItem = styled(Item)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n  flex: auto;\r\n  margin: 15px 0px;\r\n  border: 1px solid ${props => props.theme.qnaBgBorder};\r\n  border-radius: 10px;\r\n  box-shadow: 0px 5px 20px -10px rgb(0 0 0 / 0.20);\r\n  overflow: hidden;\r\n\r\n  & ${Question} {\r\n    background: ${props => props.theme.qnaBg};\r\n    justify-content: flex-start;\r\n    text-transform: uppercase;\r\n\r\n    & ${Span} {\r\n      font-weight: 400;\r\n      letter-spacing: 0.2em;\r\n      margin-left: 10px;\r\n      flex: 1;\r\n    }\r\n\r\n    &:hover {\r\n      & ${Span} {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n\r\n  & ${Answer} {\r\n    border: 1px solid #e6e6e6;\r\n    border-top: 1px solid #e6e6e6;\r\n    border-bottom-left-radius: 10px;\r\n    border-bottom-right-radius: 10px;\r\n    padding: 10px 15px;\r\n    align-items: flex-start;\r\n    background: #fff;\r\n\r\n    & ${Span} {\r\n      line-height: 1.5em;\r\n      margin: 10px;\r\n      color: #000 ;\r\n      font-size: 1.05em;\r\n    }\r\n  }\r\n`\r\n\r\nconst AMod = styled(A)`\r\n  color: #e20880;\r\n  font-weight: 500;\r\n`\r\n\r\nconst EpicButton = styled(A)`\r\n  padding: 15px 15px;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  border-radius: 8px;\r\n  background: ${prop => prop.theme===('claimed' || 'noteligible') ? '#000' : 'linear-gradient(273deg, #674c9f 0%, rgba(226,8,128,1) 100%)'};\r\n`\r\n\r\n// Export Default\r\nexport default AirdropPage;\r\n","import React from \"react\";\r\n\r\nimport styled, { useTheme } from 'styled-components';\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { Section, Content, Item } from 'components/SharedStyling';\r\n\r\nfunction ComingSoonPage(props) {\r\n  const themes = useTheme();\r\n\r\n  // Render\r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n      <Section style={{minHeight: '60vh'}}>\r\n        <Content padding=\"0px 20px 0px\">\r\n          <Item align=\"center\">\r\n            {console.log(props.theme)}\r\n            <Heading color=\"#333\" spacing=\"0.05em\" size=\"4rem\" weight={700}>\r\n             Coming soon.\r\n            </Heading>\r\n          </Item>\r\n        </Content>\r\n      </Section>\r\n      </ThemeProvider>\r\n  );\r\n}\r\n\r\nconst Heading = styled.h2`\r\n  color: ${props => props.theme.scheme === \"dark\" ? props.theme.color : props.color || \"#000\"};\r\n  text-shadow: 2px 0 ${props => props.theme.scheme === \"dark\" ? props.theme.color : props.color || \"#000\"};\r\n  font-weight: ${props => props.weight || 600};\r\n  font-size: ${props => props.size || \"2rem\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  margin: ${props => props.margin || \"20px 0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\r\n  text-align: ${props => props.textAlign || \"inherit\"};\r\n\r\n  @media (max-width: 768px) {\r\n\t\tfont-size: 2.8rem;\r\n\t}\r\n`\r\n\r\n// Export Default\r\nexport default ComingSoonPage;","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport styled, { css, useTheme, ThemeProvider } from 'styled-components';\r\n\r\nimport {Section, Content, Item, ItemH, ItemBreak, A, B, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\r\nimport {incrementStepIndex, decrementStepIndex, setRun} from \"redux/slices/userJourneySlice\";\r\nimport Inbox from \"./InboxPage\";\r\n\r\nimport { BsChevronExpand } from 'react-icons/bs';\r\n\r\nimport GLOBALS from \"config/Globals\";\r\n\r\nfunction TutorialPage(props) {\r\n  const dispatch = useDispatch();\r\n  const themes = useTheme();\r\n\r\n  const {\r\n    run,\r\n    stepIndex\r\n  } = useSelector((state: any) => state.userJourney);\r\n\r\n  const onStart = () => {\r\n    if (run === false) {\r\n      dispatch(setRun(true));\r\n      // dispatch(incrementStepIndex());\r\n    }\r\n  }\r\n\r\n  // Render\r\n  return (\r\n    <Container>\r\n      <Content className=\"contentBox\" padding=\"20px 0px 0px 0px\">\r\n        <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 30px\">\r\n\r\n          <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 0px 0px 0px\">\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\" margin=\"10px 0px 20px 0px\">\r\n              <Span weight=\"200\" color={themes.fontColor}>Live </Span><Span bg=\"#35c5f3\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Walkthrough</Span>\r\n            </H2>\r\n            <H3 maxWidth=\"768px\" color={themes.fontColorSecondary}>Let's walk you through the core functions of EPNS, the <B>native web3 communication protocol!</B></H3>\r\n          </Item>\r\n\r\n          <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 0px 20px 0px\">\r\n            <QnAItem>\r\n              <Question\r\n                onClick={() => {onStart()}}\r\n                hover=\"#e20880\"\r\n              >\r\n                <Span color={themes.color}>\r\n                  Show me everything!\r\n                </Span>\r\n                <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n              </Question>\r\n            </QnAItem>\r\n          </Item>\r\n\r\n        </Item>\r\n      </Content>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css style\r\nconst Container = styled(Section)`\r\n  flex: 1;\r\n  flex-direction: column;\r\n  height: calc(100vh - ${GLOBALS.CONSTANTS.HEADER_HEIGHT}px - 52px - ${props => props.theme.interfaceTopPadding});\r\n  background: ${props => props.theme.mainBg};\r\n  align-self: stretch;\r\n`;\r\n\r\nconst Question = styled(Button)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n`\r\n\r\nconst Answer = styled(Item)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n\r\n`\r\n\r\nconst QnAItem = styled(Item)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n  flex: auto;\r\n  margin: 15px 0px;\r\n  border: 1px solid ${props => props.theme.qnaBgBorder};\r\n  border-radius: 10px;\r\n  box-shadow: 0px 5px 20px -10px rgb(0 0 0 / 0.20);\r\n  overflow: hidden;\r\n\r\n  & ${Question} {\r\n    background: ${props => props.theme.qnaBg};\r\n    justify-content: flex-start;\r\n    text-transform: uppercase;\r\n\r\n    & ${Span} {\r\n      font-weight: 400;\r\n      letter-spacing: 0.2em;\r\n      margin-left: 10px;\r\n      flex: 1;\r\n    }\r\n\r\n    &:hover {\r\n      & ${Span} {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n\r\n  & ${Answer} {\r\n    border: 1px solid #e6e6e6;\r\n    border-top: 1px solid #e6e6e6;\r\n    border-bottom-left-radius: 10px;\r\n    border-bottom-right-radius: 10px;\r\n    padding: 10px 15px;\r\n    align-items: flex-start;\r\n    background: #fff;\r\n\r\n    & ${Span} {\r\n      line-height: 1.5em;\r\n      margin: 10px;\r\n      color: #000 ;\r\n      font-size: 1.05em;\r\n    }\r\n  }\r\n`\r\n\r\n// Export Default\r\nexport default TutorialPage;","import React from \"react\";\r\n\r\nimport styled, {css, useTheme } from 'styled-components';\r\nimport {Section, Content, Item, ItemH, ItemBreak, A, B, H1, H2, H3, Para, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\r\n\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { BsChevronExpand } from 'react-icons/bs';\r\n\r\nfunction ComingSoonPage(props) {\r\n  const themes = useTheme();\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  const [showAnswers, setShowAnswers] = React.useState([]);\r\n\r\n  const toggleShowAnswer = (id) => {\r\n    let newShowAnswers = [...showAnswers];\r\n    newShowAnswers[id] = !newShowAnswers[id];\r\n\r\n    setShowAnswers(newShowAnswers);\r\n  }\r\n\r\n  // Render\r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n      <Container>\r\n        <Content className=\"contentBox\" padding=\"20px 0px 0px 0px\">\r\n          <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 30px\">\r\n\r\n            <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 0px 0px 0px\">\r\n              <H2 textTransform=\"uppercase\" spacing=\"0.1em\" margin=\"10px 0px 20px 0px\">\r\n                <Span weight=\"200\" color={themes.fontColor}>Frequently Asked </Span><Span bg={themes.fontColor} color={themes.mainBg} weight=\"600\" padding=\"0px 8px\">Questions</Span>\r\n              </H2>\r\n            </Item>\r\n\r\n            <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 0px 0px 0px\">\r\n              <H2 textTransform=\"uppercase\" spacing=\"0.1em\" margin=\"20px 0px 20px 0px\" size=\"1.6rem\">\r\n                <Span weight=\"600\" padding=\"0px 8px\" bg=\"#E20880\" color=\"#fff\">For Users</Span>\r\n              </H2>\r\n            </Item>\r\n\r\n            <Item align=\"stretch\" justify=\"flex-start\">\r\n              {/* Question */}\r\n              <Item align=\"stretch\" margin=\"0px 0px 20px 0px\">\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => {toggleShowAnswer(1)}}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                      What are Channels?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n                  </Question>\r\n\r\n                  {showAnswers[1] &&\r\n                    <Answer>\r\n                      <Span>\r\n                        Any user or protocol that activates itself as a service to send notifications is a Channel.\r\n                        </Span>\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n\r\n\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => {toggleShowAnswer(2)}}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                    Is Channel Creation a compulsory process?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n                  </Question>\r\n\r\n                  {showAnswers[2] &&\r\n                    <Answer>\r\n                      <Span>\r\n                        Not at all\r\n                      </Span>\r\n                      <Span>\r\n                        Channel creation is only important for any protocol or service that wants to trigger notifications for its users. If you are a user who is only interested in receiving notifications and being up to the minute with the Web3 world, channel creation is not at all required for you.  \r\n                      </Span>\r\n\r\n                      {/* <Span>\r\n                        Channel creation is only important for any protocol or service that wants to trigger notifications for its users. If you are a user who is only interested in receiving notifications and being up to the minute with the Web3 world, channel creation is not at all required for you.\r\n                      </Span> */}\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => {toggleShowAnswer(3)}}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                    How do I opt into a Channel?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n                  </Question>\r\n\r\n                  {showAnswers[3] &&\r\n                    <Answer>\r\n                      <Span>\r\n                      Every Channel in the View Channels section comes with an opt-in button. Once you click on it and sign the transaction, you will be subscribed to that channel & receive its notifications.\r\n                      </Span>\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => {toggleShowAnswer(4)}}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                    Does Opting-in to a Channel require gas fees?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n                  </Question>\r\n\r\n                  {showAnswers[4] &&\r\n                    <Answer>\r\n                      <Span>\r\n                      NOPE. Subscribing to a channel is a Gasless action. All you need to do is sign the transaction and that’s it. \r\n                      </Span>\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n\r\n\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => {toggleShowAnswer(5)}}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                    Do I need ETHER to interact with the DAPP?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n                  </Question>\r\n\r\n                  {showAnswers[5] &&\r\n                    <Answer>\r\n                      <Span>\r\n                      Nope. We have gasless mechanisms for most of the things in the Dapp. Therefore, an average joe doesn’t need any ether to use our dapp.\r\n                      </Span>\r\n\r\n                      <Span>\r\n                      ETH or Funds are only required when a Channel is to be created.\r\n                      </Span>\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n\r\n\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => {toggleShowAnswer(6)}}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                    How do I receive notifications?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n                  </Question>\r\n\r\n                  {showAnswers[6] &&\r\n                    <Answer>\r\n                      <Span>\r\n                      In order to receive notifications seamlessly, EPNS provides 3 different crypto front-ends\r\n                      </Span>\r\n                      <Span2>\r\n                        <AMod href=\"https://app.epns.io/\" target=\"_blank\">EPNS Dapp</AMod>\r\n                      </Span2>\r\n                      <Span2 mtop=\"0.2rem\">\r\n                        <AMod href=\"https://chrome.google.com/webstore/detail/epns-protocol-alpha/lbdcbpaldalgiieffakjhiccoeebchmg\" target=\"_blank\">Browser Extension</AMod>\r\n                      </Span2>\r\n                      <Span2 mtop=\"0.2rem\">\r\n                        <AMod href=\"https://play.google.com/store/apps/details?id=io.epns.epns\" target=\"_blank\"><span style={{marginRight:\"0.3rem\"}}>Android</span></AMod> <span style={{marginRight:\"0.3rem\"}}>and</span> <AMod href=\"https://apps.apple.com/app/ethereum-push-service-epns/id1528614910\" target=\"_blank\">IOS Apps</AMod>\r\n                      </Span2>\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n              </Item>\r\n            </Item>\r\n\r\n            <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 0px 0px 0px\">\r\n              <H2 textTransform=\"uppercase\" spacing=\"0.1em\" margin=\"30px 0px 20px 0px\" size=\"1.6rem\">\r\n                <Span weight=\"600\" padding=\"0px 8px\" bg=\"#E20880\" color=\"#fff\">For Developers</Span>\r\n              </H2>\r\n            </Item>\r\n\r\n            <Item align=\"stretch\" justify=\"flex-start\">\r\n              {/* Question */}\r\n              <Item align=\"stretch\" margin=\"0px 0px 20px 0px\">\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => {toggleShowAnswer(7)}}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                      How do I create a Channel?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n                  </Question>\r\n\r\n                  {showAnswers[7] &&\r\n                    <Answer>\r\n                      <Span>\r\n                        Easiest way to create a channel is from our <AMod target=\"_blank\" href=\"https://app.epns.io/#/dashboard\">EPNS Dapp</AMod> itself. Find the entire channel creation process <AMod target=\"_blank\" href=\"https://docs.epns.io/developer-zone/developer-guides/create-your-first-channel\">here</AMod>.\r\n                        </Span>\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n\r\n\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => {toggleShowAnswer(8)}}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                    What are the different types of Notifications?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n                  </Question>\r\n\r\n                  {showAnswers[8] &&\r\n                    <Answer>\r\n                      <Span>\r\n                        The 3 main types of notifications right now:\r\n                      </Span>\r\n                      <Span>\r\n                        <b>Broadcast Notification</b>: <i>Sent out to all Subscribers of a Channel</i> \r\n                      </Span>\r\n                      <Span>\r\n                        <b>Subset Notification</b>: <i>Sent out to a group of all the subscribers</i> \r\n                      </Span>\r\n                      <Span>\r\n                        <b>Targetted Notification</b>: <i>Sent out to a specific subscriber of your channel</i> \r\n                      </Span>\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => {toggleShowAnswer(9)}}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                    How do I send notifications?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n                  </Question>\r\n\r\n                  {showAnswers[9] &&\r\n                    <Answer>\r\n                      <Span>\r\n                      Sending a notification is possible from the DAPP, Back-end as well as Smart Contracts.\r\n                      </Span>\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => {toggleShowAnswer(10)}}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                    How do I use Backend-Sdk and Showrunners?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n                  </Question>\r\n\r\n                  {showAnswers[10] &&\r\n                    <Answer>\r\n                      <Span>\r\n                      EPNS Documentation hub contains in-depth details on how to use our <AMod target=\"_blank\" href=\"https://docs.epns.io/developer-zone/developer-guides/sending-notifications/server-workflow/backend-sdk-quick-set-up\">Backend SDKs</AMod> and <AMod target=\"_blank\" href=\"https://docs.epns.io/developer-zone/developer-guides/working-with-showrunners\">Showrunners</AMod>. Check them out. \r\n                      </Span>\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n\r\n\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => {toggleShowAnswer(11)}}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                    DHow do I use the Front-SDK?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n                  </Question>\r\n\r\n                  {showAnswers[11] &&\r\n                    <Answer>\r\n                      <Span>\r\n                      EPNS Documentation hub contains in-depth details on how to use our <AMod target=\"_blank\" href=\"https://docs.epns.io/developer-zone/developer-guides/integrating-with-front-end-sdk\">Front-end SDK</AMod>.\r\n                      </Span>\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n\r\n\r\n                <QnAItem>\r\n                  <Question\r\n                    onClick={() => {toggleShowAnswer(12)}}\r\n                    hover=\"#e20880\"\r\n                  >\r\n                    <Span color={themes.color}>\r\n                    Where can I find Developer Documentations?\r\n                    </Span>\r\n                    <BsChevronExpand size={20} color={\"#ddd\"}/>\r\n                  </Question>\r\n\r\n                  {showAnswers[12] &&\r\n                    <Answer>\r\n                      <Span>\r\n                      All of our documentation can be found in our <AMod target=\"_blank\" href=\"https://docs.epns.io/\">EPNS Documentation HUB</AMod>.\r\n                      </Span>\r\n                    </Answer>\r\n                  }\r\n                </QnAItem>\r\n              </Item>\r\n            </Item>\r\n\r\n          </Item>\r\n        </Content>\r\n      </Container>\r\n      </ThemeProvider>\r\n  );\r\n}\r\n\r\nconst Container = styled(Section)`\r\n  flex: 1;\r\n  flex-direction: column;\r\n  background: ${props => props.theme.mainBg};\r\n  align-self: stretch;\r\n`;\r\nconst Span2 = styled.span`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-left: 2rem;\r\n  color:black;\r\n  font-weight:300;\r\n  margin-top:${props => props.mtop || \"0px\" }\r\n`\r\n\r\nconst Heading = styled.h2`\r\n  color: ${props => props.theme.scheme === \"dark\" ? props.theme.color : props.color || \"#000\"};\r\n  text-shadow: 2px 0 ${props => props.theme.scheme === \"dark\" ? props.theme.color : props.color || \"#000\"};\r\n  font-weight: ${props => props.weight || 600};\r\n  font-size: ${props => props.size || \"2rem\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  margin: ${props => props.margin || \"20px 0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\r\n  text-align: ${props => props.textAlign || \"inherit\"};\r\n  margin-left:20px;\r\n  @media (max-width: 768px) {\r\n\t\tfont-size: 2.8rem;\r\n\t}\r\n`\r\n\r\nconst Question = styled(Button)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n`\r\n\r\nconst Answer = styled(Item)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n`\r\n\r\nconst QnAItem = styled(Item)`\r\n  align-items: stretch;\r\n  align-self: stretch;\r\n  flex: auto;\r\n  margin: 15px 0px;\r\n  border: 1px solid ${props => props.theme.qnaBgBorder};\r\n  border-radius: 10px;\r\n  box-shadow: 0px 5px 20px -10px rgb(0 0 0 / 0.20);\r\n  overflow: hidden;\r\n\r\n  & ${Question} {\r\n    background: ${props => props.theme.qnaBg};\r\n    justify-content: flex-start;\r\n    text-transform: uppercase;\r\n    \r\n    & ${Span} {\r\n      font-weight: 400;\r\n      letter-spacing: 0.2em;\r\n      margin-left: 10px;\r\n      flex: 1;\r\n    }\r\n\r\n    &:hover {\r\n      & ${Span} {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n\r\n  & ${Answer} {\r\n    border: 1px solid #e6e6e6;\r\n    border-top: 1px solid #e6e6e6;\r\n    border-bottom-left-radius: 10px;\r\n    border-bottom-right-radius: 10px;\r\n    padding: 10px 15px;\r\n    align-items: flex-start;\r\n    background: #fff;\r\n\r\n    & ${Span} {\r\n      line-height: 1.5em;\r\n      margin: 10px;\r\n      color: #000 ;\r\n      font-size: 1.05em;\r\n    }\r\n  }\r\n`\r\n\r\nconst AMod = styled(A)`\r\n  color: #e20880;\r\n  font-weight: 500;\r\n`\r\n\r\n\r\n// Export Default\r\nexport default ComingSoonPage;","import React, { useState } from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport {\r\n  Section,\r\n  Content,\r\n  Item,\r\n  ItemH,\r\n  WaveOuter,\r\n  WaveInner,\r\n  H2,\r\n  H3,\r\n  Span,\r\n  Button,\r\n  FormSubmision,\r\n  Input,\r\n  TextField,\r\n} from \"components/SharedStyling\";\r\nimport Wave from \"react-wavify\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport styled, { useTheme } from \"styled-components\";\r\nimport { FaCheckCircle } from \"react-icons/fa\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport {ThemeProvider} from \"styled-components\";\r\nimport { themeLight, themeDark } from \"config/Themization\";\r\n\r\n// HELPER METHODS\r\nconst validateEmail = (email) => {\r\n  const re =\r\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n};\r\n\r\nconst isEmpty = (field) => {\r\n  if (field.trim().length === 0) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nconst SupportPage = () => {\r\n  // React GA Analytics\r\n  ReactGA.pageview(\"/support\");\r\n\r\n  const contactFormTopics = [\"Support\", \"Integrate\", \"Others\"];\r\n\r\n  const [contactFormProcessing, setContactFormProcessing] = React.useState(0);\r\n  const [contactFormName, setContactFormName] = React.useState(\"\");\r\n  const [contactFormEmail, setContactFormEmail] = React.useState(\"\");\r\n  const [contactFormTopic, setContactFormTopic] = React.useState(\r\n    contactFormTopics[0]\r\n  );\r\n  const [contactFormSub, setContactFormSub] = React.useState(\"\");\r\n  const [contactFormMsg, setContactFormMsg] = React.useState(\"\");\r\n  const [contactFormError, setContactFormError] = React.useState(\"\");\r\n\r\n  const themes = useTheme();\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  const handleContactFormSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\r\n\t\t// Check everything in order\r\n\t\tif (validateEmail(contactFormEmail)) {\r\n\t\t\tif (isEmpty(contactFormName)) {\r\n\t\t\t\tsetContactFormError(\"Name can't be empty\");\r\n\t\t\t\tsetContactFormProcessing(0);\r\n\t\t\t} else if (isEmpty(contactFormSub)) {\r\n\t\t\t\tsetContactFormError(\"Subject can't be empty\");\r\n\t\t\t\tsetContactFormProcessing(0);\r\n\t\t\t} else if (isEmpty(contactFormMsg)) {\r\n\t\t\t\tsetContactFormError(\"Message can't be empty\");\r\n\t\t\t\tsetContactFormProcessing(0);\r\n\t\t\t} else {\r\n\t\t\t\tsetContactFormProcessing(1);\r\n\t\r\n\t\t\t\tconst requestOptions = {\r\n\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\tfrom: contactFormEmail,\r\n\t\t\t\t\t\tname: contactFormName,\r\n\t\t\t\t\t\ttopic: contactFormTopic,\r\n\t\t\t\t\t\tsub: contactFormSub,\r\n\t\t\t\t\t\tmsg: contactFormMsg,\r\n\t\t\t\t\t}),\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tfetch(\r\n\t\t\t\t\t\"https://backend-kovan.epns.io/apis/mailing/send_mail\",\r\n\t\t\t\t\trequestOptions\r\n\t\t\t\t)\r\n\t\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t\t.then((jsondata) => {\r\n\t\t\t\t\t\t// console.log(jsondata);\r\n\t\t\t\t\t\tsetContactFormProcessing(2);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t// console.log(err);\r\n\t\t\t\t\t\tsetContactFormError(\r\n\t\t\t\t\t\t\t\"Mayday! Mayday! something went wrong. Please retry...\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tsetContactFormProcessing(0);\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetContactFormError(\"Incorrect e-mail, please check and retry!\");\r\n\t\t\tsetContactFormProcessing(0);\r\n\t\t}\r\n\t};\r\n\r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n    <Section id=\"contact\" theme={themes.mainBg}>\r\n      <Content className=\"contentBox\" padding=\"10px 0\">\r\n        <Item align=\"stretch\" justify=\"flex-start\" margin=\"0px 20px\">\r\n            <Item align=\"stretch\" align=\"flex-end\" tabletAlign=\"flex-start\" margin=\"0px 16px 0px 0px\" textAlign=\"right\" tabletTextAlign=\"left\">\r\n              <H2 textTransform=\"uppercase\" spacing=\"0.1em\" bg=\"#fff\">\r\n                <Span color={themes.color} weight=\"600\" padding=\"0px\">Contact US!</Span>\r\n                {/* <Span weight=\"200\" color=\"#000\"> Us!</Span> */}\r\n              </H2>\r\n              <H3 bg=\"#fff\" color={themes.color}>Get in Touch</H3>\r\n            </Item>\r\n          <Item self=\"stretch\">\r\n            <FormSubmision\r\n              flex=\"1\"\r\n              direction=\"row\"\r\n              justify=\"stretch\"\r\n              margin=\"10px\"\r\n              size=\"1.1rem\"\r\n              onSubmit={handleContactFormSubmit}\r\n            >\r\n              <Item align=\"stretch\" justify=\"stretch\" margin=\"10px -15px\">\r\n                {contactFormProcessing === 0 && (\r\n                  <>\r\n                    <ItemH align=\"stretch\">\r\n                      <Item\r\n                        flex=\"1\"\r\n                        margin=\"15px\"\r\n                        justify=\"flex-start\"\r\n                        align=\"stretch\"\r\n                        minWidth=\"280px\"\r\n                      >\r\n                        <ContactInput\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n                          radius=\"4px\"\r\n                          padding=\"12px\"\r\n                          bg=\"#fff\"\r\n                          border=\"12px\"\r\n                          placeholder=\"John Wick\"\r\n                          value={contactFormName}\r\n                          onChange={(e) => {\r\n                            setContactFormName(e.target.value);\r\n                          }}\r\n                          autocomplete=\"name\"\r\n                          style={{\r\n                          }}\r\n                        />\r\n                        {contactFormName.trim().length === 0 && (\r\n                          <Span\r\n                            padding=\"4px 10px\"\r\n                            right=\"0px\"\r\n                            top=\"0px\"\r\n                            pos=\"absolute\"\r\n                            color=\"#fff\"\r\n                            bg=\"#000\"\r\n                            size=\"0.7rem\"\r\n                            z=\"1\"\r\n                          >\r\n                            Name\r\n                          </Span>\r\n                        )}\r\n                      </Item>\r\n\r\n                      <Item\r\n                        flex=\"5\"\r\n                        margin=\"15px\"\r\n                        justify=\"flex-start\"\r\n                        align=\"stretch\"\r\n                        minWidth=\"280px\"\r\n                      >\r\n                        <ContactInput\r\n                          required\r\n                          placeholder=\"john@wick.com\"\r\n                          radius=\"4px\"\r\n                          padding=\"12px\"\r\n                          bg=\"#fff\"\r\n                          value={contactFormEmail}\r\n                          onChange={(e) => {\r\n                            setContactFormEmail(e.target.value);\r\n                          }}\r\n                          autocomplete=\"email\"\r\n                        />\r\n                        {contactFormEmail.trim().length === 0 && (\r\n                          <Span\r\n                            padding=\"4px 10px\"\r\n                            right=\"0px\"\r\n                            top=\"0px\"\r\n                            pos=\"absolute\"\r\n                            color=\"#fff\"\r\n                            bg=\"#000\"\r\n                            size=\"0.7rem\"\r\n                            z=\"1\"\r\n                          >\r\n                            E-mail\r\n                          </Span>\r\n                        )}\r\n                      </Item>\r\n                    </ItemH>\r\n\r\n                    <Item\r\n                      flex=\"5\"\r\n                      justify=\"flex-start\"\r\n                      align=\"stretch\"\r\n                      minWidth=\"280px\"\r\n                      margin=\"15px\"\r\n                    >\r\n                      <DropdownStyled\r\n                        options={contactFormTopics}\r\n                        onChange={(option) => setContactFormTopic(option.value)}\r\n                        value={contactFormTopic}\r\n                        placeholder=\"Select an option\"\r\n                      />\r\n                    </Item>\r\n\r\n                    <Item\r\n                      justify=\"center\"\r\n                      align=\"stretch\"\r\n                      minWidth=\"280px\"\r\n                      margin=\"15px\"\r\n                    >\r\n                      <ContactInput\r\n                        required\r\n                        placeholder=\"I want to tell you guys a secret!\"\r\n                        radius=\"4px\"\r\n                        padding=\"12px\"\r\n                        bg=\"#fff\"\r\n                        value={contactFormSub}\r\n                        onChange={(e) => {\r\n                          setContactFormSub(e.target.value);\r\n                        }}\r\n                        autocomplete=\"on\"\r\n                      />\r\n                      {contactFormSub.trim().length === 0 && (\r\n                        <Span\r\n                          padding=\"4px 10px\"\r\n                          right=\"0px\"\r\n                          top=\"0px\"\r\n                          pos=\"absolute\"\r\n                          color=\"#fff\"\r\n                          bg=\"#000\"\r\n                          size=\"0.7rem\"\r\n                          z=\"1\"\r\n                        >\r\n                          Subject\r\n                        </Span>\r\n                      )}\r\n                    </Item>\r\n\r\n                    <Item\r\n                      justify=\"center\"\r\n                      align=\"stretch\"\r\n                      minWidth=\"280px\"\r\n                      margin=\"15px\"\r\n                    >\r\n                      <ContactTextArea\r\n                        required\r\n                        placeholder=\"This is where you will tell us that secret, or a bug or whatever is on your mind.\"\r\n                        rows=\"6\"\r\n                        radius=\"4px\"\r\n                        padding=\"12px\"\r\n                        bg=\"#fff\"\r\n                        value={contactFormMsg}\r\n                        onChange={(e) => {\r\n                          setContactFormMsg(e.target.value);\r\n                        }}\r\n                        autocomplete=\"off\"\r\n                      />\r\n                    </Item>\r\n                  </>\r\n                )}\r\n\r\n                {contactFormProcessing === 2 && (\r\n                  <Item align=\"center\" margin=\"0px 10px\">\r\n                    <ItemH\r\n                      color=\"#e20880\"\r\n                      bg=\"#000\"\r\n                      padding=\"10px 15px\"\r\n                      columnGap=\"0px\"\r\n                      rowGap=\"0px\"\r\n                    >\r\n                      <FaCheckCircle size={24} color=\"#fff\" />\r\n                      <Span\r\n                        padding=\"0px 0px 0px 8px\"\r\n                        color=\"#fff\"\r\n                        textTransform=\"uppercase\"\r\n                        spacing=\"0.1em\"\r\n                      >\r\n                        Message Sent! We will be in Touch :)\r\n                      </Span>\r\n                    </ItemH>\r\n                  </Item>\r\n                )}\r\n\r\n                {contactFormError && contactFormProcessing === 0 && (\r\n                  <Item align=\"center\" margin=\"0px 10px\">\r\n                    <Item\r\n                      color=\"#e20880\"\r\n                      bg=\"#000\"\r\n                      padding=\"10px 15px\"\r\n                      margin=\"15px\"\r\n                    >\r\n                      <Span\r\n                        color=\"#fff\"\r\n                        textTransform=\"uppercase\"\r\n                        spacing=\"0.1em\"\r\n                      >\r\n                        {contactFormError}\r\n                      </Span>\r\n                    </Item>\r\n                  </Item>\r\n                )}\r\n\r\n                <Item\r\n                  justify=\"stretch\"\r\n                  self=\"stretch\"\r\n                  align=\"stretch\"\r\n                  minWidth=\"280px\"\r\n                >\r\n                  {contactFormProcessing !== 2 && (\r\n                    <Button\r\n                      bg=\"#000\"\r\n                      color=\"#fff\"\r\n                      border={themes.buttonBd}\r\n                      flex=\"1\"\r\n                      radius=\"4px\"\r\n                      disabled={contactFormProcessing}\r\n                      margin=\"15px\"\r\n                      padding=\"12px 15px\"\r\n                    >\r\n                      {contactFormProcessing === 1 && (\r\n                        <Loader\r\n                          type=\"Oval\"\r\n                          color=\"#fff\"\r\n                          height={24}\r\n                          width={24}\r\n                        />\r\n                      )}\r\n                      {contactFormProcessing === 0 && (\r\n                        <Input\r\n                          cursor=\"hand\"\r\n                          color=\"#fff\"\r\n                          weight=\"400\"\r\n                          size=\".9em\"\r\n                          spacing=\"0.2em\"\r\n                          type=\"submit\"\r\n                          value=\"Submit\"\r\n                        />\r\n                      )}\r\n                    </Button>\r\n                  )}\r\n                </Item>\r\n              </Item>\r\n            </FormSubmision>\r\n          </Item>\r\n        </Item>\r\n      </Content>\r\n    </Section>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\n// CSS Styles\r\nconst DropdownStyled = styled(Dropdown)`\r\n  .Dropdown-control {\r\n    background-color: #000;\r\n    color: #fff;\r\n    padding: 12px 52px 12px 10px;\r\n    border: 1px solid ${props => props.theme.buttonBd};\r\n    border-radius: 4px;\r\n  }\r\n\r\n  .Dropdown-placeholder {\r\n    text-transform: uppercase;\r\n    font-weight: 400;\r\n    letter-spacing: 0.2em;\r\n    font-size: 0.8em;\r\n\t\tpadding-left: 6px\r\n  }\r\n\r\n  .Dropdown-arrow {\r\n    top: 18px;\r\n    bottom: 0;\r\n    border-color: #fff transparent transparent;\r\n  }\r\n\r\n  .Dropdown-menu {\r\n    border: 1px solid #000;\r\n    box-shadow: none;\r\n    background-color: #000;\r\n    border-radius: 0px;\r\n    margin-top: -3px;\r\n    border-bottom-right-radius: 4px;\r\n    border-bottom-left-radius: 4px;\r\n  }\r\n\r\n  .Dropdown-option {\r\n    background-color: rgb(35 35 35);\r\n    color: #ffffff99;\r\n\r\n    text-transform: uppercase;\r\n    letter-spacing: 0.2em;\r\n    font-size: 0.7em;\r\n    padding: 15px 20px;\r\n  }\r\n\r\n  .Dropdown-option:hover {\r\n    background-color: #000000;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst ContactInput = styled(Input)`\r\n\tbackground: #FFFFFF;\r\n\tborder: 1px solid #D4D4D4;\r\n\tbox-sizing: border-box;\r\n\tborder-radius: 4px;\r\n`\r\n\r\nconst ContactTextArea = styled(TextField)`\r\n\tbackground: #FFFFFF;\r\n\tborder: 1px solid #D4D4D4;\r\n\tbox-sizing: border-box;\r\n\tborder-radius: 4px;\r\n`\r\n\r\nexport { SupportPage };","import React from \"react\";\r\nimport ReactGA from \"react-ga\";\r\nimport { Navigate, Routes, Route, Link } from \"react-router-dom\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Content, Item, ItemH, Span, H2, B, Anchor } from \"components/SharedStyling\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\n\r\nimport { VscClose } from 'react-icons/vsc';\r\n\r\nimport InboxPage from \"pages/InboxPage\";\r\nimport SpamPage from \"pages/SpamPage\";\r\nimport ViewChannelsPage from \"pages/ViewChannelsPage\";\r\nimport ChannelDashboardPage from \"pages/ChannelDashboardPage\";\r\nimport ReceiveNotifsPage from \"pages/ReceiveNotifsPage\";\r\n\r\nimport GovernancePage from \"pages/GovernancePage\";\r\n\r\nimport YieldFarmingPage from \"pages/YieldFarmingPage\";\r\nimport NFTPage from \"pages/NFTPage\";\r\nimport AirdropPage from \"pages/AirdropPage\";\r\nimport ComingSoonPage from \"pages/ComingSoonPage\";\r\nimport TutorialPage from \"pages/TutorialPage\";\r\nimport FAQPage from \"pages/FAQPage\";\r\n\r\nimport {SupportPage} from \"pages/SupportPage\";\r\n\r\nimport GLOBALS from \"config/Globals\";\r\n\r\n// Create Header\r\nfunction MasterInterfacePage() {\r\n  // Master Interface controls settings\r\n  const [playTeaserVideo, setPlayTeaserVideo] = React.useState(false);\r\n  const [loadTeaserVideo, setLoadTeaserVideo] = React.useState(null);\r\n\r\n  const runYoutube = (flag) => {\r\n    setPlayTeaserVideo(flag);\r\n    console.log(\"here\");\r\n  }\r\n\r\n  // Render\r\n  return (\r\n    <Container>\r\n      <Interface>\r\n        <Routes>\r\n          <Route path=\"inbox\" element={<InboxPage />} />\r\n          <Route path=\"channels\" element={\r\n              <ViewChannelsPage \r\n                loadTeaser={setLoadTeaserVideo}\r\n                playTeaser={setPlayTeaserVideo}\r\n              />\r\n            } \r\n          />\r\n          <Route path=\"dashboard\" element={<ChannelDashboardPage />} />\r\n          <Route path=\"spam\" element={<SpamPage />} />\r\n          <Route path=\"receive\" element={<ReceiveNotifsPage />} />\r\n\r\n          <Route path=\"govern\" element={<GovernancePage />} />\r\n\r\n          <Route path=\"yield\" element={<YieldFarmingPage />} />\r\n          <Route path=\"rockstar\" element={<NFTPage />} />\r\n          <Route path=\"gratitude\" element={<AirdropPage />} />\r\n          <Route path=\"live_walkthrough\" element={<TutorialPage />} />\r\n          <Route path=\"comingsoon\" element={<ComingSoonPage />} />\r\n          <Route path=\"faq\" element={<FAQPage />} />\r\n          <Route\r\n              path=\"/\"\r\n              element={<Navigate to=\"/channels\" />}\r\n          />\r\n          <Route path=\"support\" element={<SupportPage/>}/>\r\n        </Routes>\r\n      </Interface>\r\n\r\n      {/* For Channels Opt-in / Opt-out */}\r\n      <ToastContainer\r\n        position=\"bottom-right\"\r\n        autoClose={false}\r\n        newestOnTop\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n      />\r\n\r\n      {/* To play youtube video from anywhere */}\r\n      {playTeaserVideo &&\r\n        <PreviewOuter>\r\n          <PreviewBG\r\n            href=\"#\"\r\n            bg=\"transparent\"\r\n            onClick={(e) => {e.preventDefault(); setPlayTeaserVideo(!playTeaserVideo)}}\r\n          >\r\n            <PreviewContent className=\"contentBox\">\r\n              <PreviewClose\r\n                href=\"#\"\r\n                bg=\"transparent\"\r\n                hover=\"transparent\"\r\n                hoverBG=\"transparent\"\r\n                onClick={(e) => {e.preventDefault(); setPlayTeaserVideo(!playTeaserVideo)}}\r\n              >\r\n                <VscClose size={40} color=\"#fff\"/>\r\n              </PreviewClose>\r\n              <Preview>\r\n                <div class='videoWrapper'><iframe src={loadTeaserVideo} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\r\n              </Preview>\r\n            </PreviewContent>\r\n          </PreviewBG>\r\n        </PreviewOuter>\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css style\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  flex-direction: column;\r\n  min-height: calc(100vh - ${GLOBALS.CONSTANTS.HEADER_HEIGHT}px - 20px - ${props => props.theme.interfaceTopPadding});\r\n  padding: ${props => props.theme.interfaceTopPadding} 20px 20px 20px;\r\n  align-items: stretch;\r\n`;\r\n\r\nconst Interface = styled(Item)`\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: stretch;\r\n\r\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\r\n  border-radius: 20px;\r\n  border: 1px solid ${props => props.theme.interfaceBorder};\r\n\r\n  margin: 15px 15px 15px 0px;\r\n  overflow: hidden;\r\n\r\n  @media (max-width: 992px) {\r\n    margin: 15px 0px;\r\n  }\r\n`\r\n\r\nconst PreviewOuter = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgb(0 0 0 / 0.75);\r\n  z-index: 999;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst PreviewBG = styled(Anchor)`\r\n  position: initial;\r\n  flex: 1;\r\n`\r\n\r\nconst PreviewContent = styled.div`\r\n  width: 100%;\r\n  align-self: center;\r\n  max-width: 1140px;\r\n  flex: 1 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Preview = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  margin: 40px 20px;\r\n  border-left: 10px solid #35c4f3;\r\n  border-radius: 10px;\r\n`\r\n\r\nconst PreviewClose = styled(Anchor)`\r\n  align-self: flex-end;\r\n  margin-bottom: -40px;\r\n`\r\n\r\n// Export Default\r\nexport default MasterInterfacePage;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { themeLight, themeDark } from \"config/Themization\";\r\nimport { Item, ItemH, Span, H3, B, A, Button } from \"components/SharedStyling\";\r\n\r\nimport {incrementStepIndex, setRun, setIndex, setWelcomeNotifsEmpty , setTutorialContinous} from \"../redux/slices/userJourneySlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst UserJourneySteps = ({darkMode}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n      isCommunicateOpen,\r\n      isDeveloperOpen,\r\n    } = useSelector((state) => state.userJourney);\r\n\r\n  const steps = [\r\n    {\r\n      //0\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            Let's begin our journey!\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              <B>EPNS</B>, the native web3 communication layer enables open communication tied to wallet address from any supported dApps, protocol or web3 projects.\r\n            </Span>\r\n\r\n            <Span color=\"inherit\" margin=\"20px 0px 0px 0px\">\r\n              To get started, follow the icon <BeaconExample><BeaconExamplePulse /></BeaconExample>, click next to continue!\r\n            </Span>\r\n          </Item>\r\n          \r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                if (isCommunicateOpen) dispatch(incrementStepIndex());\r\n                dispatch(incrementStepIndex());\r\n              }}\r\n            >\r\n              Next\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      locale: { next: <strong aria-label=\"next\">NEXT</strong> },\r\n      placement: \"center\",\r\n      target: \"body\",\r\n      hideFooter: true,\r\n      // defaultProps: false,\r\n      \r\n      // spotlightClicks: true,\r\n      // disableOverlayClose: false,\r\n    },\r\n    {\r\n      //1\r\n      content: (\r\n        <Item\r\n          color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          size=\"normal\"\r\n          align=\"stretch\"\r\n        >\r\n          <Span color=\"inherit\">\r\n            Communicate tab holds all your communication including notifications! Click to expand it.\r\n          </Span>\r\n        </Item>\r\n      ),\r\n      placement: \"right-start\",\r\n      target: \".communicate\",\r\n      spotlightClicks: true,\r\n      disableAnimation: false,\r\n      disablefloating: false,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n      styles: {\r\n        buttonNext: {\r\n          display: 'none',\r\n        },\r\n        buttonSkip: {\r\n          display: 'none',\r\n        },\r\n        buttonClose: {\r\n          display: 'none',\r\n        }\r\n      }\r\n    },\r\n    {\r\n      //2\r\n      content: (\r\n        <Item\r\n          color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          size=\"normal\"\r\n          align=\"stretch\"\r\n        >\r\n          <Span color=\"inherit\">\r\n            Channels are services that want to send notifications to your wallet address. Let's check them out!\r\n          </Span>\r\n        </Item>\r\n      ),\r\n      placement: \"right-start\",\r\n      target: \".channels\",\r\n      spotlightClicks: true,\r\n      disableAnimation: false,\r\n      disablefloating: false,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n      styles: {\r\n        buttonNext: {\r\n          display: 'none',\r\n        },\r\n        buttonSkip: {\r\n          display: 'none',\r\n        },\r\n        buttonClose: {\r\n          display: 'none',\r\n        }\r\n      },\r\n    },\r\n    {\r\n      //3\r\n      content: (\r\n        <Item\r\n          color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          size=\"normal\"\r\n          align=\"stretch\"\r\n        >\r\n          <Span color=\"inherit\">\r\n            This is the Channels Page. Please wait while we load channels from EPNS protocol.\r\n          </Span>\r\n        </Item>\r\n      ),\r\n      placement: \"center\",\r\n      target: \"body\",\r\n      hideFooter: true,\r\n      styles: {\r\n        buttonNext: {\r\n          display: 'none',\r\n        },\r\n        buttonSkip: {\r\n          display: 'none',\r\n        },\r\n        buttonClose: {\r\n          display: 'none',\r\n        }\r\n      },\r\n    },\r\n    {\r\n      //4\r\n    },\r\n    {\r\n      //5\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            Let's opt-in!\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              <B>EPNS</B> is a user centric protocol which means that you need to gaslessly (for free) opt-in to a channel to enable them to send notifs to your wallet!\r\n            </Span>\r\n\r\n            <Span color=\"inherit\" margin=\"20px 0px 0px 0px\">\r\n              You can opt-in in any number of channels as you want. Opt-in in at least one of the channels to proceed to the next step.\r\n            </Span>\r\n\r\n            <Span color=\"inherit\" margin=\"20px 0px 0px 0px\">\r\n              Opt-in will open Metamask popup, in which you have to sign the transaction (which is free), and voila, you've all set to receive notifs!\r\n            </Span>\r\n          </Item>\r\n          \r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                // dispatch(setTutorialContinous(false));\r\n                dispatch(incrementStepIndex());\r\n              }}\r\n            >\r\n              Next\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      // placement: \"top-center\",\r\n      // position: \"top-center\",\r\n      // target: `#addr-0x0000000000000000000000000000000000000000`, //production\r\n      // target: `#addr-0x2177cFc66474bBEce7Cbf114d780A5cfE78485De`, //development\r\n      placement: \"center\",\r\n      target: \"body\",\r\n      disableOverlayClose: false,\r\n      // spotlightClicks: true,\r\n      offsetTop: \"-100px\",\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n    },\r\n    // {},//6\r\n    {\r\n      //6\r\n      content: (\r\n        <Item\r\n          color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          size=\"normal\"\r\n          align=\"stretch\"\r\n        >\r\n          <Span color=\"inherit\">\r\n            Click on inbox tab from sidebar to proceed forward!\r\n          </Span>\r\n        </Item>\r\n      ),\r\n      placement: \"right-start\",\r\n      target: \".inbox\",\r\n      spotlightClicks: true,\r\n      disablefloating: true,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n      styles: {\r\n        buttonNext: {\r\n          display: 'none',\r\n        },\r\n        buttonSkip: {\r\n          display: 'none',\r\n        },\r\n        buttonClose: {\r\n          display: 'none',\r\n        }\r\n      },\r\n    },\r\n    {\r\n      //7\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            Inbox tab!\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              All notifications coming from an opted in channel lands in your inbox. It might be empty right now but if you have opted in to a channel, it will blossom soon!\r\n            </Span>\r\n\r\n            <Span color=\"inherit\" margin=\"20px 0px 0px 0px\">\r\n              But wait, that's not all, notifications are tied to your user wallet which means any crypto frontend or wallet can display it! More on this later!!\r\n            </Span>\r\n          </Item>\r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                dispatch(incrementStepIndex());\r\n              }}\r\n            >\r\n              Next\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      // placement: \"top\",\r\n      // position: \"top-center\",\r\n      // target: `.hdvjVo`,\r\n      placement: \"center\",\r\n      target: \"body\",\r\n      // disableOverlayClose: false,\r\n      hideFooter: true,\r\n    },\r\n    {\r\n      //8\r\n      content: (\r\n        <Item\r\n          color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          size=\"normal\"\r\n          align=\"stretch\"\r\n        >\r\n          <Span color=\"inherit\">\r\n            Click on spam tab from sidebar to see how spam works!\r\n          </Span>\r\n        </Item>\r\n      ),\r\n      placement: \"right-start\",\r\n      target: `.spam`,\r\n      spotlightClicks: true,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n      styles: {\r\n        buttonNext: {\r\n          display: 'none',\r\n        },\r\n        buttonSkip: {\r\n          display: 'none',\r\n        },\r\n        buttonClose: {\r\n          display: 'none',\r\n        }\r\n      },\r\n    },\r\n    { //9\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            Spam tab!\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              Spam notifications are notifs sent from a channel to your wallet address which you haven't opted in for yet, they might be spammy or a channel might have something important to communicate!\r\n            </Span>\r\n          </Item>\r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                dispatch(incrementStepIndex());\r\n              }}\r\n            >\r\n              Next\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      placement: \"center\",\r\n      target: `body`,\r\n      spotlightClicks: true,\r\n      defaultProps: false,\r\n      hideFooter: true\r\n    },\r\n    {\r\n      //10\r\n      content: (\r\n        <Item\r\n          color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          size=\"normal\"\r\n          align=\"stretch\"\r\n        >\r\n          <Span color=\"inherit\">\r\n            Receive Notifs tab contains all crypto frontends that have adopted EPNS protocol for communication! click on it to check the options out!\r\n          </Span>\r\n        </Item>\r\n      ),\r\n      placement: \"right-start\",\r\n      target: `.receive`,\r\n      // target: `.sc-AxheI`,\r\n      spotlightClicks: true,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n      styles: {\r\n        buttonNext: {\r\n          display: 'none',\r\n        },\r\n        buttonSkip: {\r\n          display: 'none',\r\n        },\r\n        buttonClose: {\r\n          display: 'none',\r\n        }\r\n      },\r\n    },\r\n    {\r\n      //11\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            Receive Notifs tab!\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              EPNS is an open communication network which means any crypto wallet can push notifs to your wallet address!\r\n            </Span>\r\n\r\n            <Span color=\"inherit\" margin=\"20px 0px 0px 0px\">\r\n              Let's check out few options that are available currently! Keep an eye out for here for your favorite wallet to debut here soon!\r\n            </Span>\r\n          </Item>\r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                dispatch(incrementStepIndex());\r\n                dispatch(setTutorialContinous(true));\r\n              }}\r\n            >\r\n              Next\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      placement: \"center\",\r\n      target: `body`,\r\n      // target: `.sc-AxheI`,\r\n      spotlightClicks: true,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n    },\r\n    {\r\n      //12\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            EPNS Browser Extension\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              Install the EPNS chrome extension to enable your browser to send notifications about your web3 activities!\r\n            </Span>\r\n          </Item>\r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                window.open(`${process.env.REACT_APP_BROWSER_EXTENSION_URL}`, '_blank');\r\n              }}\r\n            >\r\n              Download\r\n            </Button>\r\n\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                dispatch(incrementStepIndex());\r\n              }}\r\n            >\r\n              Next\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      placement: \"bottom\",\r\n      target: `#epns-browser`,\r\n      // target: `.sc-AxheI`,\r\n      spotlightClicks: true,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n    },\r\n    {\r\n      //13\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            EPNS iOS App\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              Install the EPNS iOS app to enable push notifications directly to your iOS (Apple) devices!\r\n            </Span>\r\n          </Item>\r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                window.open(`${process.env.REACT_APP_IOS_STAGING_DAPP_URL}`, '_blank');\r\n              }}\r\n            >\r\n              iOS App\r\n            </Button>\r\n\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                dispatch(incrementStepIndex());\r\n              }}\r\n            >\r\n              Next\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      placement: \"bottom\",\r\n      target: `#epns-app-ios`,\r\n      // target: `.sc-AxheI`,\r\n      spotlightClicks: true,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n    },\r\n    {\r\n      //14\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            EPNS Android App\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              Install the EPNS Android app to enable push notifications directly to your android devices!\r\n            </Span>\r\n          </Item>\r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                window.open(`${process.env.REACT_APP_ANDROID_STAGING_DAPP_URL}`, '_blank');\r\n              }}\r\n            >\r\n              Android App\r\n            </Button>\r\n\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                dispatch(incrementStepIndex());\r\n              }}\r\n            >\r\n              Next\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      placement: \"bottom\",\r\n      target: `#epns-app`,\r\n      // target: `.sc-AxheI`,\r\n      spotlightClicks: true,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n    },\r\n    {\r\n      //15\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            Tutorial Completed 🎉🎉\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              Hurray! You finished the tutorial!\r\n            </Span>\r\n\r\n            <Span color=\"inherit\" margin=\"20px 0px 0px 0px\">\r\n              Congratulations, Now that you are a pro! Go ahead and spread the web3 gospel and notifs saga out to the world!\r\n            </Span>\r\n          </Item>\r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n\r\n                dispatch(setTutorialContinous(false));\r\n\r\n                if (isDeveloperOpen) dispatch(incrementStepIndex());\r\n                dispatch(incrementStepIndex());\r\n              }}\r\n            >\r\n              Next (For Devs)\r\n            </Button>\r\n\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                dispatch(setTutorialContinous(false));\r\n                dispatch(setIndex(0));\r\n                dispatch(setWelcomeNotifsEmpty());\r\n                dispatch(setRun(false));\r\n              }}\r\n            >\r\n              Finish\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      locale: { next: <strong aria-label=\"next\">NEXT</strong> },\r\n      placement: \"center\",\r\n      target: \"body\",\r\n      defaultProps: false,\r\n      // spotlightClicks: true,\r\n      // disableOverlayClose: false,\r\n      hideFooter: true,\r\n    },\r\n    {\r\n      //16\r\n      content: (\r\n        <Item\r\n          color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          size=\"normal\"\r\n          align=\"stretch\"\r\n        >\r\n          <Span color=\"inherit\">\r\n            Hello Web3 Devs! All resources for developers are hidden inside this tab! let's expand it to continue!\r\n          </Span>\r\n        </Item>\r\n      ),\r\n      placement: \"right-start\",\r\n      target: \".developer\",\r\n      spotlightClicks: true,\r\n      disableAnimation: false,\r\n      disablefloating: false,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n      styles: {\r\n        buttonNext: {\r\n          display: 'none',\r\n        },\r\n        buttonSkip: {\r\n          display: 'none',\r\n        },\r\n        buttonClose: {\r\n          display: 'none',\r\n        }\r\n      }\r\n    },\r\n    {\r\n      //17\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            Developer Tab\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              Hello Web3 Devs! This tab contains everything you need to get started with creating your own channel!\r\n            </Span>\r\n          </Item>\r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                dispatch(incrementStepIndex());\r\n              }}\r\n            >\r\n              Next\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      locale: { next: <strong aria-label=\"next\">NEXT</strong> },\r\n      placement: \"center\",\r\n      target: \".developer\",\r\n      spotlightClicks: true,\r\n      disableAnimation: false,\r\n      disablefloating: false,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n    },\r\n    {\r\n      //18\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            Create Channel Tab\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              Creating the channel is the first step to sending notifications via your dApp, smart contract or backend! Just fill in the required details to get started.\r\n            </Span>\r\n\r\n            <Span color=\"inherit\" margin=\"20px 0px 0px 0px\">\r\n              Creating a channel on mainnet does have it's activation fee (one time fee) though it is recommended to start on testnet first to get the hang of it.\r\n            </Span>\r\n          </Item>\r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                dispatch(incrementStepIndex());\r\n              }}\r\n            >\r\n              Next\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      placement: \"right-start\",\r\n      target: \".create\",\r\n      spotlightClicks: true,\r\n      disablefloating: true,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n    },\r\n    {\r\n      //19\r\n      content: (\r\n        <Item>\r\n          <H3\r\n            size=\"x-large\"\r\n            margin=\"5px 0px 15px 0px\"\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n          >\r\n            Developer Documentation\r\n          </H3>\r\n          \r\n          <Item\r\n            color={darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor}\r\n            size=\"normal\"\r\n            align=\"stretch\"\r\n          >\r\n            <Span color=\"inherit\">\r\n              Of course, even before creating the channel, maybe the best place to start developing on EPNS protocol is to follow the developer docs.\r\n            </Span>\r\n\r\n            <Span color=\"inherit\" margin=\"20px 0px 0px 0px\">\r\n              Please find the link to developer docs below (or you can just click the Developer's guide tab). As always, feel free to reach out to us either on <A href=\"https://discord.gg/YVPB99F9W5\" target=\"_blank\">discord</A> or a channel of your choice!\r\n            </Span>\r\n          </Item>\r\n\r\n          <ItemH\r\n            self=\"stretch\"\r\n            items=\"stretch\"\r\n            margin=\"10px -10px -10px -10px\"\r\n          >\r\n            <Button\r\n              flex=\"1\"\r\n              margin=\"10px 10px\"\r\n              bg={darkMode ? themeDark.dynamicTutsButtonBg : themeLight.dynamicTutsButtonBg}\r\n              color={darkMode ? themeDark.dynamicTutsButtonColor : themeLight.dynamicTutsButtonColor}\r\n              onClick={() => {\r\n                window.open(\"https://docs.epns.io/\", \"_blank\");\r\n                // dispatch(incrementStepIndex());\r\n                dispatch(setRun(false))\r\n                dispatch(setIndex(0))\r\n                dispatch(setWelcomeNotifsEmpty());\r\n              }}\r\n            >\r\n              Developer Docs\r\n            </Button>\r\n          </ItemH>\r\n        </Item>\r\n      ),\r\n      placement: \"top-start\",\r\n      target: \".guide\",\r\n      spotlightClicks: true,\r\n      disablefloating: true,\r\n      defaultProps: false,\r\n      hideFooter: true,\r\n    },\r\n  ];\r\n\r\n  return steps;\r\n}\r\n  \r\nconst BeaconExample = styled.span`\r\n  height: 10px;\r\n  width: 10px;\r\n  background: ${props => props.theme.dynamicTutsPrimaryColor};\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 100%;\r\n  position: relative;\r\n  margin: 0px 10px;\r\n`;\r\n\r\nconst BeaconExamplePulse = styled.span`\r\n  animation: 1.2s ease-in-out 0s infinite normal none running joyride-beacon-outer;\r\n  background-color: transparent;\r\n  border: 2px solid ${props => props.theme.dynamicTutsPrimaryColor};\r\n  border-radius: 50%;\r\n  box-sizing: border-box;\r\n  display: block;\r\n  height: 26px;\r\n  width: 26px;\r\n  left: -8px;\r\n  top: -8px;\r\n  opacity: 0.9;\r\n  position: absolute;\r\n  transform-origin: center center;\r\n`;\r\n\r\nexport default UserJourneySteps;","import React, {useState} from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport { Web3Provider } from \"ethers/providers\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { AbstractConnector } from \"@web3-react/abstract-connector\";\r\nimport { useEagerConnect, useInactiveListener } from \"hooks\";\r\nimport { injected, walletconnect, portis, ledger } from \"connectors\";\r\nimport Joyride, { ACTIONS, CallBackProps, EVENTS, STATUS, Step } from \"react-joyride\";\r\n\r\nimport styled, {useTheme} from \"styled-components\";\r\nimport { Item, ItemH, Span, H2, B, A, C } from \"components/SharedStyling\";\r\n\r\nimport Header from \"sections/Header\";\r\nimport Navigation from \"sections/Navigation\";\r\n\r\nimport NavigationContextProvider from \"contexts/NavigationContext\";\r\nimport MasterInterfacePage from \"pages/MasterInterfacePage\";\r\n\r\nimport {ThemeProvider} from \"styled-components\";\r\n\r\nimport { themeLight, themeDark } from \"config/Themization\";\r\nimport GLOBALS from \"config/Globals\";\r\n\r\nimport {setRun, setIndex, setWelcomeNotifsEmpty} from \"./redux/slices/userJourneySlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport UserJourneySteps from \"segments/userJourneySteps.jsx\";\r\n\r\nimport * as dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\n// define the different type of connectors which we use\r\nconst web3Connectors = {\r\n  Injected: {\r\n    obj: injected,\r\n    logo: \"./svg/login/metamask.svg\",\r\n    title: \"MetaMask\",\r\n  },\r\n  WalletConnect: {\r\n    obj: walletconnect,\r\n    logo: \"./svg/login/walletconnect.svg\",\r\n    title: \"Wallet Connect\",\r\n  },\r\n  // Trezor: {obj: trezor, logo: './svg/login/trezor.svg', title: 'Trezor'},\r\n  Ledger: { obj: ledger, logo: \"./svg/login/ledger.svg\", title: \"Ledger\" },\r\n  Portis: { obj: portis, logo: \"./svg/login/portis.svg\", title: \"Portis\" },\r\n};\r\n\r\nexport default function App() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { connector, activate, active, error } = useWeb3React<Web3Provider>();\r\n  const [activatingConnector, setActivatingConnector] = React.useState<\r\n    AbstractConnector\r\n  >();\r\n  const [currentTime, setcurrentTime] = React.useState(0);\r\n\r\n  const themes = useTheme();\r\n\r\n  const {\r\n    run,\r\n    stepIndex,\r\n    tutorialContinous,\r\n  } = useSelector((state: any) => state.userJourney);\r\n  \r\n\r\n  React.useEffect(()=>{\r\n    const now = Date.now()/ 1000;\r\n    setcurrentTime(now)\r\n  },[])\r\n  React.useEffect(() => {\r\n    if (activatingConnector && activatingConnector === connector) {\r\n      setActivatingConnector(undefined);\r\n    }\r\n  }, [activatingConnector, connector]);\r\n\r\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\r\n  const triedEager = useEagerConnect();\r\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\r\n  useInactiveListener(!triedEager || !!activatingConnector);\r\n\r\n  // Initialize GA\r\n  ReactGA.initialize(\"UA-165415629-5\");\r\n  ReactGA.pageview(\"/login\");\r\n  // Initialize GA\r\n\r\n  // Initialize Theme\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(!darkMode);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    const data = localStorage.getItem('theme')\r\n    if(data){\r\n      setDarkMode(JSON.parse(data))\r\n    }\r\n  },[])\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem('theme', JSON.stringify(darkMode))\r\n  })\r\n\r\n  React.useEffect(()=>{\r\n    document.body.style.backgroundColor = darkMode ? \"#000\" : \"#fff\";\r\n  },[darkMode])\r\n\r\n\r\n  React.useEffect(()=>{\r\n    window?.Olvy?.init({\r\n      organisation: \"epns\",\r\n    target: \"#olvy-target\",\r\n    type: \"sidebar\",\r\n    view: {\r\n      showSearch: false,\r\n      compact: false,\r\n      showHeader: true, // only applies when widget type is embed. you cannot hide header for modal and sidebar widgets\r\n      showUnreadIndicator: true,\r\n      unreadIndicatorColor: \"#cc1919\",\r\n      unreadIndicatorPosition: \"top-right\"\r\n    }\r\n    });\r\n    return function cleanup() {\r\n      window?.Olvy?.teardown();\r\n    };\r\n  });\r\n\r\n  const steps = UserJourneySteps({darkMode});\r\n\r\n  const handleJoyrideCallback = (data: CallBackProps) => {\r\n    // console.log(data)\r\n    // console.log(STATUS);\r\n    const { action, lifecycle, status, index } = data\r\n    if (lifecycle === \"ready\") {\r\n      setTimeout(() => {\r\n        document.querySelector(\"div > section > div\").scrollTop = 0\r\n      }, 100)\r\n    }\r\n    \r\n    \r\n    if ( action === \"close\" || index === 20 ) { //action === \"close\" ||\r\n      dispatch(setRun(false))\r\n      dispatch(setIndex(0))\r\n      dispatch(setWelcomeNotifsEmpty());\r\n    }\r\n    // else if (action === 'next' && status === 'running') {\r\n    //   dispatch(incrementStepIndex());\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={darkMode ? themeDark : themeLight }>\r\n      <NavigationContextProvider>\r\n        <Joyride\r\n          run={run}\r\n          steps={steps}\r\n          continuous={tutorialContinous}\r\n          stepIndex={stepIndex}\r\n          hideFooter={true}\r\n          primaryProps={false}\r\n          hideBackButton={true}\r\n          hideCloseButton={false}\r\n          disableScrolling={true}\r\n          disableScrollParentFix={true}\r\n          disableFlip={true}\r\n          showNextButton={false}\r\n          showSkipButton={false}\r\n          disableOverlayClose={true}\r\n          callback={handleJoyrideCallback}\r\n          styles={{\r\n            options: {\r\n              arrowColor: darkMode ? themeDark.dynamicTutsBg : themeLight.dynamicTutsBg,\r\n              backgroundColor: darkMode ? themeDark.dynamicTutsBg : themeLight.dynamicTutsBg,\r\n              overlayColor:  darkMode ? themeDark.dynamicTutsBgOverlay : themeLight.dynamicTutsBgOverlay,\r\n              primaryColor: darkMode ? themeDark.dynamicTutsPrimaryColor : themeLight.dynamicTutsPrimaryColor,\r\n              textColor: darkMode ? themeDark.dynamicTutsFontColor : themeLight.dynamicTutsFontColor,\r\n              minWidth: 280,\r\n              zIndex: 1000,\r\n            },\r\n          }}\r\n        />\r\n        <HeaderContainer>\r\n          <Header\r\n            isDarkMode={darkMode}\r\n            darkModeToggle={toggleDarkMode}\r\n          />  \r\n        </HeaderContainer>\r\n\r\n        <ParentContainer\r\n          headerHeight={GLOBALS.CONSTANTS.HEADER_HEIGHT}\r\n        >\r\n\r\n          {(active) && !error && (\r\n            <>\r\n              <LeftBarContainer\r\n                leftBarWidth={GLOBALS.CONSTANTS.LEFT_BAR_WIDTH}\r\n              >\r\n                <Navigation />\r\n              </LeftBarContainer>\r\n\r\n              <ContentContainer\r\n                leftBarWidth={GLOBALS.CONSTANTS.LEFT_BAR_WIDTH}\r\n              >\r\n                {/* Shared among all pages, load universal things here */}\r\n                <MasterInterfacePage />\r\n              </ContentContainer>\r\n            </>\r\n          )}\r\n\r\n          {(!active) && (\r\n            <Item\r\n              justify=\"flex-start\"\r\n              padding=\"15px\"\r\n            >\r\n              <ProviderLogo\r\n                src=\"./epnshomelogo.png\"\r\n                srcSet={\"./epnshomelogo@2x.png 2x, ./epnshomelogo@2x.png 3x\"}\r\n              />\r\n              \r\n              <Item\r\n                bg={darkMode ? themeDark : themeLight}\r\n                border=\"1px solid #ddd\"\r\n                padding=\"15px\"\r\n                radius=\"12px\"\r\n                flex=\"initial\"\r\n              >\r\n                <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n                  <Span bg=\"#e20880\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">\r\n                    Connect\r\n                  </Span>\r\n                  <Span weight=\"200\" color={darkMode ? themeDark : themeLight}> Your Wallet</Span>\r\n                </H2>\r\n\r\n                <ItemH maxWidth=\"700px\" align=\"stretch\">\r\n                  {Object.keys(web3Connectors).map((name) => {\r\n                    const currentConnector = web3Connectors[name].obj;\r\n                    const connected = currentConnector === connector;\r\n                    const disabled =\r\n                      !triedEager ||\r\n                      !!activatingConnector ||\r\n                      connected ||\r\n                      !!error;\r\n                    const image = web3Connectors[name].logo;\r\n                    const title = web3Connectors[name].title;\r\n\r\n                    return (\r\n                      <ProviderButton\r\n                        disabled={disabled}\r\n                        key={name}\r\n                        onClick={() => {\r\n                          setActivatingConnector(currentConnector);\r\n                          activate(currentConnector);\r\n                        }}\r\n                        border=\"#35c5f3\"\r\n                      >\r\n                        <ProviderImage src={image} />\r\n\r\n                        <Span\r\n                          spacing=\"0.1em\"\r\n                          textTransform=\"uppercase\"\r\n                          size=\"12px\"\r\n                          weight=\"600\"\r\n                          padding=\"20px\"\r\n                          background={darkMode ? themeDark.backgroundBG : themeLight.backgroundBG}\r\n                          color={darkMode ? themeDark.fontColor : themeLight.fontColor}\r\n\r\n                        >\r\n                          {title}\r\n                        </Span>\r\n                      </ProviderButton>\r\n                    );\r\n                  })}\r\n                </ItemH>\r\n              </Item>\r\n\r\n              <Span margin=\"30px 0px 0px 0px\" size=\"14px\" color={darkMode ? themeDark.fontColor : themeLight.fontColor }>\r\n                By unlocking your wallet, <B>You agree</B> to our{\" \"}\r\n                <A href=\"https://epns.io/tos\" target=\"_blank\">\r\n                  Terms of Service\r\n                </A>{\" \"}\r\n                and our{\" \"}\r\n                <A href=\"https://epns.io/privacy\" target=\"_blank\">\r\n                  Privacy Policy\r\n                </A>\r\n                .\r\n              </Span>\r\n              \r\n              <Item\r\n                flex=\"initial\"\r\n                padding=\"30px 15px\"\r\n                radius=\"12px\"\r\n              >\r\n                <StyledItem>\r\n                  <span> Note: </span> The EPNS protocol has been under development for 1+ year,  and completed a <C href=\"https://epns.io/EPNS-Protocol-Audit2021.pdf\" target=\"_blank\"> ChainSafe audit </C> in October 2021. However, the mainnet is still a new product milestone.  Always DYOR, and anticipate bugs and UI improvements.  Learn how to report any bugs in our  <C href=\"https://discord.com/invite/YVPB99F9W5\" target=\"_blank\">Discord.</C>\r\n                </StyledItem>\r\n              </Item>\r\n\r\n            </Item>\r\n          )}\r\n        </ParentContainer>\r\n      </NavigationContextProvider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n// CSS STYLES\r\nconst StyledItem = styled(Item)`\r\n  font-size: 14px;\r\n  letter-spacing: 0.4px;\r\n  display: block;\r\n  background: ${props => props.theme.backgroundBG};\r\n  color: ${props => props.theme.color};\r\n  border:1px solid #ddd;\r\n  padding:30px 15px;\r\n  border-radius:12px;\r\n  line-height: 18px;\r\n  align-items: center;\r\n  width:44rem;\r\n\r\n  span{\r\n    color: #e20880;\r\n  }\r\n\r\n  @media(max-width:400px){\r\n    width: auto;\r\n  }\r\n`;\r\n\r\n\r\nconst HeaderContainer = styled.header`\r\n  left: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  z-index: 999;\r\n`;\r\n\r\nconst ParentContainer = styled.div`\r\n  flex-wrap: wrap;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  flex: 1;\r\n  background: ${props => props.theme.backgroundBG};\r\n  margin: ${props => props.headerHeight}px 0px 0px 0px;\r\n  min-height: calc(100vh - ${GLOBALS.CONSTANTS.HEADER_HEIGHT}px);\r\n`;\r\n\r\nconst LeftBarContainer = styled.div`\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  width: ${props => props.leftBarWidth}px;\r\n  position: fixed;\r\n\r\n  @media (max-width: 992px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst ContentContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  align-self: center;\r\n  width: 100%;\r\n\r\n\r\n\r\n  margin: 0px 0px 0px ${props => props.leftBarWidth}px;\r\n\r\n  @media (max-width: 992px) {\r\n    margin: 0px;\r\n  }\r\n`;\r\n\r\nconst ProviderLogo = styled.img`\r\n  width: 15vw;\r\n  align-self: center;\r\n  display: flex;\r\n  margin: 10px 20px 20px 20px;\r\n  min-width: 200px;\r\n`;\r\n\r\nconst ProviderButton = styled.button`\r\n  flex: 1 1 0;\r\n  min-width: 280px;\r\n  background: ${props => props.theme.mainBg};\r\n  outline: 0;ProviderButton\r\n\r\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\r\n  border-radius: 15px;\r\n  border: 1px solid rgb(225, 225, 225);\r\n\r\n  margin: 20px;\r\n  overflow: hidden;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 10px;\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    border: 1px solid ${(props) => props.border};\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    border: 1px solid ${(props) => props.border};\r\n  }\r\n`;\r\n\r\nconst ProviderImage = styled.img`\r\n  width: 32px;\r\n  max-height: 32px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst BeaconExample = styled.span`\r\n  height: 10px;\r\n  width: 10px;\r\n  background: ${props => props.theme.dynamicTutsPrimaryColor};\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 100%;\r\n  position: relative;\r\n  margin: 0px 10px;\r\n`;\r\n\r\nconst BeaconExamplePulse = styled.span`\r\n  animation: 1.2s ease-in-out 0s infinite normal none running joyride-beacon-outer;\r\n  background-color: transparent;\r\n  border: 2px solid ${props => props.theme.dynamicTutsPrimaryColor};\r\n  border-radius: 50%;\r\n  box-sizing: border-box;\r\n  display: block;\r\n  height: 26px;\r\n  width: 26px;\r\n  left: -8px;\r\n  top: -8px;\r\n  opacity: 0.9;\r\n  position: absolute;\r\n  transform-origin: center center;\r\n`;","import {configureStore, combineReducers, getDefaultMiddleware} from '@reduxjs/toolkit';\r\nimport contractReducer from './slices/contractSlice';\r\nimport channelReducer from './slices/channelSlice';\r\nimport adminReducer from './slices/adminSlice';\r\nimport notificationReducer from './slices/notificationSlice';\r\nimport spamReducer from './slices/spamSlice';\r\nimport userJourneyReducer from './slices/userJourneySlice';\r\n\r\nconst rootReducer = combineReducers({\r\n\tcontracts: contractReducer,\r\n    channels: channelReducer,\r\n    admin: adminReducer,\r\n\tnotifications: notificationReducer,\r\n\tspam: spamReducer,\r\n\tuserJourney: userJourneyReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n\treducer: rootReducer,\r\n\tmiddleware: getDefaultMiddleware({\r\n\t\tserializableCheck: false,\r\n\t\timmutableCheck: false\r\n\t})\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\r\n\r\nimport { ethers } from \"ethers\";\r\nimport { Provider } from \"react-redux\";\r\nimport { Web3ReactProvider } from \"@web3-react/core\";\r\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\r\n\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport * as dotenv from \"dotenv\";\r\n\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\nimport \"./index.css\";\r\n\r\n// enable environmental variables across the entire application\r\ndotenv.config();\r\n// You should replace this uri with your own and put it into a .env file\r\nconst client = new ApolloClient({\r\n  uri: \"https://api.thegraph.com/subgraphs/name/epnsproject/epnsstaging\",\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\n/**\r\n * A utility function used to get the provider\r\n */\r\nfunction getLibrary(provider) {\r\n  const gottenProvider = new ethers.providers.Web3Provider(provider, \"any\");\r\n  // adding this is important to deal with changing networks\r\n  gottenProvider.on(\"network\", (_, oldNetwork) => {\r\n    if (oldNetwork) {\r\n      // when network has been changed, refresh the page\r\n      window.location.reload();\r\n    }\r\n  });\r\n  return gottenProvider;\r\n}\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <Provider store={store}>\r\n      <ApolloProvider client={client}>\r\n        <Web3ReactProvider getLibrary={getLibrary}>\r\n          <App />\r\n        </Web3ReactProvider>\r\n      </ApolloProvider>\r\n    </Provider>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import EthCrypto from 'eth-crypto';\r\nimport {encrypt, decrypt} from 'eccrypto';\r\nimport { publicKeyConvert, publicKeyVerify } from 'secp256k1-v4';\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst CryptoHelper = {\r\n  // To Encrypt with AES\r\n  encryptWithAES: function(message, key) {\r\n    return CryptoJS.AES.encrypt(message, key).toString();\r\n  },\r\n  // To Decrypt with AES\r\n  decryptWithAES: function(message, key) {\r\n    let bytes  = CryptoJS.AES.decrypt(message, key);\r\n    return bytes.toString(CryptoJS.enc.Utf8);\r\n  },\r\n  // To Form Encryted Secret, no more than 15 characters supported\r\n  encryptWithECIES: async function(message, publicKey) {\r\n    const compressedKey = EthCrypto.publicKey.compress(publicKey);\r\n\r\n    const encryptedSecret = await this.encryptWithPublicKey(message, compressedKey);\r\n\r\n    // Not using it since sqlite2 has some error with this\r\n    // const compressedEncryptedSecret = EthCrypto.hex.compress(encryptedSecret);\r\n\r\n    return encryptedSecret;\r\n  },\r\n  // To Form Decrypted Secret, no more than 15 characters supported\r\n  decryptWithECIES: async function(message, privateKey) {\r\n    // Message is always compressed, not using because sqlite2 has some error with this\r\n    //const uncompressedMessage = EthCrypto.hex.decompress(message).substr(2); // to remove 0x\r\n\r\n    return await this.decryptWithPrivateKey(message, privateKey);\r\n  },\r\n  // Encryption with public key\r\n  encryptWithPublicKey: async function(message, publicKey) {\r\n    // Convert compressed public key, starts with 03 or 04\r\n    const pubKeyUint8Array = Uint8Array.from(\r\n      new Buffer(publicKey, 'hex')\r\n    );\r\n    //console.log(\"[ENCRYPTION] Public Key Uint8Array: \" + pubKeyUint8Array);\r\n\r\n    const convertedKeyAsUint8Array = publicKeyConvert(pubKeyUint8Array, false);\r\n    //console.log(\"[ENCRYPTION] Public Key Converted: \" + convertedKeyAsUint8Array);\r\n\r\n    const convertedPublicKeyHex = new Buffer(convertedKeyAsUint8Array);\r\n    //console.log(\"[ENCRYPTION] Converted Public Key Buffer: \" + convertedPublicKeyHex);\r\n\r\n    const pubKey = new Buffer(convertedPublicKeyHex, 'hex');\r\n    //console.log(\"[ENCRYPTION] pubkey getting sentout for encrypt: \" + pubKey);\r\n\r\n    return encrypt(\r\n        pubKey,\r\n        Buffer(message)\r\n    ).then(encryptedBuffers => {\r\n      const cipher = {\r\n          iv: encryptedBuffers.iv.toString('hex'),\r\n          ephemPublicKey: encryptedBuffers.ephemPublicKey.toString('hex'),\r\n          ciphertext: encryptedBuffers.ciphertext.toString('hex'),\r\n          mac: encryptedBuffers.mac.toString('hex')\r\n      };\r\n      // use compressed key because it's smaller\r\n      // const compressedKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(cipher.ephemPublicKey), true)).toString('hex')\r\n      const input = Uint8Array.from(\r\n        new Buffer(cipher.ephemPublicKey, 'hex')\r\n      );\r\n      const keyConvert = publicKeyConvert(input, true)\r\n      // console.log(\"[ENCRYPTION] Coverted key: \" + keyConvert);\r\n\r\n      const keyConvertBuffer = new Buffer(keyConvert);\r\n      // console.log(\"[ENCRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\r\n      // console.log(keyConvertBuffer);\r\n\r\n      //console.log(keyConvert);\r\n      const compressedKey = keyConvertBuffer.toString('hex')\r\n      // console.log(\"[ENCRYPTION] Compressed key in buffer : \");\r\n      // console.log(compressedKey);\r\n\r\n      const ret = Buffer.concat([\r\n        new Buffer(cipher.iv, 'hex'), // 16bit\r\n        new Buffer(compressedKey, 'hex'), // 33bit\r\n        new Buffer(cipher.mac, 'hex'), // 32bit\r\n        new Buffer(cipher.ciphertext, 'hex') // var bit\r\n      ]).toString('hex')\r\n\r\n      return ret\r\n    });\r\n  },\r\n  // Decryption with public key\r\n  decryptWithPrivateKey: async function(message, privateKey) {\r\n    let encrypted = message;\r\n    const buf = new Buffer(encrypted, 'hex');\r\n    // console.log(\"[DECRYPTION] Buffer Passed: \" + buf);\r\n\r\n    encrypted = {\r\n      iv: buf.toString('hex', 0, 16),\r\n      ephemPublicKey: buf.toString('hex', 16, 49),\r\n      mac: buf.toString('hex', 49, 81),\r\n      ciphertext: buf.toString('hex', 81, buf.length)\r\n    };\r\n    // decompress publicKey\r\n    // encrypted.ephemPublicKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(encrypted.ephemPublicKey), true)).toString('hex')\r\n    const input = Uint8Array.from(new Buffer(encrypted.ephemPublicKey, 'hex'));\r\n    const keyConvert = publicKeyConvert(input, false)\r\n    // console.log(\"[DECRYPTION] Coverted key: \" + keyConvert);\r\n\r\n    const keyConvertBuffer = new Buffer(keyConvert);\r\n    // console.log(\"[DECRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\r\n    // console.log(keyConvertBuffer);\r\n\r\n    //console.log(keyConvert);\r\n    const uncompressedKey = keyConvertBuffer.toString('hex')\r\n    // console.log(\"[DECRYPTION] Uncompressed key in buffer : \");\r\n    // console.log(uncompressedKey);\r\n\r\n    encrypted.ephemPublicKey = uncompressedKey;\r\n    const twoStripped = privateKey.substring(2)\r\n\r\n    const encryptedBuffer = {\r\n      iv: new Buffer(encrypted.iv, 'hex'),\r\n      ephemPublicKey: new Buffer(encrypted.ephemPublicKey, 'hex'),\r\n      ciphertext: new Buffer(encrypted.ciphertext, 'hex'),\r\n      mac: new Buffer(encrypted.mac, 'hex')\r\n    };\r\n\r\n    return decrypt(\r\n      new Buffer(twoStripped, 'hex'),\r\n      encryptedBuffer\r\n    ).then(decryptedBuffer => decryptedBuffer.toString());\r\n  },\r\n  // Testing of Encryption and Decryption from Public to Private key\r\n  encryptionDecryptionPublicToPrivateTest: async function(privateKey) {\r\n    const startTime = new Date();\r\n    console.log(\"[ENCRYPTION / DECRYPTION TEST STARTED] - \" + startTime);\r\n\r\n    const publicKey = EthCrypto.publicKeyByPrivateKey(privateKey);\r\n    const compressedKey = EthCrypto.publicKey.compress(publicKey); // is String\r\n    //console.log(compressedKey);\r\n\r\n    // const bytesCompKey = Uint8Array.from(compressedKey);\r\n    //console.log(bytesCompKey);\r\n\r\n    const msgToEncrypt = \"PartialStringAS\";\r\n    const msg = await this.encryptWithPublicKey(msgToEncrypt, compressedKey);\r\n    console.log(\"Encryped Message With compressed public key:\" + msg);\r\n\r\n    const encryptionTime = new Date().getTime() - startTime.getTime();\r\n    console.log(\"[ENCRYPTION / DECRYPTION ENCRYPTION DONE] - \" + encryptionTime / 1000 + \" secs\");\r\n\r\n    // Decrypt this message\r\n    const decryptMsg = await this.decryptWithPrivateKey(msg, privateKey);\r\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTED MESSAGE] - '\" + decryptMsg + \"'\");\r\n\r\n    const decryptionTime = new Date().getTime() - startTime.getTime() - encryptionTime;\r\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTION DONE] - \" + decryptionTime / 1000 + \" secs\");\r\n  },\r\n  // To output messge payload if required\r\n  outputMsgPayload: async function(secret, subject, message, calltoaction, imageurl, pkey) {\r\n    // Output AES\r\n    console.log(\"[AES ENCRYTED FORMAT (\" + new Date() + \")\");\r\n    console.log(\"---------------------\");\r\n    console.log(\"secret --> \");\r\n    const secretEncrypted = await this.encryptWithECIES(secret, pkey);\r\n    const asubE = this.encryptWithAES(subject, secret);\r\n    const amsgE = this.encryptWithAES(message, secret);\r\n    const actaE = this.encryptWithAES(calltoaction, secret);\r\n    const aimgE = this.encryptWithAES(imageurl, secret);\r\n\r\n    console.log(secretEncrypted);\r\n    console.log(\"asub --> \");\r\n    console.log(asubE);\r\n    console.log(\"amsg --> \");\r\n    console.log(amsgE);\r\n    console.log(\"acta --> \");\r\n    console.log(actaE);\r\n    console.log(\"aimg --> \");\r\n    console.log(aimgE);\r\n    console.log(\"decrypted secret --> \");\r\n    console.log(await this.decryptWithECIES(secretEncrypted, pkey));\r\n    console.log(\"decrypted asub --> \");\r\n    console.log(this.decryptWithAES(asubE, secret));\r\n    console.log(\"decrypted amsg --> \");\r\n    console.log(this.decryptWithAES(amsgE, secret));\r\n    console.log(\"decrypted acta --> \");\r\n    console.log(this.decryptWithAES(actaE, secret));\r\n    console.log(\"decrypted aimg --> \");\r\n    console.log(this.decryptWithAES(aimgE, secret));\r\n  },\r\n  makeid: function (length) {\r\n     var result           = '[' + new Date().toISOString() + '] ';\r\n     var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n     var charactersLength = characters.length;\r\n     for ( var i = 0; i < length; i++ ) {\r\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n     }\r\n     return result;\r\n  }\r\n};\r\n\r\nexport default CryptoHelper;\r\n","import React, { useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport styled, { css, useTheme } from \"styled-components\";\r\nimport {\r\n  Section,\r\n  Content,\r\n  Item,\r\n  ItemH,\r\n  ItemBreak,\r\n  H1,\r\n  H2,\r\n  H3,\r\n  Image,\r\n  P,\r\n  Span,\r\n  Anchor,\r\n  Button,\r\n  Showoff,\r\n  FormSubmision,\r\n  Input,\r\n  TextField,\r\n} from \"components/SharedStyling\";\r\n\r\nimport { FiLink } from \"react-icons/fi\";\r\n\r\nimport \"react-dropzone-uploader/dist/styles.css\";\r\nimport Dropzone from \"react-dropzone-uploader\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\r\n\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\nimport { themeLight, themeDark } from \"config/Themization\";\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nconst ethers = require(\"ethers\");\r\n\r\nconst ipfs = require(\"ipfs-api\")();\r\n\r\nconst minStakeFees = 50;\r\nconst ALIAS_CHAINS = [{ value: \"POLYGON_TEST_MUMBAI:80001\", label: \"Polygon\" }];\r\n\r\n// Create Header\r\nfunction CreateChannel() {\r\n  const { active, error, account, library, chainId } = useWeb3React();\r\n\r\n  const themes = useTheme();\r\n\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  const [processing, setProcessing] = React.useState(0);\r\n  const [processingInfo, setProcessingInfo] = React.useState(\"\");\r\n\r\n  const [uploadDone, setUploadDone] = React.useState(false);\r\n  const [stakeFeesChoosen, setStakeFeesChoosen] = React.useState(false);\r\n  const [channelInfoDone, setChannelInfoDone] = React.useState(false);\r\n\r\n  const [chainDetails, setChainDetails] = React.useState(\"\");\r\n  const [channelName, setChannelName] = React.useState(\"\");\r\n  const [channelAlias, setChannelAlias] = React.useState(\"\");\r\n  const [channelInfo, setChannelInfo] = React.useState(\"\");\r\n  const [channelURL, setChannelURL] = React.useState(\"\");\r\n  const [channelFile, setChannelFile] = React.useState(undefined);\r\n  const [channelStakeFees, setChannelStakeFees] = React.useState(minStakeFees);\r\n  const [daiAmountVal, setDaiAmountVal] = useState(\"\");\r\n  const [stepFlow, setStepFlow] = React.useState(1);\r\n\r\n  //checking DAI for user\r\n  React.useEffect(() => {\r\n    const checkDaiFunc = async () => {\r\n      let checkDaiAmount = new ethers.Contract(\r\n        addresses.dai,\r\n        abis.dai,\r\n        library\r\n      );\r\n\r\n      let value = await checkDaiAmount.allowance(account, addresses.epnscore);\r\n      value = value?.toString();\r\n      const convertedVal = ethers.utils.formatEther(value);\r\n      setDaiAmountVal(convertedVal);\r\n      if (convertedVal >= 50.0) {\r\n        setChannelStakeFees(convertedVal);\r\n      }\r\n    };\r\n    checkDaiFunc();\r\n  }, []);\r\n\r\n  // called every time a file's `status` changes\r\n  const handleChangeStatus = ({ meta, file }, status) => {\r\n    console.log(status, meta, file);\r\n  };\r\n\r\n  const onDropHandler = (files) => {\r\n    //   var file = files[0]\r\n    //   const reader = new FileReader();\r\n    //   reader.onload = (event) => {\r\n    //     console.log(event.target.result);\r\n    //   };\r\n    //   reader.readAsDataURL(file);\r\n    // setChannelFile(file);\r\n    // console.log(\"Drop Handler\");\r\n    // console.log(file);\r\n  };\r\n\r\n  // receives array of files that are done uploading when submit button is clicked\r\n  const handleLogoSubmit = (files, allFiles) => {\r\n    // console.log(files.map(f => f.meta))\r\n    allFiles.forEach((f) => {\r\n      var file = f.file;\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      // console.log(f.file);\r\n\r\n      reader.onloadend = function(e) {\r\n        // console.log(reader.result);\r\n        const response = handleLogoSizeLimitation(reader.result);\r\n        if (response.success) {\r\n          setStepFlow(2);\r\n          setProcessing(0);\r\n          setUploadDone(true);\r\n          setChannelFile(reader.result);\r\n        } else {\r\n          setProcessing(3);\r\n          setProcessingInfo(response.info);\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleLogoSizeLimitation = (base64) => {\r\n    // Setup Error on higher size of 128px\r\n    var sizeOf = require(\"image-size\");\r\n    var base64Data = base64.split(\";base64,\").pop();\r\n    var img = Buffer.from(base64Data, \"base64\");\r\n    var dimensions = sizeOf(img);\r\n\r\n    // Only proceed if image is equal to or less than 128\r\n    if (dimensions.width > 128 || dimensions.height > 128) {\r\n      console.log(\"Image size check failed... returning\");\r\n      return {\r\n        success: 0,\r\n        info: \"Image size check failed, Image should be 128X128PX\",\r\n      };\r\n    }\r\n\r\n    // only proceed if png or jpg\r\n    // This is brilliant: https://stackoverflow.com/questions/27886677/javascript-get-extension-from-base64-image\r\n    // char(0) => '/' : jpg\r\n    // char(0) => 'i' : png\r\n    let fileext;\r\n    console.log(base64Data.charAt(0));\r\n    if (base64Data.charAt(0) == \"/\") {\r\n      return {\r\n        success: 1,\r\n        info: \"Image checks passed\",\r\n      };\r\n    } else if (base64Data.charAt(0) == \"i\") {\r\n      return {\r\n        success: 1,\r\n        info: \"Image checks passed\",\r\n      };\r\n    } else {\r\n      return {\r\n        success: 0,\r\n        info: \"Image extension should be jpg or png\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const handleCreateChannel = async (e) => {\r\n    // Check everything in order\r\n    // skip this for now\r\n    e.preventDefault();\r\n\r\n    if (\r\n      isEmpty(channelName) ||\r\n      isEmpty(channelInfo) ||\r\n      isEmpty(channelURL) ||\r\n      isEmpty(channelFile) ||\r\n      channelAlias\r\n        ? isEmpty(chainDetails)\r\n        : chainDetails\r\n        ? isEmpty(channelAlias)\r\n        : false\r\n    ) {\r\n      setProcessing(3);\r\n      setProcessingInfo(\"Channel Fields are Empty! Please retry!\");\r\n\r\n      return false;\r\n    }\r\n\r\n    // Check complete, start logic\r\n    setChannelInfoDone(true);\r\n    setProcessing(1);\r\n\r\n    console.log({\r\n      chainDetails,\r\n      channelAlias,\r\n    });\r\n    var chainDetailsSplit = chainDetails.split(\":\");\r\n    var blockchain = chainDetailsSplit[0];\r\n    var chain_id = chainDetailsSplit[1];\r\n    var address = channelAlias;\r\n\r\n    const input = JSON.stringify({\r\n      name: channelName,\r\n      info: channelInfo,\r\n      url: channelURL,\r\n      icon: channelFile,\r\n      blockchain: blockchain,\r\n      chain_id: chain_id,\r\n      address: address,\r\n    });\r\n\r\n    const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\r\n\r\n    setProcessingInfo(\"Uploading Payload...\");\r\n    const storagePointer = await ipfs.add(input);\r\n    console.log(\"IPFS storagePointer:\", storagePointer);\r\n    setProcessingInfo(\"Payload Uploaded, Approval to transfer DAI...\");\r\n    //console.log(await ipfs.cat(storagePointer));\r\n\r\n    // Send Transaction\r\n    // First Approve DAI\r\n    var signer = library.getSigner(account);\r\n\r\n    let daiContract = new ethers.Contract(addresses.dai, abis.erc20, signer);\r\n\r\n    // Pick between 50 DAI AND 25K DAI\r\n    const fees = ethers.utils.parseUnits(channelStakeFees.toString(), 18);\r\n    if (daiAmountVal < 50.0) {\r\n      var sendTransactionPromise = daiContract.approve(\r\n        addresses.epnscore,\r\n        fees\r\n      );\r\n      const tx = await sendTransactionPromise;\r\n\r\n      console.log(tx);\r\n      console.log(\"waiting for tx to finish\");\r\n      setProcessingInfo(\"Waiting for Approval TX to finish...\");\r\n\r\n      await library.waitForTransaction(tx.hash);\r\n    }\r\n\r\n    let contract = new ethers.Contract(\r\n      addresses.epnscore,\r\n      abis.epnscore,\r\n      signer\r\n    );\r\n\r\n    const channelType = 2; // Open Channel\r\n    const identity = \"1+\" + storagePointer; // IPFS Storage Type and HASH\r\n    const identityBytes = ethers.utils.toUtf8Bytes(identity);\r\n\r\n    var anotherSendTxPromise = contract.createChannelWithFees(\r\n      channelType,\r\n      identityBytes,\r\n      fees,\r\n      {\r\n        gasLimit: 1000000,\r\n      }\r\n    );\r\n\r\n    setProcessingInfo(\"Creating Channel TX in progress\");\r\n    anotherSendTxPromise\r\n      .then(async function(tx) {\r\n        console.log(tx);\r\n        console.log(\"Check: \" + account);\r\n        await library.waitForTransaction(tx.hash);\r\n        setProcessing(3);\r\n        setProcessingInfo(\"Channel Created! Reloading...\");\r\n\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 2000);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error --> %o\", err);\r\n        console.log({ err });\r\n        setProcessing(3);\r\n        setProcessingInfo(\r\n          \"There was an error creating your channel, please refer to our how-to guides for more information.\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const isEmpty = (field) => {\r\n    if (field.trim().length == 0) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  //mind Dai\r\n  const mintDai = async () => {\r\n    try {\r\n      var signer = library.getSigner(account);\r\n      let daiContract = new ethers.Contract(addresses.dai, abis.dai, signer);\r\n      console.log({\r\n        daiContract,\r\n      });\r\n      console.log(1);\r\n      let daiAmount = 1000;\r\n      const amount = ethers.utils.parseUnits(daiAmount.toString(), 18);\r\n      console.log(2);\r\n      var mintTransactionPromise = daiContract.mint(amount);\r\n      console.log(3);\r\n      const tx = await mintTransactionPromise;\r\n      console.log(tx);\r\n      await library.waitForTransaction(tx.hash);\r\n      console.log(4);\r\n      setProcessingInfo(\"1000 Dai minted successfully!\");\r\n      console.log(\"Transaction Completed\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={themes}>\r\n      <Section>\r\n        <Content padding=\"10px 20px 20px\">\r\n          <Item align=\"flex-start\">\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">\r\n                Create\r\n              </Span>\r\n              <Span weight=\"200\" color={themes.color}>\r\n                {\" \"}\r\n                Your Channel!\r\n              </Span>\r\n            </H2>\r\n            <H3 color={themes.createColor}>\r\n              <b color={themes.createColor}>\r\n                Ethereum Push Notification Service\r\n              </b>{\" \"}\r\n              (EPNS) makes it extremely easy to open and maintain a genuine\r\n              channel of communication with your users.\r\n            </H3>\r\n          </Item>\r\n        </Content>\r\n      </Section>\r\n\r\n      <Section>\r\n        <Content padding=\"0px 20px 20px\">\r\n          <ItemH justify=\"space-between\">\r\n            <Step\r\n              bg=\"#fff\"\r\n              activeBG=\"#e20880\"\r\n              type={stepFlow >= 1 ? \"active\" : \"inactive\"}\r\n            />\r\n            <Step\r\n              bg=\"#fff\"\r\n              activeBG=\"#e20880\"\r\n              type={stepFlow >= 2 ? \"active\" : \"inactive\"}\r\n            />\r\n            <Step\r\n              bg=\"#fff\"\r\n              activeBG=\"#e20880\"\r\n              type={stepFlow >= 3 ? \"active\" : \"inactive\"}\r\n            />\r\n            <Line />\r\n          </ItemH>\r\n        </Content>\r\n      </Section>\r\n\r\n      {/* Image Upload Section */}\r\n      {!uploadDone && (\r\n        <Section>\r\n          <Content padding=\"50px 20px 20px\">\r\n            <Item align=\"flex-start\">\r\n              <H3 color=\"#e20880\">\r\n                Upload Channel Logo to start the process. Make sure image is\r\n                128x128px.\r\n              </H3>\r\n            </Item>\r\n\r\n            <Item margin=\"-10px 0px 20px 0px\">\r\n              <Dropzone\r\n                onChangeStatus={handleChangeStatus}\r\n                onSubmit={handleLogoSubmit}\r\n                onDrop={onDropHandler}\r\n                maxFiles={1}\r\n                multiple={false}\r\n                accept=\"image/jpeg,image/png\"\r\n              />\r\n            </Item>\r\n            {chainId != 1 ? (\r\n              <Item align=\"flex-end\">\r\n                <Minter\r\n                  onClick={() => {\r\n                    mintDai();\r\n                  }}\r\n                >\r\n                  <Pool>\r\n                    <br></br>\r\n                    <PoolShare>Get Free DAI for Channel</PoolShare>\r\n                  </Pool>\r\n                </Minter>\r\n              </Item>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Content>\r\n        </Section>\r\n      )}\r\n\r\n      {/* Stake Fees Section */}\r\n      {uploadDone && !stakeFeesChoosen && (\r\n        <Section>\r\n          <Content padding=\"50px 0px 0px 0px\">\r\n            {/* <Item align=\"flex-start\" margin=\"0px 20px\">\r\n              <H3 color=\"#e20880\">Set your staking fees in DAI</H3>\r\n            </Item> */}\r\n\r\n            <Item\r\n              margin=\"-10px 20px 20px 20px\"\r\n              padding=\"20px 20px 10px 20px\"\r\n              bg=\"#f1f1f1\"\r\n            >\r\n              {/* <Slider\r\n                defaultValue={minStakeFees}\r\n                onChangeCommitted={(event, value) => setChannelStakeFees(value)}\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                step={minStakeFees}\r\n                marks\r\n                min={minStakeFees}\r\n                max={25000}\r\n              /> */}\r\n              <Span\r\n                weight=\"400\"\r\n                size=\"1.0em\"\r\n                textTransform=\"uppercase\"\r\n                spacing=\"0.2em\"\r\n              >\r\n                Amount Staked: {channelStakeFees} DAI\r\n              </Span>\r\n            </Item>\r\n\r\n            <Item self=\"stretch\" align=\"stretch\" margin=\"20px 0px 0px 0px\">\r\n              <Button\r\n                bg=\"#e20880\"\r\n                color=\"#fff\"\r\n                flex=\"1\"\r\n                radius=\"0px\"\r\n                padding=\"20px 10px\"\r\n                onClick={() => {\r\n                  setStakeFeesChoosen(true);\r\n                  setStepFlow(3);\r\n                }}\r\n              >\r\n                <Span\r\n                  color=\"#fff\"\r\n                  weight=\"400\"\r\n                  textTransform=\"uppercase\"\r\n                  spacing=\"0.1em\"\r\n                >\r\n                  Continue\r\n                </Span>\r\n              </Button>\r\n            </Item>\r\n          </Content>\r\n        </Section>\r\n      )}\r\n\r\n      {/* Channel Entry */}\r\n      {uploadDone && stakeFeesChoosen && !channelInfoDone && (\r\n        <Section>\r\n          <Content padding=\"50px 0px 0px 0px\">\r\n            <Item align=\"flex-start\" margin=\"0px 20px\">\r\n              <H3 color=\"#e20880\">Setup your Channel Info</H3>\r\n            </Item>\r\n\r\n            <FormSubmision\r\n              flex=\"1\"\r\n              direction=\"column\"\r\n              margin=\"0px\"\r\n              justify=\"center\"\r\n              size=\"1.1rem\"\r\n              onSubmit={handleCreateChannel}\r\n            >\r\n              <Item\r\n                margin=\"-10px 20px 15px 20px\"\r\n                flex=\"1\"\r\n                self=\"stretch\"\r\n                align=\"stretch\"\r\n              >\r\n                <Input\r\n                  required\r\n                  placeholder=\"Your Channel Name\"\r\n                  maxlength=\"40\"\r\n                  padding=\"12px\"\r\n                  border=\"1px solid #000\"\r\n                  weight=\"400\"\r\n                  size=\"1.2em\"\r\n                  bg=\"#fff\"\r\n                  value={channelName}\r\n                  onChange={(e) => {\r\n                    setChannelName(e.target.value);\r\n                  }}\r\n                />\r\n                {channelName.trim().length == 0 && (\r\n                  <Span\r\n                    padding=\"4px 10px\"\r\n                    right=\"0px\"\r\n                    top=\"0px\"\r\n                    pos=\"absolute\"\r\n                    color=\"#fff\"\r\n                    bg=\"#000\"\r\n                    size=\"0.7rem\"\r\n                    z=\"1\"\r\n                  >\r\n                    Name of Channel\r\n                  </Span>\r\n                )}\r\n              </Item>\r\n\r\n              <Item\r\n                margin=\"15px 20px 15px 20px\"\r\n                flex=\"1\"\r\n                self=\"stretch\"\r\n                align=\"stretch\"\r\n                style={{ position: \"relative\" }}\r\n              >\r\n                <Select\r\n                  className=\"basic-single\"\r\n                  classNamePrefix=\"select\"\r\n                  placeholder=\"Alias network\"\r\n                  name=\"color\"\r\n                  options={ALIAS_CHAINS}\r\n                  theme={(theme) => ({\r\n                    ...theme,\r\n                    borderRadius: 0,\r\n                    colors: {\r\n                      ...theme.colors,\r\n                      primary25: \"#e20880\",\r\n                      primary: \"#e20880\",\r\n                    },\r\n                  })}\r\n                  onChange={(selectedOption) => {\r\n                    setChainDetails(selectedOption.value);\r\n                  }}\r\n                />\r\n                <Input\r\n                  placeholder=\"Your Channel's Alias address\"\r\n                  maxlength=\"40\"\r\n                  padding=\"12px\"\r\n                  style={{ paddingLeft: \"22%\" }}\r\n                  border=\"1px solid #000\"\r\n                  weight=\"400\"\r\n                  size=\"1rem\"\r\n                  bg=\"#fff\"\r\n                  value={channelAlias}\r\n                  onChange={(e) => {\r\n                    setChannelAlias(e.target.value);\r\n                  }}\r\n                />\r\n              </Item>\r\n              <Item\r\n                margin=\"15px 20px 15px 20px\"\r\n                flex=\"1\"\r\n                self=\"stretch\"\r\n                align=\"stretch\"\r\n              >\r\n                <TextField\r\n                  required\r\n                  placeholder=\"Your Channel's Short Description (250 Characters)\"\r\n                  rows=\"4\"\r\n                  maxlength=\"250\"\r\n                  radius=\"4px\"\r\n                  padding=\"12px\"\r\n                  weight=\"400\"\r\n                  border=\"1px solid #000\"\r\n                  bg=\"#fff\"\r\n                  value={channelInfo}\r\n                  onChange={(e) => {\r\n                    setChannelInfo(e.target.value.slice(0,250));\r\n                  }}\r\n                  autocomplete=\"off\"\r\n                />\r\n                \r\n                <SpanR>\r\n                  {250-channelInfo.length} characters remains\r\n                </SpanR>\r\n              </Item>\r\n\r\n              <ItemH\r\n                margin=\"15px 20px 15px 20px\"\r\n                flex=\"1\"\r\n                self=\"stretch\"\r\n                align=\"center\"\r\n              >\r\n                <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\r\n                  <FiLink size={24} color={themes.color} />\r\n                </Item>\r\n                <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\r\n                  <Input\r\n                    required\r\n                    placeholder=\"Call to Action Link\"\r\n                    padding=\"12px\"\r\n                    border=\"1px solid #000\"\r\n                    radius=\"4px\"\r\n                    weight=\"400\"\r\n                    bg=\"#f1f1f1\"\r\n                    value={channelURL}\r\n                    onChange={(e) => {\r\n                      setChannelURL(e.target.value);\r\n                    }}\r\n                  />\r\n                  {channelURL.trim().length == 0 && (\r\n                    <Span\r\n                      padding=\"4px 10px\"\r\n                      right=\"0px\"\r\n                      top=\"0px\"\r\n                      pos=\"absolute\"\r\n                      color=\"#fff\"\r\n                      bg=\"#000\"\r\n                      size=\"0.7rem\"\r\n                      z=\"1\"\r\n                    >\r\n                      Channel's Website URL\r\n                    </Span>\r\n                  )}\r\n                </Item>\r\n              </ItemH>\r\n\r\n              <Item\r\n                margin=\"15px 0px 0px 0px\"\r\n                flex=\"1\"\r\n                self=\"stretch\"\r\n                align=\"stretch\"\r\n              >\r\n                <Button\r\n                  bg=\"#e20880\"\r\n                  color=\"#fff\"\r\n                  flex=\"1\"\r\n                  radius=\"0px\"\r\n                  padding=\"20px 10px\"\r\n                  disabled={processing == 1 ? true : false}\r\n                >\r\n                  {processing == 1 && (\r\n                    <Loader type=\"Oval\" color=\"#fff\" height={24} width={24} />\r\n                  )}\r\n                  {processing != 1 && (\r\n                    <Input\r\n                      cursor=\"hand\"\r\n                      textTransform=\"uppercase\"\r\n                      color=\"#fff\"\r\n                      weight=\"400\"\r\n                      size=\"0.8em\"\r\n                      spacing=\"0.2em\"\r\n                      type=\"submit\"\r\n                      value=\"Setup Channel\"\r\n                    />\r\n                  )}\r\n                </Button>\r\n              </Item>\r\n            </FormSubmision>\r\n          </Content>\r\n        </Section>\r\n      )}\r\n\r\n      {/* Channel Setup Progress */}\r\n      {(processing == 1 || processing == 3) && (\r\n        <Section>\r\n          <Content padding=\"0px 0px 0px 0px\">\r\n            {processing == 1 && (\r\n              <Item margin=\"20px 0px 10px 0px\">\r\n                <Loader type=\"Oval\" color=\"#000\" height={24} width={24} />\r\n              </Item>\r\n            )}\r\n\r\n            <Item\r\n              color=\"#fff\"\r\n              bg={processing == 1 ? \"#e1087f\" : \"#000\"}\r\n              padding=\"10px 15px\"\r\n              margin=\"15px 0px\"\r\n            >\r\n              <Span\r\n                color=\"#fff\"\r\n                textTransform=\"uppercase\"\r\n                spacing=\"0.1em\"\r\n                weight=\"400\"\r\n                size=\"1em\"\r\n              >\r\n                {processingInfo}\r\n              </Span>\r\n            </Item>\r\n          </Content>\r\n        </Section>\r\n      )}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst SpanR = styled.div`\r\ncolor: #e20880;\r\nopacity: 0.7;\r\nposition: absolute;\r\nbottom: 0px;\r\nright: 0.8rem;\r\nz-index: 1;\r\n`;\r\n\r\nconst Step = styled.div`\r\n  height: 12px;\r\n  width: 12px;\r\n  background: ${(props) => props.bg || \"#fff\"};\r\n  border: 4px solid ${(props) => props.activeBG || \"#000\"};\r\n  border-radius: 100%;\r\n\r\n  ${({ type }) =>\r\n    type == \"active\" &&\r\n    css`\r\n      background: ${(props) => props.activeBG || \"#ddd\"};\r\n      border: 4px solid #00000022;\r\n    `};\r\n`;\r\n\r\nconst Line = styled.div`\r\n  position: absolute;\r\n  height: 5px;\r\n  background: #f1f1f1;\r\n  right: 0;\r\n  left: 0;\r\n  margin: 0px 10px;\r\n  z-index: -1;\r\n`;\r\n\r\nconst Channel = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n`;\r\n\r\nconst Notice = styled.div`\r\n  margin-top: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: #674c9f;\r\n  font-size: 30px;\r\n  font-weight: 300;\r\n  margin-top: 0px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst Info = styled.label`\r\n  padding-bottom: 20px;\r\n  font-size: 14px;\r\n  color: #000;\r\n`;\r\n\r\nconst Info2 = styled(Info)``;\r\nconst Name = styled(Input)`\r\n  border-bottom: 1px solid #e20880;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst ShortInfo = styled.textarea`\r\n  outline: 0;\r\n  border: 0;\r\n  border-bottom: 1px solid #35c5f3;\r\n  margin: 10px;\r\n  font-size: 18px;\r\n  min-height: 80px;\r\n  color: #111;\r\n`;\r\n\r\nconst Url = styled(Input)`\r\n  border-bottom: 1px solid #674c9f;\r\n  font-size: 1=8px;\r\n`;\r\n\r\nconst Text = styled.span``;\r\n\r\nconst Continue = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  background: ${(props) => props.theme || \"#674c9f\"};\r\n  margin: 30px 0px 0px 0px;\r\n  border-radius: 8px;\r\n  padding: 16px;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n`;\r\nconst Minter = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: 13px;\r\n`;\r\n\r\nconst ChannelMetaBox = styled.label`\r\n  margin: 0px 5px;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n  font-size: 15px;\r\n  // font-size: 11px;\r\n`;\r\nconst Pool = styled.div`\r\n  margin: 0px 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst PoolShare = styled(ChannelMetaBox)`\r\n  background: #e20880;\r\n  // background: #674c9f;\r\n  transition: 300ms;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 0.7;\r\n  }\r\n\r\n  &:active {\r\n    opacity: 0.85;\r\n  }\r\n`;\r\n\r\n// Export Default\r\nexport default CreateChannel;\r\n","(function() {\r\n\t// The random number is a js implementation of the Xorshift PRNG\r\n\tvar randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\r\n\r\n\tfunction seedrand(seed) {\r\n\t\tfor (var i = 0; i < randseed.length; i++) {\r\n\t\t\trandseed[i] = 0;\r\n\t\t}\r\n\t\tfor (var i = 0; i < seed.length; i++) {\r\n\t\t\trandseed[i%4] = ((randseed[i%4] << 5) - randseed[i%4]) + seed.charCodeAt(i);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction rand() {\r\n\t\t// based on Java's String.hashCode(), expanded to 4 32bit values\r\n\t\tvar t = randseed[0] ^ (randseed[0] << 11);\r\n\r\n\t\trandseed[0] = randseed[1];\r\n\t\trandseed[1] = randseed[2];\r\n\t\trandseed[2] = randseed[3];\r\n\t\trandseed[3] = (randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8));\r\n\r\n\t\treturn (randseed[3]>>>0) / ((1 << 31)>>>0);\r\n\t}\r\n\r\n\tfunction createColor() {\r\n\t\t//saturation is the whole color spectrum\r\n\t\tvar h = Math.floor(rand() * 360);\r\n\t\t//saturation goes from 40 to 100, it avoids greyish colors\r\n\t\tvar s = ((rand() * 60) + 40) + '%';\r\n\t\t//lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\r\n\t\tvar l = ((rand()+rand()+rand()+rand()) * 25) + '%';\r\n\r\n\t\tvar color = 'hsl(' + h + ',' + s + ',' + l + ')';\r\n\t\treturn color;\r\n\t}\r\n\r\n\tfunction createImageData(size) {\r\n\t\tvar width = size; // Only support square icons for now\r\n\t\tvar height = size;\r\n\r\n\t\tvar dataWidth = Math.ceil(width / 2);\r\n\t\tvar mirrorWidth = width - dataWidth;\r\n\r\n\t\tvar data = [];\r\n\t\tfor(var y = 0; y < height; y++) {\r\n\t\t\tvar row = [];\r\n\t\t\tfor(var x = 0; x < dataWidth; x++) {\r\n\t\t\t\t// this makes foreground and background color to have a 43% (1/2.3) probability\r\n\t\t\t\t// spot color has 13% chance\r\n\t\t\t\trow[x] = Math.floor(rand()*2.3);\r\n\t\t\t}\r\n\t\t\tvar r = row.slice(0, mirrorWidth);\r\n\t\t\tr.reverse();\r\n\t\t\trow = row.concat(r);\r\n\r\n\t\t\tfor(var i = 0; i < row.length; i++) {\r\n\t\t\t\tdata.push(row[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tfunction buildOpts(opts) {\r\n\t\tvar newOpts = {};\r\n\r\n\t\tnewOpts.seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);\r\n\r\n\t\tseedrand(newOpts.seed);\r\n\r\n\t\tnewOpts.size = opts.size || 8;\r\n\t\tnewOpts.scale = opts.scale || 4;\r\n\t\tnewOpts.color = opts.color || createColor();\r\n\t\tnewOpts.bgcolor = opts.bgcolor || createColor();\r\n\t\tnewOpts.spotcolor = opts.spotcolor || createColor();\r\n\r\n\t\treturn newOpts;\r\n\t}\r\n\r\n\tfunction renderIcon(opts, canvas) {\r\n\t\topts = buildOpts(opts || {});\r\n\t\tvar imageData = createImageData(opts.size);\r\n\t\tvar width = Math.sqrt(imageData.length);\r\n\r\n\t\tcanvas.width = canvas.height = opts.size * opts.scale;\r\n\r\n\t\tvar cc = canvas.getContext('2d');\r\n\t\tcc.fillStyle = opts.bgcolor;\r\n\t\tcc.fillRect(0, 0, canvas.width, canvas.height);\r\n\t\tcc.fillStyle = opts.color;\r\n\r\n\t\tfor(var i = 0; i < imageData.length; i++) {\r\n\r\n\t\t\t// if data is 0, leave the background\r\n\t\t\tif(imageData[i]) {\r\n\t\t\t\tvar row = Math.floor(i / width);\r\n\t\t\t\tvar col = i % width;\r\n\r\n\t\t\t\t// if data is 2, choose spot color, if 1 choose foreground\r\n\t\t\t\tcc.fillStyle = (imageData[i] == 1) ? opts.color : opts.spotcolor;\r\n\r\n\t\t\t\tcc.fillRect(col * opts.scale, row * opts.scale, opts.scale, opts.scale);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\tfunction createIcon(opts) {\r\n\t\tvar canvas = document.createElement('canvas');\r\n\r\n\t\trenderIcon(opts, canvas);\r\n\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\tvar api = {\r\n\t\tcreate: createIcon,\r\n\t\trender: renderIcon\r\n\t};\r\n\r\n\tif (typeof module !== \"undefined\") {\r\n\t\tmodule.exports = api;\r\n\t}\r\n\tif (typeof window !== \"undefined\") {\r\n\t\t window.blockies = api;\r\n\t}\r\n\r\n})();\r\n","import React from \"react\";\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { ethers, utils, BigNumber} from \"ethers\";\r\n// import { parseEther, bigNumber } from 'ethers/utils'\r\nconst claims = require(\"config/airdrop/claims.json\")\r\n\r\n// Airdrop Helper Functions\r\nconst AirdropHelper = {\r\n    combinedHash : (first, second) => {\r\n        if (!first) {\r\n          return second\r\n        }\r\n        if (!second) {\r\n          return first\r\n        }\r\n      \r\n        return Buffer.from(\r\n          utils.solidityKeccak256(['bytes32', 'bytes32'], [first, second].sort(Buffer.compare)).slice(2),\r\n          'hex'\r\n        )\r\n    },\r\n      \r\n    toNode : (index, account, amount) => {\r\n    const pairHex = utils.solidityKeccak256(['uint256', 'address', 'uint256'], [index, account, amount])\r\n    return Buffer.from(pairHex.slice(2), 'hex')\r\n    },\r\n      \r\n    verifyProof : (\r\n    index,\r\n    account,\r\n    amount,\r\n    proof,\r\n    root\r\n    ) => {\r\n    let pair = AirdropHelper.toNode(index, account, amount)\r\n    for (const item of proof) {\r\n        pair = AirdropHelper.combinedHash(pair, item)\r\n    }\r\n    \r\n    return pair.equals(root)\r\n    },\r\n      \r\n    getNextLayer : (elements) => {\r\n    return elements.reduce((layer, el, idx, arr) => {\r\n        if (idx % 2 === 0) {\r\n        // Hash the current element with its pair element\r\n        layer.push(AirdropHelper.combinedHash(el, arr[idx + 1]))\r\n        }\r\n    \r\n        return layer\r\n    }, [])\r\n    },\r\n      \r\n    getRoot : (balances) => {\r\n    let nodes = balances\r\n        .map(({ account, amount, index }) => AirdropHelper.toNode(index, account, amount))\r\n        // sort by lexicographical order\r\n        .sort(Buffer.compare)\r\n    \r\n    // deduplicate any eleents\r\n    nodes = nodes.filter((el, idx) => {\r\n        return idx === 0 || !nodes[idx - 1].equals(el)\r\n    })\r\n    \r\n    const layers = []\r\n    layers.push(nodes)\r\n    \r\n    // Get next layer until we reach the root\r\n    while (layers[layers.length - 1].length > 1) {\r\n        layers.push(AirdropHelper.getNextLayer(layers[layers.length - 1]))\r\n    }\r\n    \r\n    return layers[layers.length - 1][0]\r\n    },\r\n\r\n\r\n    verifyAddress: async (user, contract) => {\r\n        const enableLogs = 1;\r\n        const merkleRootHex = claims.merkleRoot\r\n        const merkleRoot = Buffer.from(merkleRootHex.slice(2), 'hex')\r\n        if(claims.claims[user]){\r\n            const claim = claims.claims[user]\r\n        const proof = claim.proof.map((p) => Buffer.from(p.slice(2), 'hex'))\r\n        const verified = (AirdropHelper.verifyProof(claim.index, user, claim.amount, proof, merkleRoot))\r\n        let txPromise = await contract.isClaimed(claim.index)\r\n        const isClaimed = await txPromise\r\n        const claimable = !isClaimed\r\n        const BNamount = BigNumber.from(claim.amount)\r\n        const amount = BNamount.toNumber()\r\n        // const amount = ethers.utils.parseEther(num)\r\n        return({ index: claim.index, account: user, amount, proof, merkleRoot, verified, claimable})\r\n        }\r\n        else\r\n        return({verified: false})\r\n    },\r\n\r\n  \r\n\r\n}\r\n\r\nexport default AirdropHelper;\r\n"],"sourceRoot":""}